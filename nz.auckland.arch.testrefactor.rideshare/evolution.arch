<?xml version="1.0" encoding="ASCII"?>
<arch:MigrationModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arch="http://www.example.org/arch">
  <source href="current.arch#/"/>
  <interimmodels description="payment - setup-connector" nextModel="//@interimmodels.1">
    <designmodel name="payment">
      <component name="PassengerUI" type="client">
        <port name="call" role="//@interimmodels.0/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="callride"/>
        </port>
        <port name="pay" role="//@interimmodels.0/@designmodel/@connector.6/@role.0" type="request,OutboundPort">
          <events name="issuepay"/>
        </port>
        <port name="plogin" role="//@interimmodels.0/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="login"/>
        </port>
      </component>
      <component name="TripMgmt" type="server,eventsource,datareader,readendpoint">
        <port name="accept" role="//@interimmodels.0/@designmodel/@connector.0/@role.1 //@interimmodels.0/@designmodel/@connector.1/@role.0 //@interimmodels.0/@designmodel/@connector.2/@role.0" type="response,publish,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="acknowledged"/>
        </port>
      </component>
      <component name="DriverUI" type="client,eventconsumer,commandendpoint,listener">
        <port name="notify" role="//@interimmodels.0/@designmodel/@connector.1/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
        <port name="dlogin" role="//@interimmodels.0/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="login"/>
        </port>
        <port name="locate" role="//@interimmodels.0/@designmodel/@connector.5/@role.0" type="issue,OutboundPort,EventProcessorPort">
          <events name="located"/>
        </port>
      </component>
      <component name="DriverRecord" type="viewdb,datastore">
        <port name="driverquery" role="//@interimmodels.0/@designmodel/@connector.2/@role.1" type="update,query,InboundPort,EventProcessorPort">
          <events name="quried"/>
        </port>
        <port name="driverupdate" role="//@interimmodels.0/@designmodel/@connector.5/@role.1" type="update,query,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Payment" type="server,reverseoracle">
        <port name="record" role="//@interimmodels.0/@designmodel/@connector.6/@role.1" type="TamperingProofPort">
          <events name="payrecorded"/>
        </port>
        <port name="list" role="//@interimmodels.0/@designmodel/@connector.7/@role.1" type="response,blockquery,OutboundPort,InboundPort,TamperingProofPort">
          <events name="listed"/>
        </port>
      </component>
      <component name="BillingGateway" type="client">
        <port name="process" role="//@interimmodels.0/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="SignOn" type="server,datareader,readendpoint">
        <port name="auth" role="//@interimmodels.0/@designmodel/@connector.3/@role.1 //@interimmodels.0/@designmodel/@connector.4/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="authenticated"/>
        </port>
      </component>
      <component name="UserDB" type="repository,datastore">
        <port name="find" role="//@interimmodels.0/@designmodel/@connector.4/@role.1" type="access,InboundPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="AssignwireLog" type="eventlogger,datastore">
        <port name="logassign" role="//@interimmodels.0/@designmodel/@connector.1/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
      </component>
      <component name="DriverupdatewireCommandLog" type="commanddb,datastore">
        <port name="logdriver" role="//@interimmodels.0/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
      </component>
      <connector name="callwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.2/@role.0" connector="//@interimmodels.0/@designmodel/@connector.0"/>
      </connector>
      <connector name="assignwire" type="ESConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0">
        <role name="eventpublisher" roletype="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.1"/>
        <role name="eventsubscriber" roletype="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.1"/>
        <role name="eventstore" roletype="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2" type="in" connector="//@interimmodels.0/@designmodel/@connector.1"/>
      </connector>
      <connector name="driverquerywire" type="QRConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0">
        <role name="querier" roletype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.1/@role.0" connector="//@interimmodels.0/@designmodel/@connector.2"/>
        <role name="readstore" roletype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.2"/>
      </connector>
      <connector name="authwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.4/@role.0" connector="//@interimmodels.0/@designmodel/@connector.3"/>
      </connector>
      <connector name="userquerywire" type="REConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.4"/>
      </connector>
      <connector name="driverupdatewire" type="CRConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0">
        <role name="commander" roletype="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.1" type="out" connector="//@interimmodels.0/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0" type="in" connector="//@interimmodels.0/@designmodel/@connector.5"/>
        <role name="commandstore" roletype="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.2" type="in" connector="//@interimmodels.0/@designmodel/@connector.5"/>
      </connector>
      <connector name="paywire" type="WRConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0" type="writer" connector="//@interimmodels.0/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1" type="writestorage" connector="//@interimmodels.0/@designmodel/@connector.6"/>
      </connector>
      <connector name="billwire" type="REConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader" connector="//@interimmodels.0/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage" connector="//@interimmodels.0/@designmodel/@connector.7"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="out" connector="//@interimmodels.0/@designmodel/@connector.8">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="in" connector="//@interimmodels.0/@designmodel/@connector.8">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.0/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.0/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.0/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.0/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.0/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.0/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.0/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.0/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.0/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.0/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.0/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.0/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.0/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.0/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.0/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.0/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.0/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.0/@designmodel" visitedStates="197" verifyTime="0.085503" testport="//@interimmodels.0/@designmodel/@component.0/@port.0" traceExample="init -> PassengerUI_call_callride -> PassengerUI_callwire_requester_process -> callwire_req!24 -> callwire_req?24 -> TripMgmt_callwire_responder_invoke -> TripMgmt_accept_acknowledged -> TripMgmt_driverquerywire_querier_process -> driverquerywire_stmt!24 -> driverquerywire_stmt?24 -> DriverRecord_driverquery_quried -> DriverRecord_driverquerywire_readstore_process -> driverquerywire_res!24 -> driverquerywire_res?24 -> TripMgmt_driverquerywire_querier_Skip -> TripMgmt_assignwire_eventpublisher_process -> assignwire_pevt!24 -> assignwire_pevt?24 -> AssignwireLog_logassign_logged -> AssignwireLog_assignwire_eventstore_process -> assignwire_sevt!24 -> AssignwireLog_assignwire_eventstore_persist -> assignwire_sevt?24 -> assignwire_bevt!24 -> assignwire_bevt?24 -> DriverUI_notify_notified -> DriverUI_assignwire_eventsubscriber_process -> TripMgmt_assignwire_eventpublisher_broadcast -> TripMgmt_assignwire_eventpublisher_Skip -> TripMgmt_callwire_responder_process -> callwire_res!24 -> callwire_res?24" exprText="[]  (PassengerUI.call.callride -> &lt;> DriverUI.notify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.0/@designmodel" visitedStates="131" verifyTime="0.006578499999999999" testport="//@interimmodels.0/@designmodel/@component.0/@port.0" traceExample="init -> PassengerUI_call_callride -> PassengerUI_callwire_requester_process -> callwire_req!72 -> callwire_req?72 -> TripMgmt_callwire_responder_invoke -> TripMgmt_accept_acknowledged -> TripMgmt_driverquerywire_querier_process -> driverquerywire_stmt!72 -> driverquerywire_stmt?72 -> DriverRecord_driverquery_quried -> DriverRecord_driverquerywire_readstore_process -> driverquerywire_res!72 -> driverquerywire_res?72 -> TripMgmt_driverquerywire_querier_Skip -> TripMgmt_assignwire_eventpublisher_process -> assignwire_pevt!72 -> assignwire_pevt?72 -> AssignwireLog_logassign_logged -> AssignwireLog_assignwire_eventstore_process -> assignwire_sevt!72 -> AssignwireLog_assignwire_eventstore_persist -> assignwire_sevt?72 -> assignwire_bevt!72 -> assignwire_bevt?72 -> DriverUI_notify_notified -> DriverUI_assignwire_eventsubscriber_process -> TripMgmt_assignwire_eventpublisher_broadcast -> TripMgmt_assignwire_eventpublisher_Skip -> TripMgmt_callwire_responder_process -> callwire_res!72 -> callwire_res?72" exprText="[]  (TripMgmt.accept.acknowledged -> &lt;> DriverRecord.driverquery.quried)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="10" verifyTime="0.0050953" testport="//@interimmodels.0/@designmodel/@component.0/@port.1" traceExample="init -> PassengerUI_pay_issuepay -> PassengerUI_paywire_writer_process -> paywire_req!64 -> paywire_req?64 -> Payment_paywire_writestorage_invoke -> Payment_record_payrecorded -> Payment_paywire_writestorage_process -> paywire_res!64 -> paywire_res?64" exprText="[]  (BillingGateway.process.processed -> &lt;> Payment.list.listed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.4/@port.1/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.0/@designmodel" visitedStates="24" verifyTime="0.0044913999999999996" testport="//@interimmodels.0/@designmodel/@component.0/@port.2" traceExample="init -> PassengerUI_plogin_login -> PassengerUI_authwire_requester_process -> authwire_req!57 -> authwire_req?57 -> SignOn_authwire_responder_invoke -> SignOn_auth_authenticated -> SignOn_userquerywire_reader_process -> userquerywire_req!57 -> userquerywire_req?57 -> UserDB_userquerywire_readstorage_invoke -> UserDB_find_queried -> UserDB_userquerywire_readstorage_process -> userquerywire_res!57 -> userquerywire_res?57 -> SignOn_userquerywire_reader_Skip -> SignOn_authwire_responder_process -> authwire_res!57 -> authwire_res?57" exprText="[]  (PassengerUI.plogin.login -> &lt;> SignOn.auth.authenticated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.0/@port.2/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.0/@designmodel" visitedStates="29" verifyTime="0.0046748" testport="//@interimmodels.0/@designmodel/@component.2/@port.1" traceExample="init -> DriverUI_dlogin_login -> DriverUI_authwire_requester_process -> authwire_req!32 -> authwire_req?32 -> SignOn_authwire_responder_invoke -> SignOn_auth_authenticated -> SignOn_userquerywire_reader_process -> userquerywire_req!32 -> userquerywire_req?32 -> UserDB_userquerywire_readstorage_invoke -> UserDB_find_queried -> UserDB_userquerywire_readstorage_process -> userquerywire_res!32 -> userquerywire_res?32 -> SignOn_userquerywire_reader_Skip -> SignOn_authwire_responder_process -> authwire_res!32 -> authwire_res?32" exprText="[]  (DriverUI.dlogin.login -> &lt;> UserDB.find.queried)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.2/@port.1/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.0/@designmodel/@component.0/@port.1" exprText="[]  (PassengerUI.pay.issuepay -> &lt;> paymentgatewayref.commitref.checked)"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="1" description="payment - establish-link" nextModel="//@interimmodels.2">
    <designmodel name="sso">
      <component name="PassengerUI" type="client">
        <port name="call" role="//@interimmodels.1/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="callride"/>
        </port>
        <port name="pay" role="//@interimmodels.1/@designmodel/@connector.6/@role.0 //@interimmodels.1/@designmodel/@connector.8/@role.0" type="request,OutboundPort">
          <events name="issuepay"/>
        </port>
        <port name="plogin" role="//@interimmodels.1/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="login"/>
        </port>
      </component>
      <component name="TripMgmt" type="server,eventsource,datareader,readendpoint">
        <port name="accept" role="//@interimmodels.1/@designmodel/@connector.0/@role.1 //@interimmodels.1/@designmodel/@connector.1/@role.0 //@interimmodels.1/@designmodel/@connector.2/@role.0" type="response,publish,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="acknowledged"/>
        </port>
      </component>
      <component name="DriverUI" type="client,eventconsumer,commandendpoint,listener">
        <port name="notify" role="//@interimmodels.1/@designmodel/@connector.1/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
        <port name="dlogin" role="//@interimmodels.1/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="login"/>
        </port>
        <port name="locate" role="//@interimmodels.1/@designmodel/@connector.5/@role.0" type="issue,OutboundPort,EventProcessorPort">
          <events name="located"/>
        </port>
      </component>
      <component name="DriverRecord" type="viewdb,datastore">
        <port name="driverquery" role="//@interimmodels.1/@designmodel/@connector.2/@role.1" type="update,query,InboundPort,EventProcessorPort">
          <events name="quried"/>
        </port>
        <port name="driverupdate" role="//@interimmodels.1/@designmodel/@connector.5/@role.1" type="update,query,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Payment" type="server,reverseoracle">
        <port name="record" role="//@interimmodels.1/@designmodel/@connector.6/@role.1" type="TamperingProofPort">
          <events name="payrecorded"/>
        </port>
        <port name="list" role="//@interimmodels.1/@designmodel/@connector.7/@role.1" type="response,blockquery,OutboundPort,InboundPort,TamperingProofPort">
          <events name="listed"/>
        </port>
      </component>
      <component name="BillingGateway" type="client">
        <port name="process" role="//@interimmodels.1/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="SignOn" type="server,datareader,readendpoint">
        <port name="auth" role="//@interimmodels.1/@designmodel/@connector.3/@role.1 //@interimmodels.1/@designmodel/@connector.4/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="authenticated"/>
        </port>
      </component>
      <component name="UserDB" type="repository,datastore">
        <port name="find" role="//@interimmodels.1/@designmodel/@connector.4/@role.1" type="access,InboundPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="AssignwireLog" type="eventlogger,datastore">
        <port name="logassign" role="//@interimmodels.1/@designmodel/@connector.1/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
      </component>
      <component name="DriverupdatewireCommandLog" type="commanddb,datastore">
        <port name="logdriver" role="//@interimmodels.1/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
      </component>
      <connector name="callwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.2/@role.0" connector="//@interimmodels.1/@designmodel/@connector.0"/>
      </connector>
      <connector name="assignwire" type="ESConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0">
        <role name="eventpublisher" roletype="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.1"/>
        <role name="eventsubscriber" roletype="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.1"/>
        <role name="eventstore" roletype="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2" type="in" connector="//@interimmodels.1/@designmodel/@connector.1"/>
      </connector>
      <connector name="driverquerywire" type="QRConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0">
        <role name="querier" roletype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.1/@role.0" connector="//@interimmodels.1/@designmodel/@connector.2"/>
        <role name="readstore" roletype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.2"/>
      </connector>
      <connector name="authwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.4/@role.0" connector="//@interimmodels.1/@designmodel/@connector.3"/>
      </connector>
      <connector name="userquerywire" type="REConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.4"/>
      </connector>
      <connector name="driverupdatewire" type="CRConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0">
        <role name="commander" roletype="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.1" type="out" connector="//@interimmodels.1/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0" type="in" connector="//@interimmodels.1/@designmodel/@connector.5"/>
        <role name="commandstore" roletype="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.2" type="in" connector="//@interimmodels.1/@designmodel/@connector.5"/>
      </connector>
      <connector name="paywire" type="WRConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0" type="writer" connector="//@interimmodels.1/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1" type="writestorage" connector="//@interimmodels.1/@designmodel/@connector.6"/>
      </connector>
      <connector name="billwire" type="REConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader" connector="//@interimmodels.1/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage" connector="//@interimmodels.1/@designmodel/@connector.7"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" connector="//@interimmodels.1/@designmodel/@connector.8">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="in" connector="//@interimmodels.1/@designmodel/@connector.8">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.1/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.1/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.1/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.1/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.1/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.1/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.1/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.1/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.1/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.1/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.1/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.1/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.1/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.1/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.1/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.1/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.1/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.1/@designmodel" visitedStates="197" verifyTime="0.085503" testport="//@interimmodels.1/@designmodel/@component.0/@port.0" traceExample="init -> PassengerUI_call_callride -> PassengerUI_callwire_requester_process -> callwire_req!24 -> callwire_req?24 -> TripMgmt_callwire_responder_invoke -> TripMgmt_accept_acknowledged -> TripMgmt_driverquerywire_querier_process -> driverquerywire_stmt!24 -> driverquerywire_stmt?24 -> DriverRecord_driverquery_quried -> DriverRecord_driverquerywire_readstore_process -> driverquerywire_res!24 -> driverquerywire_res?24 -> TripMgmt_driverquerywire_querier_Skip -> TripMgmt_assignwire_eventpublisher_process -> assignwire_pevt!24 -> assignwire_pevt?24 -> AssignwireLog_logassign_logged -> AssignwireLog_assignwire_eventstore_process -> assignwire_sevt!24 -> AssignwireLog_assignwire_eventstore_persist -> assignwire_sevt?24 -> assignwire_bevt!24 -> assignwire_bevt?24 -> DriverUI_notify_notified -> DriverUI_assignwire_eventsubscriber_process -> TripMgmt_assignwire_eventpublisher_broadcast -> TripMgmt_assignwire_eventpublisher_Skip -> TripMgmt_callwire_responder_process -> callwire_res!24 -> callwire_res?24" exprText="[]  (PassengerUI.call.callride -> &lt;> DriverUI.notify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.1/@designmodel" visitedStates="131" verifyTime="0.006578499999999999" testport="//@interimmodels.1/@designmodel/@component.0/@port.0" traceExample="init -> PassengerUI_call_callride -> PassengerUI_callwire_requester_process -> callwire_req!72 -> callwire_req?72 -> TripMgmt_callwire_responder_invoke -> TripMgmt_accept_acknowledged -> TripMgmt_driverquerywire_querier_process -> driverquerywire_stmt!72 -> driverquerywire_stmt?72 -> DriverRecord_driverquery_quried -> DriverRecord_driverquerywire_readstore_process -> driverquerywire_res!72 -> driverquerywire_res?72 -> TripMgmt_driverquerywire_querier_Skip -> TripMgmt_assignwire_eventpublisher_process -> assignwire_pevt!72 -> assignwire_pevt?72 -> AssignwireLog_logassign_logged -> AssignwireLog_assignwire_eventstore_process -> assignwire_sevt!72 -> AssignwireLog_assignwire_eventstore_persist -> assignwire_sevt?72 -> assignwire_bevt!72 -> assignwire_bevt?72 -> DriverUI_notify_notified -> DriverUI_assignwire_eventsubscriber_process -> TripMgmt_assignwire_eventpublisher_broadcast -> TripMgmt_assignwire_eventpublisher_Skip -> TripMgmt_callwire_responder_process -> callwire_res!72 -> callwire_res?72" exprText="[]  (TripMgmt.accept.acknowledged -> &lt;> DriverRecord.driverquery.quried)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="10" verifyTime="0.0050953" testport="//@interimmodels.1/@designmodel/@component.0/@port.1" traceExample="init -> PassengerUI_pay_issuepay -> PassengerUI_paywire_writer_process -> paywire_req!64 -> paywire_req?64 -> Payment_paywire_writestorage_invoke -> Payment_record_payrecorded -> Payment_paywire_writestorage_process -> paywire_res!64 -> paywire_res?64" exprText="[]  (BillingGateway.process.processed -> &lt;> Payment.list.listed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.4/@port.1/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.1/@designmodel" visitedStates="24" verifyTime="0.0044913999999999996" testport="//@interimmodels.1/@designmodel/@component.0/@port.2" traceExample="init -> PassengerUI_plogin_login -> PassengerUI_authwire_requester_process -> authwire_req!57 -> authwire_req?57 -> SignOn_authwire_responder_invoke -> SignOn_auth_authenticated -> SignOn_userquerywire_reader_process -> userquerywire_req!57 -> userquerywire_req?57 -> UserDB_userquerywire_readstorage_invoke -> UserDB_find_queried -> UserDB_userquerywire_readstorage_process -> userquerywire_res!57 -> userquerywire_res?57 -> SignOn_userquerywire_reader_Skip -> SignOn_authwire_responder_process -> authwire_res!57 -> authwire_res?57" exprText="[]  (PassengerUI.plogin.login -> &lt;> SignOn.auth.authenticated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.0/@port.2/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.1/@designmodel" visitedStates="29" verifyTime="0.0046748" testport="//@interimmodels.1/@designmodel/@component.2/@port.1" traceExample="init -> DriverUI_dlogin_login -> DriverUI_authwire_requester_process -> authwire_req!32 -> authwire_req?32 -> SignOn_authwire_responder_invoke -> SignOn_auth_authenticated -> SignOn_userquerywire_reader_process -> userquerywire_req!32 -> userquerywire_req?32 -> UserDB_userquerywire_readstorage_invoke -> UserDB_find_queried -> UserDB_userquerywire_readstorage_process -> userquerywire_res!32 -> userquerywire_res?32 -> SignOn_userquerywire_reader_Skip -> SignOn_authwire_responder_process -> authwire_res!32 -> authwire_res?32" exprText="[]  (DriverUI.dlogin.login -> &lt;> UserDB.find.queried)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.2/@port.1/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.1/@designmodel/@component.0/@port.1" exprText="[]  (PassengerUI.pay.issuepay -> &lt;> paymentgatewayref.commitref.checked)"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="2" description="payment - setup-component" nextModel="//@interimmodels.3">
    <designmodel name="delivery">
      <component name="PassengerUI" type="client">
        <port name="call" role="//@interimmodels.2/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="callride"/>
        </port>
        <port name="pay" role="//@interimmodels.2/@designmodel/@connector.6/@role.0 //@interimmodels.2/@designmodel/@connector.8/@role.0" type="request,OutboundPort">
          <events name="issuepay"/>
        </port>
        <port name="plogin" role="//@interimmodels.2/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="login"/>
        </port>
      </component>
      <component name="TripMgmt" type="server,eventsource,datareader,readendpoint">
        <port name="accept" role="//@interimmodels.2/@designmodel/@connector.0/@role.1 //@interimmodels.2/@designmodel/@connector.1/@role.0 //@interimmodels.2/@designmodel/@connector.2/@role.0" type="response,publish,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="acknowledged"/>
        </port>
      </component>
      <component name="DriverUI" type="client,eventconsumer,commandendpoint,listener">
        <port name="notify" role="//@interimmodels.2/@designmodel/@connector.1/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
        <port name="dlogin" role="//@interimmodels.2/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="login"/>
        </port>
        <port name="locate" role="//@interimmodels.2/@designmodel/@connector.5/@role.0" type="issue,OutboundPort,EventProcessorPort">
          <events name="located"/>
        </port>
      </component>
      <component name="DriverRecord" type="viewdb,datastore">
        <port name="driverquery" role="//@interimmodels.2/@designmodel/@connector.2/@role.1" type="update,query,InboundPort,EventProcessorPort">
          <events name="quried"/>
        </port>
        <port name="driverupdate" role="//@interimmodels.2/@designmodel/@connector.5/@role.1" type="update,query,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Payment" type="server,reverseoracle">
        <port name="record" role="//@interimmodels.2/@designmodel/@connector.6/@role.1" type="TamperingProofPort">
          <events name="payrecorded"/>
        </port>
        <port name="list" role="//@interimmodels.2/@designmodel/@connector.7/@role.1" type="response,blockquery,OutboundPort,InboundPort,TamperingProofPort">
          <events name="listed"/>
        </port>
      </component>
      <component name="BillingGateway" type="client">
        <port name="process" role="//@interimmodels.2/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="SignOn" type="server,datareader,readendpoint">
        <port name="auth" role="//@interimmodels.2/@designmodel/@connector.3/@role.1 //@interimmodels.2/@designmodel/@connector.4/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="authenticated"/>
        </port>
      </component>
      <component name="UserDB" type="repository,datastore">
        <port name="find" role="//@interimmodels.2/@designmodel/@connector.4/@role.1" type="access,InboundPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="AssignwireLog" type="eventlogger,datastore">
        <port name="logassign" role="//@interimmodels.2/@designmodel/@connector.1/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
      </component>
      <component name="DriverupdatewireCommandLog" type="commanddb,datastore">
        <port name="logdriver" role="//@interimmodels.2/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref">
          <events name="checked"/>
        </port>
      </component>
      <connector name="callwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.2/@role.0" connector="//@interimmodels.2/@designmodel/@connector.0"/>
      </connector>
      <connector name="assignwire" type="ESConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0">
        <role name="eventpublisher" roletype="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.1"/>
        <role name="eventsubscriber" roletype="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.1"/>
        <role name="eventstore" roletype="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2" type="in" connector="//@interimmodels.2/@designmodel/@connector.1"/>
      </connector>
      <connector name="driverquerywire" type="QRConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0">
        <role name="querier" roletype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.1/@role.0" connector="//@interimmodels.2/@designmodel/@connector.2"/>
        <role name="readstore" roletype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.2"/>
      </connector>
      <connector name="authwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.4/@role.0" connector="//@interimmodels.2/@designmodel/@connector.3"/>
      </connector>
      <connector name="userquerywire" type="REConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.4"/>
      </connector>
      <connector name="driverupdatewire" type="CRConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0">
        <role name="commander" roletype="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.1" type="out" connector="//@interimmodels.2/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0" type="in" connector="//@interimmodels.2/@designmodel/@connector.5"/>
        <role name="commandstore" roletype="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.2" type="in" connector="//@interimmodels.2/@designmodel/@connector.5"/>
      </connector>
      <connector name="paywire" type="WRConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0" type="writer" connector="//@interimmodels.2/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1" type="writestorage" connector="//@interimmodels.2/@designmodel/@connector.6"/>
      </connector>
      <connector name="billwire" type="REConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader" connector="//@interimmodels.2/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage" connector="//@interimmodels.2/@designmodel/@connector.7"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" connector="//@interimmodels.2/@designmodel/@connector.8">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="in" connector="//@interimmodels.2/@designmodel/@connector.8">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.2/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.2/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.2/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.2/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.2/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.2/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.2/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.2/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.2/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.2/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.2/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.2/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.2/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.2/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.2/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.2/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.2/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.2/@designmodel" visitedStates="197" verifyTime="0.085503" testport="//@interimmodels.2/@designmodel/@component.0/@port.0" traceExample="init -> PassengerUI_call_callride -> PassengerUI_callwire_requester_process -> callwire_req!24 -> callwire_req?24 -> TripMgmt_callwire_responder_invoke -> TripMgmt_accept_acknowledged -> TripMgmt_driverquerywire_querier_process -> driverquerywire_stmt!24 -> driverquerywire_stmt?24 -> DriverRecord_driverquery_quried -> DriverRecord_driverquerywire_readstore_process -> driverquerywire_res!24 -> driverquerywire_res?24 -> TripMgmt_driverquerywire_querier_Skip -> TripMgmt_assignwire_eventpublisher_process -> assignwire_pevt!24 -> assignwire_pevt?24 -> AssignwireLog_logassign_logged -> AssignwireLog_assignwire_eventstore_process -> assignwire_sevt!24 -> AssignwireLog_assignwire_eventstore_persist -> assignwire_sevt?24 -> assignwire_bevt!24 -> assignwire_bevt?24 -> DriverUI_notify_notified -> DriverUI_assignwire_eventsubscriber_process -> TripMgmt_assignwire_eventpublisher_broadcast -> TripMgmt_assignwire_eventpublisher_Skip -> TripMgmt_callwire_responder_process -> callwire_res!24 -> callwire_res?24" exprText="[]  (PassengerUI.call.callride -> &lt;> DriverUI.notify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.2/@designmodel" visitedStates="131" verifyTime="0.006578499999999999" testport="//@interimmodels.2/@designmodel/@component.0/@port.0" traceExample="init -> PassengerUI_call_callride -> PassengerUI_callwire_requester_process -> callwire_req!72 -> callwire_req?72 -> TripMgmt_callwire_responder_invoke -> TripMgmt_accept_acknowledged -> TripMgmt_driverquerywire_querier_process -> driverquerywire_stmt!72 -> driverquerywire_stmt?72 -> DriverRecord_driverquery_quried -> DriverRecord_driverquerywire_readstore_process -> driverquerywire_res!72 -> driverquerywire_res?72 -> TripMgmt_driverquerywire_querier_Skip -> TripMgmt_assignwire_eventpublisher_process -> assignwire_pevt!72 -> assignwire_pevt?72 -> AssignwireLog_logassign_logged -> AssignwireLog_assignwire_eventstore_process -> assignwire_sevt!72 -> AssignwireLog_assignwire_eventstore_persist -> assignwire_sevt?72 -> assignwire_bevt!72 -> assignwire_bevt?72 -> DriverUI_notify_notified -> DriverUI_assignwire_eventsubscriber_process -> TripMgmt_assignwire_eventpublisher_broadcast -> TripMgmt_assignwire_eventpublisher_Skip -> TripMgmt_callwire_responder_process -> callwire_res!72 -> callwire_res?72" exprText="[]  (TripMgmt.accept.acknowledged -> &lt;> DriverRecord.driverquery.quried)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="10" verifyTime="0.0050953" testport="//@interimmodels.2/@designmodel/@component.0/@port.1" traceExample="init -> PassengerUI_pay_issuepay -> PassengerUI_paywire_writer_process -> paywire_req!64 -> paywire_req?64 -> Payment_paywire_writestorage_invoke -> Payment_record_payrecorded -> Payment_paywire_writestorage_process -> paywire_res!64 -> paywire_res?64" exprText="[]  (BillingGateway.process.processed -> &lt;> Payment.list.listed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.4/@port.1/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.2/@designmodel" visitedStates="24" verifyTime="0.0044913999999999996" testport="//@interimmodels.2/@designmodel/@component.0/@port.2" traceExample="init -> PassengerUI_plogin_login -> PassengerUI_authwire_requester_process -> authwire_req!57 -> authwire_req?57 -> SignOn_authwire_responder_invoke -> SignOn_auth_authenticated -> SignOn_userquerywire_reader_process -> userquerywire_req!57 -> userquerywire_req?57 -> UserDB_userquerywire_readstorage_invoke -> UserDB_find_queried -> UserDB_userquerywire_readstorage_process -> userquerywire_res!57 -> userquerywire_res?57 -> SignOn_userquerywire_reader_Skip -> SignOn_authwire_responder_process -> authwire_res!57 -> authwire_res?57" exprText="[]  (PassengerUI.plogin.login -> &lt;> SignOn.auth.authenticated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.0/@port.2/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.2/@designmodel" visitedStates="29" verifyTime="0.0046748" testport="//@interimmodels.2/@designmodel/@component.2/@port.1" traceExample="init -> DriverUI_dlogin_login -> DriverUI_authwire_requester_process -> authwire_req!32 -> authwire_req?32 -> SignOn_authwire_responder_invoke -> SignOn_auth_authenticated -> SignOn_userquerywire_reader_process -> userquerywire_req!32 -> userquerywire_req?32 -> UserDB_userquerywire_readstorage_invoke -> UserDB_find_queried -> UserDB_userquerywire_readstorage_process -> userquerywire_res!32 -> userquerywire_res?32 -> SignOn_userquerywire_reader_Skip -> SignOn_authwire_responder_process -> authwire_res!32 -> authwire_res?32" exprText="[]  (DriverUI.dlogin.login -> &lt;> UserDB.find.queried)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.2/@port.1/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.2/@designmodel/@component.0/@port.1" exprText="[]  (PassengerUI.pay.issuepay -> &lt;> paymentgatewayref.commitref.checked)"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="3" description="payment - remove-connector" nextModel="//@interimmodels.4">
    <designmodel name="interimpayment3">
      <component name="PassengerUI" type="client">
        <port name="call" role="//@interimmodels.3/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="callride"/>
        </port>
        <port name="pay" role="//@interimmodels.3/@designmodel/@connector.8/@role.0" type="request,OutboundPort">
          <events name="issuepay"/>
        </port>
        <port name="plogin" role="//@interimmodels.3/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="login"/>
        </port>
      </component>
      <component name="TripMgmt" type="server,eventsource,datareader,readendpoint">
        <port name="accept" role="//@interimmodels.3/@designmodel/@connector.0/@role.1 //@interimmodels.3/@designmodel/@connector.1/@role.0 //@interimmodels.3/@designmodel/@connector.2/@role.0" type="response,publish,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="acknowledged"/>
        </port>
      </component>
      <component name="DriverUI" type="client,eventconsumer,commandendpoint,listener">
        <port name="notify" role="//@interimmodels.3/@designmodel/@connector.1/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
        <port name="dlogin" role="//@interimmodels.3/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="login"/>
        </port>
        <port name="locate" role="//@interimmodels.3/@designmodel/@connector.5/@role.0" type="issue,OutboundPort,EventProcessorPort">
          <events name="located"/>
        </port>
      </component>
      <component name="DriverRecord" type="viewdb,datastore">
        <port name="driverquery" role="//@interimmodels.3/@designmodel/@connector.2/@role.1" type="update,query,InboundPort,EventProcessorPort">
          <events name="quried"/>
        </port>
        <port name="driverupdate" role="//@interimmodels.3/@designmodel/@connector.5/@role.1" type="update,query,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Payment" type="server,reverseoracle">
        <port name="record" type="TamperingProofPort">
          <events name="payrecorded"/>
        </port>
        <port name="list" role="//@interimmodels.3/@designmodel/@connector.7/@role.1" type="response,blockquery,OutboundPort,InboundPort,TamperingProofPort">
          <events name="listed"/>
        </port>
      </component>
      <component name="BillingGateway" type="client">
        <port name="process" role="//@interimmodels.3/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="SignOn" type="server,datareader,readendpoint">
        <port name="auth" role="//@interimmodels.3/@designmodel/@connector.3/@role.1 //@interimmodels.3/@designmodel/@connector.4/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="authenticated"/>
        </port>
      </component>
      <component name="UserDB" type="repository,datastore">
        <port name="find" role="//@interimmodels.3/@designmodel/@connector.4/@role.1" type="access,InboundPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="AssignwireLog" type="eventlogger,datastore">
        <port name="logassign" role="//@interimmodels.3/@designmodel/@connector.1/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
      </component>
      <component name="DriverupdatewireCommandLog" type="commanddb,datastore">
        <port name="logdriver" role="//@interimmodels.3/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref">
          <events name="checked"/>
        </port>
      </component>
      <connector name="callwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.2/@role.0" connector="//@interimmodels.3/@designmodel/@connector.0"/>
      </connector>
      <connector name="assignwire" type="ESConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0">
        <role name="eventpublisher" roletype="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.1"/>
        <role name="eventsubscriber" roletype="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.1"/>
        <role name="eventstore" roletype="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2" type="in" connector="//@interimmodels.3/@designmodel/@connector.1"/>
      </connector>
      <connector name="driverquerywire" type="QRConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0">
        <role name="querier" roletype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.1/@role.0" connector="//@interimmodels.3/@designmodel/@connector.2"/>
        <role name="readstore" roletype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.2"/>
      </connector>
      <connector name="authwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.4/@role.0" connector="//@interimmodels.3/@designmodel/@connector.3"/>
      </connector>
      <connector name="userquerywire" type="REConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.4"/>
      </connector>
      <connector name="driverupdatewire" type="CRConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0">
        <role name="commander" roletype="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.1" type="out" connector="//@interimmodels.3/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0" type="in" connector="//@interimmodels.3/@designmodel/@connector.5"/>
        <role name="commandstore" roletype="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.2" type="in" connector="//@interimmodels.3/@designmodel/@connector.5"/>
      </connector>
      <connector name="paywiretoremove" type="WRConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0">
        <role name="writertoremove" roletype="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0" type="writer" connector="//@interimmodels.3/@designmodel/@connector.6"/>
        <role name="writestoragetoremove" roletype="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1" type="writestorage" connector="//@interimmodels.3/@designmodel/@connector.6"/>
      </connector>
      <connector name="billwire" type="REConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader" connector="//@interimmodels.3/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage" connector="//@interimmodels.3/@designmodel/@connector.7"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" connector="//@interimmodels.3/@designmodel/@connector.8">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="in" connector="//@interimmodels.3/@designmodel/@connector.8">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.3/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.3/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.3/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.3/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.3/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.3/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.3/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.3/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.3/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.3/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.3/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.3/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.3/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.3/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.3/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.3/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.3/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.3/@designmodel" visitedStates="197" verifyTime="0.085503" testport="//@interimmodels.3/@designmodel/@component.0/@port.0" traceExample="init -> PassengerUI_call_callride -> PassengerUI_callwire_requester_process -> callwire_req!24 -> callwire_req?24 -> TripMgmt_callwire_responder_invoke -> TripMgmt_accept_acknowledged -> TripMgmt_driverquerywire_querier_process -> driverquerywire_stmt!24 -> driverquerywire_stmt?24 -> DriverRecord_driverquery_quried -> DriverRecord_driverquerywire_readstore_process -> driverquerywire_res!24 -> driverquerywire_res?24 -> TripMgmt_driverquerywire_querier_Skip -> TripMgmt_assignwire_eventpublisher_process -> assignwire_pevt!24 -> assignwire_pevt?24 -> AssignwireLog_logassign_logged -> AssignwireLog_assignwire_eventstore_process -> assignwire_sevt!24 -> AssignwireLog_assignwire_eventstore_persist -> assignwire_sevt?24 -> assignwire_bevt!24 -> assignwire_bevt?24 -> DriverUI_notify_notified -> DriverUI_assignwire_eventsubscriber_process -> TripMgmt_assignwire_eventpublisher_broadcast -> TripMgmt_assignwire_eventpublisher_Skip -> TripMgmt_callwire_responder_process -> callwire_res!24 -> callwire_res?24" exprText="[]  (PassengerUI.call.callride -> &lt;> DriverUI.notify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.3/@designmodel" visitedStates="131" verifyTime="0.006578499999999999" testport="//@interimmodels.3/@designmodel/@component.0/@port.0" traceExample="init -> PassengerUI_call_callride -> PassengerUI_callwire_requester_process -> callwire_req!72 -> callwire_req?72 -> TripMgmt_callwire_responder_invoke -> TripMgmt_accept_acknowledged -> TripMgmt_driverquerywire_querier_process -> driverquerywire_stmt!72 -> driverquerywire_stmt?72 -> DriverRecord_driverquery_quried -> DriverRecord_driverquerywire_readstore_process -> driverquerywire_res!72 -> driverquerywire_res?72 -> TripMgmt_driverquerywire_querier_Skip -> TripMgmt_assignwire_eventpublisher_process -> assignwire_pevt!72 -> assignwire_pevt?72 -> AssignwireLog_logassign_logged -> AssignwireLog_assignwire_eventstore_process -> assignwire_sevt!72 -> AssignwireLog_assignwire_eventstore_persist -> assignwire_sevt?72 -> assignwire_bevt!72 -> assignwire_bevt?72 -> DriverUI_notify_notified -> DriverUI_assignwire_eventsubscriber_process -> TripMgmt_assignwire_eventpublisher_broadcast -> TripMgmt_assignwire_eventpublisher_Skip -> TripMgmt_callwire_responder_process -> callwire_res!72 -> callwire_res?72" exprText="[]  (TripMgmt.accept.acknowledged -> &lt;> DriverRecord.driverquery.quried)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="10" verifyTime="0.0050953" testport="//@interimmodels.3/@designmodel/@component.0/@port.1" traceExample="init -> PassengerUI_pay_issuepay -> PassengerUI_paywire_writer_process -> paywire_req!64 -> paywire_req?64 -> Payment_paywire_writestorage_invoke -> Payment_record_payrecorded -> Payment_paywire_writestorage_process -> paywire_res!64 -> paywire_res?64" exprText="[]  (BillingGateway.process.processed -> &lt;> Payment.list.listed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.4/@port.1/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.3/@designmodel" visitedStates="24" verifyTime="0.0044913999999999996" testport="//@interimmodels.3/@designmodel/@component.0/@port.2" traceExample="init -> PassengerUI_plogin_login -> PassengerUI_authwire_requester_process -> authwire_req!57 -> authwire_req?57 -> SignOn_authwire_responder_invoke -> SignOn_auth_authenticated -> SignOn_userquerywire_reader_process -> userquerywire_req!57 -> userquerywire_req?57 -> UserDB_userquerywire_readstorage_invoke -> UserDB_find_queried -> UserDB_userquerywire_readstorage_process -> userquerywire_res!57 -> userquerywire_res?57 -> SignOn_userquerywire_reader_Skip -> SignOn_authwire_responder_process -> authwire_res!57 -> authwire_res?57" exprText="[]  (PassengerUI.plogin.login -> &lt;> SignOn.auth.authenticated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.0/@port.2/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.3/@designmodel" visitedStates="29" verifyTime="0.0046748" testport="//@interimmodels.3/@designmodel/@component.2/@port.1" traceExample="init -> DriverUI_dlogin_login -> DriverUI_authwire_requester_process -> authwire_req!32 -> authwire_req?32 -> SignOn_authwire_responder_invoke -> SignOn_auth_authenticated -> SignOn_userquerywire_reader_process -> userquerywire_req!32 -> userquerywire_req?32 -> UserDB_userquerywire_readstorage_invoke -> UserDB_find_queried -> UserDB_userquerywire_readstorage_process -> userquerywire_res!32 -> userquerywire_res?32 -> SignOn_userquerywire_reader_Skip -> SignOn_authwire_responder_process -> authwire_res!32 -> authwire_res?32" exprText="[]  (DriverUI.dlogin.login -> &lt;> UserDB.find.queried)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.2/@port.1/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.3/@designmodel/@component.0/@port.1" exprText="[]  (PassengerUI.pay.issuepay -> &lt;> paymentgatewayref.commitref.checked)"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="4" description="payment - establish-link" nextModel="//@interimmodels.5">
    <designmodel name="interimpayment4">
      <component name="PassengerUI" type="client">
        <port name="call" role="//@interimmodels.4/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="callride"/>
        </port>
        <port name="pay" role="//@interimmodels.4/@designmodel/@connector.8/@role.0" type="request,OutboundPort">
          <events name="issuepay"/>
        </port>
        <port name="plogin" role="//@interimmodels.4/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="login"/>
        </port>
      </component>
      <component name="TripMgmt" type="server,eventsource,datareader,readendpoint">
        <port name="accept" role="//@interimmodels.4/@designmodel/@connector.0/@role.1 //@interimmodels.4/@designmodel/@connector.1/@role.0 //@interimmodels.4/@designmodel/@connector.2/@role.0" type="response,publish,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="acknowledged"/>
        </port>
      </component>
      <component name="DriverUI" type="client,eventconsumer,commandendpoint,listener">
        <port name="notify" role="//@interimmodels.4/@designmodel/@connector.1/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
        <port name="dlogin" role="//@interimmodels.4/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="login"/>
        </port>
        <port name="locate" role="//@interimmodels.4/@designmodel/@connector.5/@role.0" type="issue,OutboundPort,EventProcessorPort">
          <events name="located"/>
        </port>
      </component>
      <component name="DriverRecord" type="viewdb,datastore">
        <port name="driverquery" role="//@interimmodels.4/@designmodel/@connector.2/@role.1" type="update,query,InboundPort,EventProcessorPort">
          <events name="quried"/>
        </port>
        <port name="driverupdate" role="//@interimmodels.4/@designmodel/@connector.5/@role.1" type="update,query,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Payment" type="server,reverseoracle">
        <port name="record" type="TamperingProofPort">
          <events name="payrecorded"/>
        </port>
        <port name="list" role="//@interimmodels.4/@designmodel/@connector.7/@role.1" type="response,blockquery,OutboundPort,InboundPort,TamperingProofPort">
          <events name="listed"/>
        </port>
      </component>
      <component name="BillingGateway" type="client">
        <port name="process" role="//@interimmodels.4/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="SignOn" type="server,datareader,readendpoint">
        <port name="auth" role="//@interimmodels.4/@designmodel/@connector.3/@role.1 //@interimmodels.4/@designmodel/@connector.4/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="authenticated"/>
        </port>
      </component>
      <component name="UserDB" type="repository,datastore">
        <port name="find" role="//@interimmodels.4/@designmodel/@connector.4/@role.1" type="access,InboundPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="AssignwireLog" type="eventlogger,datastore">
        <port name="logassign" role="//@interimmodels.4/@designmodel/@connector.1/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
      </component>
      <component name="DriverupdatewireCommandLog" type="commanddb,datastore">
        <port name="logdriver" role="//@interimmodels.4/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref" role="//@interimmodels.4/@designmodel/@connector.8/@role.1">
          <events name="checked"/>
        </port>
      </component>
      <connector name="callwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.2/@role.0" connector="//@interimmodels.4/@designmodel/@connector.0"/>
      </connector>
      <connector name="assignwire" type="ESConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0">
        <role name="eventpublisher" roletype="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.1"/>
        <role name="eventsubscriber" roletype="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.1"/>
        <role name="eventstore" roletype="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2" type="in" connector="//@interimmodels.4/@designmodel/@connector.1"/>
      </connector>
      <connector name="driverquerywire" type="QRConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0">
        <role name="querier" roletype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.1/@role.0" connector="//@interimmodels.4/@designmodel/@connector.2"/>
        <role name="readstore" roletype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.2"/>
      </connector>
      <connector name="authwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.4/@role.0" connector="//@interimmodels.4/@designmodel/@connector.3"/>
      </connector>
      <connector name="userquerywire" type="REConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.4"/>
      </connector>
      <connector name="driverupdatewire" type="CRConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0">
        <role name="commander" roletype="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.1" type="out" connector="//@interimmodels.4/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0" type="in" connector="//@interimmodels.4/@designmodel/@connector.5"/>
        <role name="commandstore" roletype="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.2" type="in" connector="//@interimmodels.4/@designmodel/@connector.5"/>
      </connector>
      <connector name="paywiretoremove" type="WRConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0">
        <role name="writertoremove" roletype="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0" type="writer" connector="//@interimmodels.4/@designmodel/@connector.6"/>
        <role name="writestoragetoremove" roletype="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1" type="writestorage" connector="//@interimmodels.4/@designmodel/@connector.6"/>
      </connector>
      <connector name="billwire" type="REConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader" connector="//@interimmodels.4/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage" connector="//@interimmodels.4/@designmodel/@connector.7"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" connector="//@interimmodels.4/@designmodel/@connector.8">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.4/@designmodel/@connector.8">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.4/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.4/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.4/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.4/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.4/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.4/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.4/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.4/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.4/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.4/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.4/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.4/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.4/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.4/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.4/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.4/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.4/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.4/@designmodel" visitedStates="197" verifyTime="0.085503" testport="//@interimmodels.4/@designmodel/@component.0/@port.0" traceExample="init -> PassengerUI_call_callride -> PassengerUI_callwire_requester_process -> callwire_req!24 -> callwire_req?24 -> TripMgmt_callwire_responder_invoke -> TripMgmt_accept_acknowledged -> TripMgmt_driverquerywire_querier_process -> driverquerywire_stmt!24 -> driverquerywire_stmt?24 -> DriverRecord_driverquery_quried -> DriverRecord_driverquerywire_readstore_process -> driverquerywire_res!24 -> driverquerywire_res?24 -> TripMgmt_driverquerywire_querier_Skip -> TripMgmt_assignwire_eventpublisher_process -> assignwire_pevt!24 -> assignwire_pevt?24 -> AssignwireLog_logassign_logged -> AssignwireLog_assignwire_eventstore_process -> assignwire_sevt!24 -> AssignwireLog_assignwire_eventstore_persist -> assignwire_sevt?24 -> assignwire_bevt!24 -> assignwire_bevt?24 -> DriverUI_notify_notified -> DriverUI_assignwire_eventsubscriber_process -> TripMgmt_assignwire_eventpublisher_broadcast -> TripMgmt_assignwire_eventpublisher_Skip -> TripMgmt_callwire_responder_process -> callwire_res!24 -> callwire_res?24" exprText="[]  (PassengerUI.call.callride -> &lt;> DriverUI.notify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.4/@designmodel" visitedStates="131" verifyTime="0.006578499999999999" testport="//@interimmodels.4/@designmodel/@component.0/@port.0" traceExample="init -> PassengerUI_call_callride -> PassengerUI_callwire_requester_process -> callwire_req!72 -> callwire_req?72 -> TripMgmt_callwire_responder_invoke -> TripMgmt_accept_acknowledged -> TripMgmt_driverquerywire_querier_process -> driverquerywire_stmt!72 -> driverquerywire_stmt?72 -> DriverRecord_driverquery_quried -> DriverRecord_driverquerywire_readstore_process -> driverquerywire_res!72 -> driverquerywire_res?72 -> TripMgmt_driverquerywire_querier_Skip -> TripMgmt_assignwire_eventpublisher_process -> assignwire_pevt!72 -> assignwire_pevt?72 -> AssignwireLog_logassign_logged -> AssignwireLog_assignwire_eventstore_process -> assignwire_sevt!72 -> AssignwireLog_assignwire_eventstore_persist -> assignwire_sevt?72 -> assignwire_bevt!72 -> assignwire_bevt?72 -> DriverUI_notify_notified -> DriverUI_assignwire_eventsubscriber_process -> TripMgmt_assignwire_eventpublisher_broadcast -> TripMgmt_assignwire_eventpublisher_Skip -> TripMgmt_callwire_responder_process -> callwire_res!72 -> callwire_res?72" exprText="[]  (TripMgmt.accept.acknowledged -> &lt;> DriverRecord.driverquery.quried)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="10" verifyTime="0.0050953" testport="//@interimmodels.4/@designmodel/@component.0/@port.1" traceExample="init -> PassengerUI_pay_issuepay -> PassengerUI_paywire_writer_process -> paywire_req!64 -> paywire_req?64 -> Payment_paywire_writestorage_invoke -> Payment_record_payrecorded -> Payment_paywire_writestorage_process -> paywire_res!64 -> paywire_res?64" exprText="[]  (BillingGateway.process.processed -> &lt;> Payment.list.listed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.4/@port.1/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.4/@designmodel" visitedStates="24" verifyTime="0.0044913999999999996" testport="//@interimmodels.4/@designmodel/@component.0/@port.2" traceExample="init -> PassengerUI_plogin_login -> PassengerUI_authwire_requester_process -> authwire_req!57 -> authwire_req?57 -> SignOn_authwire_responder_invoke -> SignOn_auth_authenticated -> SignOn_userquerywire_reader_process -> userquerywire_req!57 -> userquerywire_req?57 -> UserDB_userquerywire_readstorage_invoke -> UserDB_find_queried -> UserDB_userquerywire_readstorage_process -> userquerywire_res!57 -> userquerywire_res?57 -> SignOn_userquerywire_reader_Skip -> SignOn_authwire_responder_process -> authwire_res!57 -> authwire_res?57" exprText="[]  (PassengerUI.plogin.login -> &lt;> SignOn.auth.authenticated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.0/@port.2/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.4/@designmodel" visitedStates="29" verifyTime="0.0046748" testport="//@interimmodels.4/@designmodel/@component.2/@port.1" traceExample="init -> DriverUI_dlogin_login -> DriverUI_authwire_requester_process -> authwire_req!32 -> authwire_req?32 -> SignOn_authwire_responder_invoke -> SignOn_auth_authenticated -> SignOn_userquerywire_reader_process -> userquerywire_req!32 -> userquerywire_req?32 -> UserDB_userquerywire_readstorage_invoke -> UserDB_find_queried -> UserDB_userquerywire_readstorage_process -> userquerywire_res!32 -> userquerywire_res?32 -> SignOn_userquerywire_reader_Skip -> SignOn_authwire_responder_process -> authwire_res!32 -> authwire_res?32" exprText="[]  (DriverUI.dlogin.login -> &lt;> UserDB.find.queried)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.2/@port.1/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.4/@designmodel/@component.0/@port.1" exprText="[]  (PassengerUI.pay.issuepay -> &lt;> paymentgatewayref.commitref.checked)"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels description="signon - setup-connector" nextModel="//@interimmodels.6">
    <designmodel name="interimsignon0">
      <component name="PassengerUI" type="client">
        <port name="call" role="//@interimmodels.5/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="callride"/>
        </port>
        <port name="pay" role="//@interimmodels.5/@designmodel/@connector.8/@role.0" type="request,OutboundPort">
          <events name="issuepay"/>
        </port>
        <port name="plogin" role="//@interimmodels.5/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="login"/>
        </port>
      </component>
      <component name="TripMgmt" type="server,eventsource,datareader,readendpoint">
        <port name="accept" role="//@interimmodels.5/@designmodel/@connector.0/@role.1 //@interimmodels.5/@designmodel/@connector.1/@role.0 //@interimmodels.5/@designmodel/@connector.2/@role.0" type="response,publish,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="acknowledged"/>
        </port>
      </component>
      <component name="DriverUI" type="client,eventconsumer,commandendpoint,listener">
        <port name="notify" role="//@interimmodels.5/@designmodel/@connector.1/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
        <port name="dlogin" role="//@interimmodels.5/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="login"/>
        </port>
        <port name="locate" role="//@interimmodels.5/@designmodel/@connector.5/@role.0" type="issue,OutboundPort,EventProcessorPort">
          <events name="located"/>
        </port>
      </component>
      <component name="DriverRecord" type="viewdb,datastore">
        <port name="driverquery" role="//@interimmodels.5/@designmodel/@connector.2/@role.1" type="update,query,InboundPort,EventProcessorPort">
          <events name="quried"/>
        </port>
        <port name="driverupdate" role="//@interimmodels.5/@designmodel/@connector.5/@role.1" type="update,query,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Payment" type="server,reverseoracle">
        <port name="record" type="TamperingProofPort">
          <events name="payrecorded"/>
        </port>
        <port name="list" role="//@interimmodels.5/@designmodel/@connector.7/@role.1" type="response,blockquery,OutboundPort,InboundPort,TamperingProofPort">
          <events name="listed"/>
        </port>
      </component>
      <component name="BillingGateway" type="client">
        <port name="process" role="//@interimmodels.5/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="SignOn" type="server,datareader,readendpoint">
        <port name="auth" role="//@interimmodels.5/@designmodel/@connector.3/@role.1 //@interimmodels.5/@designmodel/@connector.4/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="authenticated"/>
        </port>
      </component>
      <component name="UserDB" type="repository,datastore">
        <port name="find" role="//@interimmodels.5/@designmodel/@connector.4/@role.1" type="access,InboundPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="AssignwireLog" type="eventlogger,datastore">
        <port name="logassign" role="//@interimmodels.5/@designmodel/@connector.1/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
      </component>
      <component name="DriverupdatewireCommandLog" type="commanddb,datastore">
        <port name="logdriver" role="//@interimmodels.5/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref" role="//@interimmodels.5/@designmodel/@connector.8/@role.1">
          <events name="checked"/>
        </port>
      </component>
      <connector name="callwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.2/@role.0" connector="//@interimmodels.5/@designmodel/@connector.0"/>
      </connector>
      <connector name="assignwire" type="ESConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0">
        <role name="eventpublisher" roletype="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.1"/>
        <role name="eventsubscriber" roletype="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.1"/>
        <role name="eventstore" roletype="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2" type="in" connector="//@interimmodels.5/@designmodel/@connector.1"/>
      </connector>
      <connector name="driverquerywire" type="QRConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0">
        <role name="querier" roletype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.1/@role.0" connector="//@interimmodels.5/@designmodel/@connector.2"/>
        <role name="readstore" roletype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.2"/>
      </connector>
      <connector name="authwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.4/@role.0" connector="//@interimmodels.5/@designmodel/@connector.3"/>
      </connector>
      <connector name="userquerywire" type="REConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.4"/>
      </connector>
      <connector name="driverupdatewire" type="CRConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0">
        <role name="commander" roletype="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.1" type="out" connector="//@interimmodels.5/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0" type="in" connector="//@interimmodels.5/@designmodel/@connector.5"/>
        <role name="commandstore" roletype="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.2" type="in" connector="//@interimmodels.5/@designmodel/@connector.5"/>
      </connector>
      <connector name="paywiretoremove" type="WRConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0">
        <role name="writertoremove" roletype="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0" type="writer" connector="//@interimmodels.5/@designmodel/@connector.6"/>
        <role name="writestoragetoremove" roletype="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1" type="writestorage" connector="//@interimmodels.5/@designmodel/@connector.6"/>
      </connector>
      <connector name="billwire" type="REConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader" connector="//@interimmodels.5/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage" connector="//@interimmodels.5/@designmodel/@connector.7"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" connector="//@interimmodels.5/@designmodel/@connector.8">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.5/@designmodel/@connector.8">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <connector name="tokenwireref">
        <role name="requester" type="out" connector="//@interimmodels.5/@designmodel/@connector.9">
          <roletype href="sso.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="in" connector="//@interimmodels.5/@designmodel/@connector.9">
          <roletype href="sso.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.5/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.5/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.5/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.5/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.5/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.5/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.5/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.5/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.5/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.5/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.5/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.5/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.5/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.5/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.5/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.5/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.5/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.5/@designmodel" visitedStates="197" verifyTime="0.085503" testport="//@interimmodels.5/@designmodel/@component.0/@port.0" traceExample="init -> PassengerUI_call_callride -> PassengerUI_callwire_requester_process -> callwire_req!24 -> callwire_req?24 -> TripMgmt_callwire_responder_invoke -> TripMgmt_accept_acknowledged -> TripMgmt_driverquerywire_querier_process -> driverquerywire_stmt!24 -> driverquerywire_stmt?24 -> DriverRecord_driverquery_quried -> DriverRecord_driverquerywire_readstore_process -> driverquerywire_res!24 -> driverquerywire_res?24 -> TripMgmt_driverquerywire_querier_Skip -> TripMgmt_assignwire_eventpublisher_process -> assignwire_pevt!24 -> assignwire_pevt?24 -> AssignwireLog_logassign_logged -> AssignwireLog_assignwire_eventstore_process -> assignwire_sevt!24 -> AssignwireLog_assignwire_eventstore_persist -> assignwire_sevt?24 -> assignwire_bevt!24 -> assignwire_bevt?24 -> DriverUI_notify_notified -> DriverUI_assignwire_eventsubscriber_process -> TripMgmt_assignwire_eventpublisher_broadcast -> TripMgmt_assignwire_eventpublisher_Skip -> TripMgmt_callwire_responder_process -> callwire_res!24 -> callwire_res?24" exprText="[]  (PassengerUI.call.callride -> &lt;> DriverUI.notify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.5/@designmodel" visitedStates="131" verifyTime="0.006578499999999999" testport="//@interimmodels.5/@designmodel/@component.0/@port.0" traceExample="init -> PassengerUI_call_callride -> PassengerUI_callwire_requester_process -> callwire_req!72 -> callwire_req?72 -> TripMgmt_callwire_responder_invoke -> TripMgmt_accept_acknowledged -> TripMgmt_driverquerywire_querier_process -> driverquerywire_stmt!72 -> driverquerywire_stmt?72 -> DriverRecord_driverquery_quried -> DriverRecord_driverquerywire_readstore_process -> driverquerywire_res!72 -> driverquerywire_res?72 -> TripMgmt_driverquerywire_querier_Skip -> TripMgmt_assignwire_eventpublisher_process -> assignwire_pevt!72 -> assignwire_pevt?72 -> AssignwireLog_logassign_logged -> AssignwireLog_assignwire_eventstore_process -> assignwire_sevt!72 -> AssignwireLog_assignwire_eventstore_persist -> assignwire_sevt?72 -> assignwire_bevt!72 -> assignwire_bevt?72 -> DriverUI_notify_notified -> DriverUI_assignwire_eventsubscriber_process -> TripMgmt_assignwire_eventpublisher_broadcast -> TripMgmt_assignwire_eventpublisher_Skip -> TripMgmt_callwire_responder_process -> callwire_res!72 -> callwire_res?72" exprText="[]  (TripMgmt.accept.acknowledged -> &lt;> DriverRecord.driverquery.quried)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="10" verifyTime="0.0050953" testport="//@interimmodels.5/@designmodel/@component.0/@port.1" traceExample="init -> PassengerUI_pay_issuepay -> PassengerUI_paywire_writer_process -> paywire_req!64 -> paywire_req?64 -> Payment_paywire_writestorage_invoke -> Payment_record_payrecorded -> Payment_paywire_writestorage_process -> paywire_res!64 -> paywire_res?64" exprText="[]  (BillingGateway.process.processed -> &lt;> Payment.list.listed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.4/@port.1/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.5/@designmodel" visitedStates="24" verifyTime="0.0044913999999999996" testport="//@interimmodels.5/@designmodel/@component.0/@port.2" traceExample="init -> PassengerUI_plogin_login -> PassengerUI_authwire_requester_process -> authwire_req!57 -> authwire_req?57 -> SignOn_authwire_responder_invoke -> SignOn_auth_authenticated -> SignOn_userquerywire_reader_process -> userquerywire_req!57 -> userquerywire_req?57 -> UserDB_userquerywire_readstorage_invoke -> UserDB_find_queried -> UserDB_userquerywire_readstorage_process -> userquerywire_res!57 -> userquerywire_res?57 -> SignOn_userquerywire_reader_Skip -> SignOn_authwire_responder_process -> authwire_res!57 -> authwire_res?57" exprText="[]  (PassengerUI.plogin.login -> &lt;> SignOn.auth.authenticated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.0/@port.2/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.5/@designmodel" visitedStates="29" verifyTime="0.0046748" testport="//@interimmodels.5/@designmodel/@component.2/@port.1" traceExample="init -> DriverUI_dlogin_login -> DriverUI_authwire_requester_process -> authwire_req!32 -> authwire_req?32 -> SignOn_authwire_responder_invoke -> SignOn_auth_authenticated -> SignOn_userquerywire_reader_process -> userquerywire_req!32 -> userquerywire_req?32 -> UserDB_userquerywire_readstorage_invoke -> UserDB_find_queried -> UserDB_userquerywire_readstorage_process -> userquerywire_res!32 -> userquerywire_res?32 -> SignOn_userquerywire_reader_Skip -> SignOn_authwire_responder_process -> authwire_res!32 -> authwire_res?32" exprText="[]  (DriverUI.dlogin.login -> &lt;> UserDB.find.queried)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.2/@port.1/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.5/@designmodel/@component.0/@port.1" exprText="[]  (PassengerUI.pay.issuepay -> &lt;> paymentgatewayref.commitref.checked)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="signon1" exprText="[]  (PassengerUI.ssologinref.login ->  &lt;> ssoserverref.issueref.tokenissuerefd)"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="1" description="signon - establish-link" nextModel="//@interimmodels.7">
    <designmodel name="interimsignon1">
      <component name="PassengerUI" type="client">
        <port name="call" role="//@interimmodels.6/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="callride"/>
        </port>
        <port name="pay" role="//@interimmodels.6/@designmodel/@connector.8/@role.0" type="request,OutboundPort">
          <events name="issuepay"/>
        </port>
        <port name="plogin" role="//@interimmodels.6/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="login"/>
        </port>
        <port name="ssologinref" role="//@interimmodels.6/@designmodel/@connector.9/@role.0">
          <events name="submit"/>
        </port>
      </component>
      <component name="TripMgmt" type="server,eventsource,datareader,readendpoint">
        <port name="accept" role="//@interimmodels.6/@designmodel/@connector.0/@role.1 //@interimmodels.6/@designmodel/@connector.1/@role.0 //@interimmodels.6/@designmodel/@connector.2/@role.0" type="response,publish,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="acknowledged"/>
        </port>
      </component>
      <component name="DriverUI" type="client,eventconsumer,commandendpoint,listener">
        <port name="notify" role="//@interimmodels.6/@designmodel/@connector.1/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
        <port name="dlogin" role="//@interimmodels.6/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="login"/>
        </port>
        <port name="locate" role="//@interimmodels.6/@designmodel/@connector.5/@role.0" type="issue,OutboundPort,EventProcessorPort">
          <events name="located"/>
        </port>
      </component>
      <component name="DriverRecord" type="viewdb,datastore">
        <port name="driverquery" role="//@interimmodels.6/@designmodel/@connector.2/@role.1" type="update,query,InboundPort,EventProcessorPort">
          <events name="quried"/>
        </port>
        <port name="driverupdate" role="//@interimmodels.6/@designmodel/@connector.5/@role.1" type="update,query,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Payment" type="server,reverseoracle">
        <port name="record" type="TamperingProofPort">
          <events name="payrecorded"/>
        </port>
        <port name="list" role="//@interimmodels.6/@designmodel/@connector.7/@role.1" type="response,blockquery,OutboundPort,InboundPort,TamperingProofPort">
          <events name="listed"/>
        </port>
      </component>
      <component name="BillingGateway" type="client">
        <port name="process" role="//@interimmodels.6/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="SignOn" type="server,datareader,readendpoint">
        <port name="auth" role="//@interimmodels.6/@designmodel/@connector.3/@role.1 //@interimmodels.6/@designmodel/@connector.4/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="authenticated"/>
        </port>
      </component>
      <component name="UserDB" type="repository,datastore">
        <port name="find" role="//@interimmodels.6/@designmodel/@connector.4/@role.1" type="access,InboundPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="AssignwireLog" type="eventlogger,datastore">
        <port name="logassign" role="//@interimmodels.6/@designmodel/@connector.1/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
      </component>
      <component name="DriverupdatewireCommandLog" type="commanddb,datastore">
        <port name="logdriver" role="//@interimmodels.6/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref" role="//@interimmodels.6/@designmodel/@connector.8/@role.1">
          <events name="checked"/>
        </port>
      </component>
      <connector name="callwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.2/@role.0" connector="//@interimmodels.6/@designmodel/@connector.0"/>
      </connector>
      <connector name="assignwire" type="ESConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0">
        <role name="eventpublisher" roletype="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.1"/>
        <role name="eventsubscriber" roletype="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.1"/>
        <role name="eventstore" roletype="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2" type="in" connector="//@interimmodels.6/@designmodel/@connector.1"/>
      </connector>
      <connector name="driverquerywire" type="QRConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0">
        <role name="querier" roletype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.1/@role.0" connector="//@interimmodels.6/@designmodel/@connector.2"/>
        <role name="readstore" roletype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.2"/>
      </connector>
      <connector name="authwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.4/@role.0" connector="//@interimmodels.6/@designmodel/@connector.3"/>
      </connector>
      <connector name="userquerywire" type="REConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.4"/>
      </connector>
      <connector name="driverupdatewire" type="CRConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0">
        <role name="commander" roletype="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.1" type="out" connector="//@interimmodels.6/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0" type="in" connector="//@interimmodels.6/@designmodel/@connector.5"/>
        <role name="commandstore" roletype="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.2" type="in" connector="//@interimmodels.6/@designmodel/@connector.5"/>
      </connector>
      <connector name="paywiretoremove" type="WRConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0">
        <role name="writertoremove" roletype="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0" type="writer" connector="//@interimmodels.6/@designmodel/@connector.6"/>
        <role name="writestoragetoremove" roletype="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1" type="writestorage" connector="//@interimmodels.6/@designmodel/@connector.6"/>
      </connector>
      <connector name="billwire" type="REConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader" connector="//@interimmodels.6/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage" connector="//@interimmodels.6/@designmodel/@connector.7"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" connector="//@interimmodels.6/@designmodel/@connector.8">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.6/@designmodel/@connector.8">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <connector name="tokenwireref">
        <role name="requester" type="tolink" connector="//@interimmodels.6/@designmodel/@connector.9">
          <roletype href="sso.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="in" connector="//@interimmodels.6/@designmodel/@connector.9">
          <roletype href="sso.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.6/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.6/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.6/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.6/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.6/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.6/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.6/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.6/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.6/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.6/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.6/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.6/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.6/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.6/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.6/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.6/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.6/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.6/@designmodel" visitedStates="197" verifyTime="0.085503" testport="//@interimmodels.6/@designmodel/@component.0/@port.0" traceExample="init -> PassengerUI_call_callride -> PassengerUI_callwire_requester_process -> callwire_req!24 -> callwire_req?24 -> TripMgmt_callwire_responder_invoke -> TripMgmt_accept_acknowledged -> TripMgmt_driverquerywire_querier_process -> driverquerywire_stmt!24 -> driverquerywire_stmt?24 -> DriverRecord_driverquery_quried -> DriverRecord_driverquerywire_readstore_process -> driverquerywire_res!24 -> driverquerywire_res?24 -> TripMgmt_driverquerywire_querier_Skip -> TripMgmt_assignwire_eventpublisher_process -> assignwire_pevt!24 -> assignwire_pevt?24 -> AssignwireLog_logassign_logged -> AssignwireLog_assignwire_eventstore_process -> assignwire_sevt!24 -> AssignwireLog_assignwire_eventstore_persist -> assignwire_sevt?24 -> assignwire_bevt!24 -> assignwire_bevt?24 -> DriverUI_notify_notified -> DriverUI_assignwire_eventsubscriber_process -> TripMgmt_assignwire_eventpublisher_broadcast -> TripMgmt_assignwire_eventpublisher_Skip -> TripMgmt_callwire_responder_process -> callwire_res!24 -> callwire_res?24" exprText="[]  (PassengerUI.call.callride -> &lt;> DriverUI.notify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.6/@designmodel" visitedStates="131" verifyTime="0.006578499999999999" testport="//@interimmodels.6/@designmodel/@component.0/@port.0" traceExample="init -> PassengerUI_call_callride -> PassengerUI_callwire_requester_process -> callwire_req!72 -> callwire_req?72 -> TripMgmt_callwire_responder_invoke -> TripMgmt_accept_acknowledged -> TripMgmt_driverquerywire_querier_process -> driverquerywire_stmt!72 -> driverquerywire_stmt?72 -> DriverRecord_driverquery_quried -> DriverRecord_driverquerywire_readstore_process -> driverquerywire_res!72 -> driverquerywire_res?72 -> TripMgmt_driverquerywire_querier_Skip -> TripMgmt_assignwire_eventpublisher_process -> assignwire_pevt!72 -> assignwire_pevt?72 -> AssignwireLog_logassign_logged -> AssignwireLog_assignwire_eventstore_process -> assignwire_sevt!72 -> AssignwireLog_assignwire_eventstore_persist -> assignwire_sevt?72 -> assignwire_bevt!72 -> assignwire_bevt?72 -> DriverUI_notify_notified -> DriverUI_assignwire_eventsubscriber_process -> TripMgmt_assignwire_eventpublisher_broadcast -> TripMgmt_assignwire_eventpublisher_Skip -> TripMgmt_callwire_responder_process -> callwire_res!72 -> callwire_res?72" exprText="[]  (TripMgmt.accept.acknowledged -> &lt;> DriverRecord.driverquery.quried)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="10" verifyTime="0.0050953" testport="//@interimmodels.6/@designmodel/@component.0/@port.1" traceExample="init -> PassengerUI_pay_issuepay -> PassengerUI_paywire_writer_process -> paywire_req!64 -> paywire_req?64 -> Payment_paywire_writestorage_invoke -> Payment_record_payrecorded -> Payment_paywire_writestorage_process -> paywire_res!64 -> paywire_res?64" exprText="[]  (BillingGateway.process.processed -> &lt;> Payment.list.listed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.4/@port.1/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.6/@designmodel" visitedStates="24" verifyTime="0.0044913999999999996" testport="//@interimmodels.6/@designmodel/@component.0/@port.2" traceExample="init -> PassengerUI_plogin_login -> PassengerUI_authwire_requester_process -> authwire_req!57 -> authwire_req?57 -> SignOn_authwire_responder_invoke -> SignOn_auth_authenticated -> SignOn_userquerywire_reader_process -> userquerywire_req!57 -> userquerywire_req?57 -> UserDB_userquerywire_readstorage_invoke -> UserDB_find_queried -> UserDB_userquerywire_readstorage_process -> userquerywire_res!57 -> userquerywire_res?57 -> SignOn_userquerywire_reader_Skip -> SignOn_authwire_responder_process -> authwire_res!57 -> authwire_res?57" exprText="[]  (PassengerUI.plogin.login -> &lt;> SignOn.auth.authenticated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.0/@port.2/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.6/@designmodel" visitedStates="29" verifyTime="0.0046748" testport="//@interimmodels.6/@designmodel/@component.2/@port.1" traceExample="init -> DriverUI_dlogin_login -> DriverUI_authwire_requester_process -> authwire_req!32 -> authwire_req?32 -> SignOn_authwire_responder_invoke -> SignOn_auth_authenticated -> SignOn_userquerywire_reader_process -> userquerywire_req!32 -> userquerywire_req?32 -> UserDB_userquerywire_readstorage_invoke -> UserDB_find_queried -> UserDB_userquerywire_readstorage_process -> userquerywire_res!32 -> userquerywire_res?32 -> SignOn_userquerywire_reader_Skip -> SignOn_authwire_responder_process -> authwire_res!32 -> authwire_res?32" exprText="[]  (DriverUI.dlogin.login -> &lt;> UserDB.find.queried)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.2/@port.1/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.6/@designmodel/@component.0/@port.1" exprText="[]  (PassengerUI.pay.issuepay -> &lt;> paymentgatewayref.commitref.checked)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="signon1" testport="//@interimmodels.6/@designmodel/@component.0/@port.3" exprText="[]  (PassengerUI.ssologinref.login ->  &lt;> ssoserverref.issueref.tokenissuerefd)"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="2" description="signon - setup-component" nextModel="//@interimmodels.8">
    <designmodel name="interimsignon2">
      <component name="PassengerUI" type="client">
        <port name="call" role="//@interimmodels.7/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="callride"/>
        </port>
        <port name="pay" role="//@interimmodels.7/@designmodel/@connector.8/@role.0" type="request,OutboundPort">
          <events name="issuepay"/>
        </port>
        <port name="plogin" role="//@interimmodels.7/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="login"/>
        </port>
        <port name="ssologinref" role="//@interimmodels.7/@designmodel/@connector.9/@role.0">
          <events name="submit"/>
        </port>
      </component>
      <component name="TripMgmt" type="server,eventsource,datareader,readendpoint">
        <port name="accept" role="//@interimmodels.7/@designmodel/@connector.0/@role.1 //@interimmodels.7/@designmodel/@connector.1/@role.0 //@interimmodels.7/@designmodel/@connector.2/@role.0" type="response,publish,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="acknowledged"/>
        </port>
      </component>
      <component name="DriverUI" type="client,eventconsumer,commandendpoint,listener">
        <port name="notify" role="//@interimmodels.7/@designmodel/@connector.1/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
        <port name="dlogin" role="//@interimmodels.7/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="login"/>
        </port>
        <port name="locate" role="//@interimmodels.7/@designmodel/@connector.5/@role.0" type="issue,OutboundPort,EventProcessorPort">
          <events name="located"/>
        </port>
      </component>
      <component name="DriverRecord" type="viewdb,datastore">
        <port name="driverquery" role="//@interimmodels.7/@designmodel/@connector.2/@role.1" type="update,query,InboundPort,EventProcessorPort">
          <events name="quried"/>
        </port>
        <port name="driverupdate" role="//@interimmodels.7/@designmodel/@connector.5/@role.1" type="update,query,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Payment" type="server,reverseoracle">
        <port name="record" type="TamperingProofPort">
          <events name="payrecorded"/>
        </port>
        <port name="list" role="//@interimmodels.7/@designmodel/@connector.7/@role.1" type="response,blockquery,OutboundPort,InboundPort,TamperingProofPort">
          <events name="listed"/>
        </port>
      </component>
      <component name="BillingGateway" type="client">
        <port name="process" role="//@interimmodels.7/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="SignOn" type="server,datareader,readendpoint">
        <port name="auth" role="//@interimmodels.7/@designmodel/@connector.3/@role.1 //@interimmodels.7/@designmodel/@connector.4/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="authenticated"/>
        </port>
      </component>
      <component name="UserDB" type="repository,datastore">
        <port name="find" role="//@interimmodels.7/@designmodel/@connector.4/@role.1" type="access,InboundPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="AssignwireLog" type="eventlogger,datastore">
        <port name="logassign" role="//@interimmodels.7/@designmodel/@connector.1/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
      </component>
      <component name="DriverupdatewireCommandLog" type="commanddb,datastore">
        <port name="logdriver" role="//@interimmodels.7/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref" role="//@interimmodels.7/@designmodel/@connector.8/@role.1">
          <events name="checked"/>
        </port>
      </component>
      <component name="ssoserverref">
        <port name="issueref">
          <events name="tokenissued"/>
        </port>
      </component>
      <connector name="callwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.2/@role.0" connector="//@interimmodels.7/@designmodel/@connector.0"/>
      </connector>
      <connector name="assignwire" type="ESConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0">
        <role name="eventpublisher" roletype="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.1"/>
        <role name="eventsubscriber" roletype="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.1"/>
        <role name="eventstore" roletype="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2" type="in" connector="//@interimmodels.7/@designmodel/@connector.1"/>
      </connector>
      <connector name="driverquerywire" type="QRConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0">
        <role name="querier" roletype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.1/@role.0" connector="//@interimmodels.7/@designmodel/@connector.2"/>
        <role name="readstore" roletype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.2"/>
      </connector>
      <connector name="authwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.4/@role.0" connector="//@interimmodels.7/@designmodel/@connector.3"/>
      </connector>
      <connector name="userquerywire" type="REConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.4"/>
      </connector>
      <connector name="driverupdatewire" type="CRConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0">
        <role name="commander" roletype="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.1" type="out" connector="//@interimmodels.7/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0" type="in" connector="//@interimmodels.7/@designmodel/@connector.5"/>
        <role name="commandstore" roletype="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.2" type="in" connector="//@interimmodels.7/@designmodel/@connector.5"/>
      </connector>
      <connector name="paywiretoremove" type="WRConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0">
        <role name="writertoremove" roletype="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0" type="writer" connector="//@interimmodels.7/@designmodel/@connector.6"/>
        <role name="writestoragetoremove" roletype="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1" type="writestorage" connector="//@interimmodels.7/@designmodel/@connector.6"/>
      </connector>
      <connector name="billwire" type="REConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader" connector="//@interimmodels.7/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage" connector="//@interimmodels.7/@designmodel/@connector.7"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" connector="//@interimmodels.7/@designmodel/@connector.8">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.7/@designmodel/@connector.8">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <connector name="tokenwireref">
        <role name="requester" type="tolink" connector="//@interimmodels.7/@designmodel/@connector.9">
          <roletype href="sso.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="in" connector="//@interimmodels.7/@designmodel/@connector.9">
          <roletype href="sso.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.7/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.7/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.7/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.7/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.7/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.7/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.7/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.7/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.7/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.7/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.7/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.7/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.7/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.7/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.7/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.7/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.7/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.7/@designmodel" visitedStates="197" verifyTime="0.085503" testport="//@interimmodels.7/@designmodel/@component.0/@port.0" traceExample="init -> PassengerUI_call_callride -> PassengerUI_callwire_requester_process -> callwire_req!24 -> callwire_req?24 -> TripMgmt_callwire_responder_invoke -> TripMgmt_accept_acknowledged -> TripMgmt_driverquerywire_querier_process -> driverquerywire_stmt!24 -> driverquerywire_stmt?24 -> DriverRecord_driverquery_quried -> DriverRecord_driverquerywire_readstore_process -> driverquerywire_res!24 -> driverquerywire_res?24 -> TripMgmt_driverquerywire_querier_Skip -> TripMgmt_assignwire_eventpublisher_process -> assignwire_pevt!24 -> assignwire_pevt?24 -> AssignwireLog_logassign_logged -> AssignwireLog_assignwire_eventstore_process -> assignwire_sevt!24 -> AssignwireLog_assignwire_eventstore_persist -> assignwire_sevt?24 -> assignwire_bevt!24 -> assignwire_bevt?24 -> DriverUI_notify_notified -> DriverUI_assignwire_eventsubscriber_process -> TripMgmt_assignwire_eventpublisher_broadcast -> TripMgmt_assignwire_eventpublisher_Skip -> TripMgmt_callwire_responder_process -> callwire_res!24 -> callwire_res?24" exprText="[]  (PassengerUI.call.callride -> &lt;> DriverUI.notify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.7/@designmodel" visitedStates="131" verifyTime="0.006578499999999999" testport="//@interimmodels.7/@designmodel/@component.0/@port.0" traceExample="init -> PassengerUI_call_callride -> PassengerUI_callwire_requester_process -> callwire_req!72 -> callwire_req?72 -> TripMgmt_callwire_responder_invoke -> TripMgmt_accept_acknowledged -> TripMgmt_driverquerywire_querier_process -> driverquerywire_stmt!72 -> driverquerywire_stmt?72 -> DriverRecord_driverquery_quried -> DriverRecord_driverquerywire_readstore_process -> driverquerywire_res!72 -> driverquerywire_res?72 -> TripMgmt_driverquerywire_querier_Skip -> TripMgmt_assignwire_eventpublisher_process -> assignwire_pevt!72 -> assignwire_pevt?72 -> AssignwireLog_logassign_logged -> AssignwireLog_assignwire_eventstore_process -> assignwire_sevt!72 -> AssignwireLog_assignwire_eventstore_persist -> assignwire_sevt?72 -> assignwire_bevt!72 -> assignwire_bevt?72 -> DriverUI_notify_notified -> DriverUI_assignwire_eventsubscriber_process -> TripMgmt_assignwire_eventpublisher_broadcast -> TripMgmt_assignwire_eventpublisher_Skip -> TripMgmt_callwire_responder_process -> callwire_res!72 -> callwire_res?72" exprText="[]  (TripMgmt.accept.acknowledged -> &lt;> DriverRecord.driverquery.quried)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="10" verifyTime="0.0050953" testport="//@interimmodels.7/@designmodel/@component.0/@port.1" traceExample="init -> PassengerUI_pay_issuepay -> PassengerUI_paywire_writer_process -> paywire_req!64 -> paywire_req?64 -> Payment_paywire_writestorage_invoke -> Payment_record_payrecorded -> Payment_paywire_writestorage_process -> paywire_res!64 -> paywire_res?64" exprText="[]  (BillingGateway.process.processed -> &lt;> Payment.list.listed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.4/@port.1/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.7/@designmodel" visitedStates="24" verifyTime="0.0044913999999999996" testport="//@interimmodels.7/@designmodel/@component.0/@port.2" traceExample="init -> PassengerUI_plogin_login -> PassengerUI_authwire_requester_process -> authwire_req!57 -> authwire_req?57 -> SignOn_authwire_responder_invoke -> SignOn_auth_authenticated -> SignOn_userquerywire_reader_process -> userquerywire_req!57 -> userquerywire_req?57 -> UserDB_userquerywire_readstorage_invoke -> UserDB_find_queried -> UserDB_userquerywire_readstorage_process -> userquerywire_res!57 -> userquerywire_res?57 -> SignOn_userquerywire_reader_Skip -> SignOn_authwire_responder_process -> authwire_res!57 -> authwire_res?57" exprText="[]  (PassengerUI.plogin.login -> &lt;> SignOn.auth.authenticated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.0/@port.2/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.7/@designmodel" visitedStates="29" verifyTime="0.0046748" testport="//@interimmodels.7/@designmodel/@component.2/@port.1" traceExample="init -> DriverUI_dlogin_login -> DriverUI_authwire_requester_process -> authwire_req!32 -> authwire_req?32 -> SignOn_authwire_responder_invoke -> SignOn_auth_authenticated -> SignOn_userquerywire_reader_process -> userquerywire_req!32 -> userquerywire_req?32 -> UserDB_userquerywire_readstorage_invoke -> UserDB_find_queried -> UserDB_userquerywire_readstorage_process -> userquerywire_res!32 -> userquerywire_res?32 -> SignOn_userquerywire_reader_Skip -> SignOn_authwire_responder_process -> authwire_res!32 -> authwire_res?32" exprText="[]  (DriverUI.dlogin.login -> &lt;> UserDB.find.queried)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.2/@port.1/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.7/@designmodel/@component.0/@port.1" exprText="[]  (PassengerUI.pay.issuepay -> &lt;> paymentgatewayref.commitref.checked)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="signon1" testport="//@interimmodels.7/@designmodel/@component.0/@port.3" exprText="[]  (PassengerUI.ssologinref.login ->  &lt;> ssoserverref.issueref.tokenissuerefd)"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="3" description="signon - establish-link" nextModel="//@interimmodels.9">
    <designmodel name="interimsignon3">
      <component name="PassengerUI" type="client">
        <port name="call" role="//@interimmodels.8/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="callride"/>
        </port>
        <port name="pay" role="//@interimmodels.8/@designmodel/@connector.8/@role.0" type="request,OutboundPort">
          <events name="issuepay"/>
        </port>
        <port name="plogin" role="//@interimmodels.8/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="login"/>
        </port>
        <port name="ssologinref" role="//@interimmodels.8/@designmodel/@connector.9/@role.0">
          <events name="submit"/>
        </port>
      </component>
      <component name="TripMgmt" type="server,eventsource,datareader,readendpoint">
        <port name="accept" role="//@interimmodels.8/@designmodel/@connector.0/@role.1 //@interimmodels.8/@designmodel/@connector.1/@role.0 //@interimmodels.8/@designmodel/@connector.2/@role.0" type="response,publish,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="acknowledged"/>
        </port>
      </component>
      <component name="DriverUI" type="client,eventconsumer,commandendpoint,listener">
        <port name="notify" role="//@interimmodels.8/@designmodel/@connector.1/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
        <port name="dlogin" role="//@interimmodels.8/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="login"/>
        </port>
        <port name="locate" role="//@interimmodels.8/@designmodel/@connector.5/@role.0" type="issue,OutboundPort,EventProcessorPort">
          <events name="located"/>
        </port>
      </component>
      <component name="DriverRecord" type="viewdb,datastore">
        <port name="driverquery" role="//@interimmodels.8/@designmodel/@connector.2/@role.1" type="update,query,InboundPort,EventProcessorPort">
          <events name="quried"/>
        </port>
        <port name="driverupdate" role="//@interimmodels.8/@designmodel/@connector.5/@role.1" type="update,query,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Payment" type="server,reverseoracle">
        <port name="record" type="TamperingProofPort">
          <events name="payrecorded"/>
        </port>
        <port name="list" role="//@interimmodels.8/@designmodel/@connector.7/@role.1" type="response,blockquery,OutboundPort,InboundPort,TamperingProofPort">
          <events name="listed"/>
        </port>
      </component>
      <component name="BillingGateway" type="client">
        <port name="process" role="//@interimmodels.8/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="SignOn" type="server,datareader,readendpoint">
        <port name="auth" role="//@interimmodels.8/@designmodel/@connector.3/@role.1 //@interimmodels.8/@designmodel/@connector.4/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="authenticated"/>
        </port>
      </component>
      <component name="UserDB" type="repository,datastore">
        <port name="find" role="//@interimmodels.8/@designmodel/@connector.4/@role.1" type="access,InboundPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="AssignwireLog" type="eventlogger,datastore">
        <port name="logassign" role="//@interimmodels.8/@designmodel/@connector.1/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
      </component>
      <component name="DriverupdatewireCommandLog" type="commanddb,datastore">
        <port name="logdriver" role="//@interimmodels.8/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref" role="//@interimmodels.8/@designmodel/@connector.8/@role.1">
          <events name="checked"/>
        </port>
      </component>
      <component name="ssoserverref">
        <port name="issueref" role="//@interimmodels.8/@designmodel/@connector.9/@role.1">
          <events name="tokenissued"/>
        </port>
      </component>
      <connector name="callwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.2/@role.0" connector="//@interimmodels.8/@designmodel/@connector.0"/>
      </connector>
      <connector name="assignwire" type="ESConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0">
        <role name="eventpublisher" roletype="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.1"/>
        <role name="eventsubscriber" roletype="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.1"/>
        <role name="eventstore" roletype="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2" type="in" connector="//@interimmodels.8/@designmodel/@connector.1"/>
      </connector>
      <connector name="driverquerywire" type="QRConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0">
        <role name="querier" roletype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.1/@role.0" connector="//@interimmodels.8/@designmodel/@connector.2"/>
        <role name="readstore" roletype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.2"/>
      </connector>
      <connector name="authwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.4/@role.0" connector="//@interimmodels.8/@designmodel/@connector.3"/>
      </connector>
      <connector name="userquerywire" type="REConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.4"/>
      </connector>
      <connector name="driverupdatewire" type="CRConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0">
        <role name="commander" roletype="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.1" type="out" connector="//@interimmodels.8/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0" type="in" connector="//@interimmodels.8/@designmodel/@connector.5"/>
        <role name="commandstore" roletype="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.2" type="in" connector="//@interimmodels.8/@designmodel/@connector.5"/>
      </connector>
      <connector name="paywiretoremove" type="WRConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0">
        <role name="writertoremove" roletype="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0" type="writer" connector="//@interimmodels.8/@designmodel/@connector.6"/>
        <role name="writestoragetoremove" roletype="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1" type="writestorage" connector="//@interimmodels.8/@designmodel/@connector.6"/>
      </connector>
      <connector name="billwire" type="REConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader" connector="//@interimmodels.8/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage" connector="//@interimmodels.8/@designmodel/@connector.7"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" connector="//@interimmodels.8/@designmodel/@connector.8">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.8/@designmodel/@connector.8">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <connector name="tokenwireref">
        <role name="requester" type="tolink" connector="//@interimmodels.8/@designmodel/@connector.9">
          <roletype href="sso.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.8/@designmodel/@connector.9">
          <roletype href="sso.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.8/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.8/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.8/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.8/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.8/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.8/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.8/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.8/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.8/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.8/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.8/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.8/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.8/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.8/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.8/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.8/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.8/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.8/@designmodel" visitedStates="197" verifyTime="0.085503" testport="//@interimmodels.8/@designmodel/@component.0/@port.0" traceExample="init -> PassengerUI_call_callride -> PassengerUI_callwire_requester_process -> callwire_req!24 -> callwire_req?24 -> TripMgmt_callwire_responder_invoke -> TripMgmt_accept_acknowledged -> TripMgmt_driverquerywire_querier_process -> driverquerywire_stmt!24 -> driverquerywire_stmt?24 -> DriverRecord_driverquery_quried -> DriverRecord_driverquerywire_readstore_process -> driverquerywire_res!24 -> driverquerywire_res?24 -> TripMgmt_driverquerywire_querier_Skip -> TripMgmt_assignwire_eventpublisher_process -> assignwire_pevt!24 -> assignwire_pevt?24 -> AssignwireLog_logassign_logged -> AssignwireLog_assignwire_eventstore_process -> assignwire_sevt!24 -> AssignwireLog_assignwire_eventstore_persist -> assignwire_sevt?24 -> assignwire_bevt!24 -> assignwire_bevt?24 -> DriverUI_notify_notified -> DriverUI_assignwire_eventsubscriber_process -> TripMgmt_assignwire_eventpublisher_broadcast -> TripMgmt_assignwire_eventpublisher_Skip -> TripMgmt_callwire_responder_process -> callwire_res!24 -> callwire_res?24" exprText="[]  (PassengerUI.call.callride -> &lt;> DriverUI.notify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.8/@designmodel" visitedStates="131" verifyTime="0.006578499999999999" testport="//@interimmodels.8/@designmodel/@component.0/@port.0" traceExample="init -> PassengerUI_call_callride -> PassengerUI_callwire_requester_process -> callwire_req!72 -> callwire_req?72 -> TripMgmt_callwire_responder_invoke -> TripMgmt_accept_acknowledged -> TripMgmt_driverquerywire_querier_process -> driverquerywire_stmt!72 -> driverquerywire_stmt?72 -> DriverRecord_driverquery_quried -> DriverRecord_driverquerywire_readstore_process -> driverquerywire_res!72 -> driverquerywire_res?72 -> TripMgmt_driverquerywire_querier_Skip -> TripMgmt_assignwire_eventpublisher_process -> assignwire_pevt!72 -> assignwire_pevt?72 -> AssignwireLog_logassign_logged -> AssignwireLog_assignwire_eventstore_process -> assignwire_sevt!72 -> AssignwireLog_assignwire_eventstore_persist -> assignwire_sevt?72 -> assignwire_bevt!72 -> assignwire_bevt?72 -> DriverUI_notify_notified -> DriverUI_assignwire_eventsubscriber_process -> TripMgmt_assignwire_eventpublisher_broadcast -> TripMgmt_assignwire_eventpublisher_Skip -> TripMgmt_callwire_responder_process -> callwire_res!72 -> callwire_res?72" exprText="[]  (TripMgmt.accept.acknowledged -> &lt;> DriverRecord.driverquery.quried)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="10" verifyTime="0.0050953" testport="//@interimmodels.8/@designmodel/@component.0/@port.1" traceExample="init -> PassengerUI_pay_issuepay -> PassengerUI_paywire_writer_process -> paywire_req!64 -> paywire_req?64 -> Payment_paywire_writestorage_invoke -> Payment_record_payrecorded -> Payment_paywire_writestorage_process -> paywire_res!64 -> paywire_res?64" exprText="[]  (BillingGateway.process.processed -> &lt;> Payment.list.listed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.4/@port.1/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.8/@designmodel" visitedStates="24" verifyTime="0.0044913999999999996" testport="//@interimmodels.8/@designmodel/@component.0/@port.2" traceExample="init -> PassengerUI_plogin_login -> PassengerUI_authwire_requester_process -> authwire_req!57 -> authwire_req?57 -> SignOn_authwire_responder_invoke -> SignOn_auth_authenticated -> SignOn_userquerywire_reader_process -> userquerywire_req!57 -> userquerywire_req?57 -> UserDB_userquerywire_readstorage_invoke -> UserDB_find_queried -> UserDB_userquerywire_readstorage_process -> userquerywire_res!57 -> userquerywire_res?57 -> SignOn_userquerywire_reader_Skip -> SignOn_authwire_responder_process -> authwire_res!57 -> authwire_res?57" exprText="[]  (PassengerUI.plogin.login -> &lt;> SignOn.auth.authenticated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.0/@port.2/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.8/@designmodel" visitedStates="29" verifyTime="0.0046748" testport="//@interimmodels.8/@designmodel/@component.2/@port.1" traceExample="init -> DriverUI_dlogin_login -> DriverUI_authwire_requester_process -> authwire_req!32 -> authwire_req?32 -> SignOn_authwire_responder_invoke -> SignOn_auth_authenticated -> SignOn_userquerywire_reader_process -> userquerywire_req!32 -> userquerywire_req?32 -> UserDB_userquerywire_readstorage_invoke -> UserDB_find_queried -> UserDB_userquerywire_readstorage_process -> userquerywire_res!32 -> userquerywire_res?32 -> SignOn_userquerywire_reader_Skip -> SignOn_authwire_responder_process -> authwire_res!32 -> authwire_res?32" exprText="[]  (DriverUI.dlogin.login -> &lt;> UserDB.find.queried)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.2/@port.1/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.8/@designmodel/@component.0/@port.1" exprText="[]  (PassengerUI.pay.issuepay -> &lt;> paymentgatewayref.commitref.checked)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="signon1" testport="//@interimmodels.8/@designmodel/@component.0/@port.3" exprText="[]  (PassengerUI.ssologinref.login ->  &lt;> ssoserverref.issueref.tokenissuerefd)"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels description="deliverer - setup-component" nextModel="//@interimmodels.10">
    <designmodel name="interimdeliverer0">
      <component name="PassengerUI" type="client">
        <port name="call" role="//@interimmodels.9/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="callride"/>
        </port>
        <port name="pay" role="//@interimmodels.9/@designmodel/@connector.8/@role.0" type="request,OutboundPort">
          <events name="issuepay"/>
        </port>
        <port name="plogin" role="//@interimmodels.9/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="login"/>
        </port>
        <port name="ssologinref" role="//@interimmodels.9/@designmodel/@connector.9/@role.0">
          <events name="submit"/>
        </port>
      </component>
      <component name="TripMgmt" type="server,eventsource,datareader,readendpoint">
        <port name="accept" role="//@interimmodels.9/@designmodel/@connector.0/@role.1 //@interimmodels.9/@designmodel/@connector.1/@role.0 //@interimmodels.9/@designmodel/@connector.2/@role.0" type="response,publish,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="acknowledged"/>
        </port>
      </component>
      <component name="DriverUI" type="client,eventconsumer,commandendpoint,listener">
        <port name="notify" role="//@interimmodels.9/@designmodel/@connector.1/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
        <port name="dlogin" role="//@interimmodels.9/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="login"/>
        </port>
        <port name="locate" role="//@interimmodels.9/@designmodel/@connector.5/@role.0" type="issue,OutboundPort,EventProcessorPort">
          <events name="located"/>
        </port>
      </component>
      <component name="DriverRecord" type="viewdb,datastore">
        <port name="driverquery" role="//@interimmodels.9/@designmodel/@connector.2/@role.1" type="update,query,InboundPort,EventProcessorPort">
          <events name="quried"/>
        </port>
        <port name="driverupdate" role="//@interimmodels.9/@designmodel/@connector.5/@role.1" type="update,query,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Payment" type="server,reverseoracle">
        <port name="record" type="TamperingProofPort">
          <events name="payrecorded"/>
        </port>
        <port name="list" role="//@interimmodels.9/@designmodel/@connector.7/@role.1" type="response,blockquery,OutboundPort,InboundPort,TamperingProofPort">
          <events name="listed"/>
        </port>
      </component>
      <component name="BillingGateway" type="client">
        <port name="process" role="//@interimmodels.9/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="SignOn" type="server,datareader,readendpoint">
        <port name="auth" role="//@interimmodels.9/@designmodel/@connector.3/@role.1 //@interimmodels.9/@designmodel/@connector.4/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="authenticated"/>
        </port>
      </component>
      <component name="UserDB" type="repository,datastore">
        <port name="find" role="//@interimmodels.9/@designmodel/@connector.4/@role.1" type="access,InboundPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="AssignwireLog" type="eventlogger,datastore">
        <port name="logassign" role="//@interimmodels.9/@designmodel/@connector.1/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
      </component>
      <component name="DriverupdatewireCommandLog" type="commanddb,datastore">
        <port name="logdriver" role="//@interimmodels.9/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref" role="//@interimmodels.9/@designmodel/@connector.8/@role.1">
          <events name="checked"/>
        </port>
      </component>
      <component name="ssoserverref">
        <port name="issueref" role="//@interimmodels.9/@designmodel/@connector.9/@role.1">
          <events name="tokenissued"/>
        </port>
      </component>
      <component name="eatuiref">
        <port name="callref">
          <events name="callride"/>
        </port>
      </component>
      <connector name="callwire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.2/@role.0" connector="//@interimmodels.9/@designmodel/@connector.0"/>
      </connector>
      <connector name="assignwire" type="ESConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0">
        <role name="eventpublisher" roletype="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.1"/>
        <role name="eventsubscriber" roletype="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.1"/>
        <role name="eventstore" roletype="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2" type="in" connector="//@interimmodels.9/@designmodel/@connector.1"/>
      </connector>
      <connector name="driverquerywire" type="QRConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0">
        <role name="querier" roletype="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.1/@role.0" connector="//@interimmodels.9/@designmodel/@connector.2"/>
        <role name="readstore" roletype="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.2"/>
      </connector>
      <connector name="authwire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.4/@role.0" connector="//@interimmodels.9/@designmodel/@connector.3"/>
      </connector>
      <connector name="userquerywire" type="REConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.4"/>
      </connector>
      <connector name="driverupdatewire" type="CRConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0">
        <role name="commander" roletype="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.1" type="out" connector="//@interimmodels.9/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.0" type="in" connector="//@interimmodels.9/@designmodel/@connector.5"/>
        <role name="commandstore" roletype="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.2" type="in" connector="//@interimmodels.9/@designmodel/@connector.5"/>
      </connector>
      <connector name="paywiretoremove" type="WRConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0">
        <role name="writertoremove" roletype="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0" type="writer" connector="//@interimmodels.9/@designmodel/@connector.6"/>
        <role name="writestoragetoremove" roletype="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.1" type="writestorage" connector="//@interimmodels.9/@designmodel/@connector.6"/>
      </connector>
      <connector name="billwire" type="REConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader" connector="//@interimmodels.9/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage" connector="//@interimmodels.9/@designmodel/@connector.7"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" connector="//@interimmodels.9/@designmodel/@connector.8">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.9/@designmodel/@connector.8">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <connector name="tokenwireref">
        <role name="requester" type="tolink" connector="//@interimmodels.9/@designmodel/@connector.9">
          <roletype href="sso.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.9/@designmodel/@connector.9">
          <roletype href="sso.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.9/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.9/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.9/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.9/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.9/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.9/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.9/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.9/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.9/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.9/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.9/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.9/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.9/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.9/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.9/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.9/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.9/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.9/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.9/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.9/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.9/@designmodel" visitedStates="197" verifyTime="0.085503" testport="//@interimmodels.9/@designmodel/@component.0/@port.0" traceExample="init -> PassengerUI_call_callride -> PassengerUI_callwire_requester_process -> callwire_req!24 -> callwire_req?24 -> TripMgmt_callwire_responder_invoke -> TripMgmt_accept_acknowledged -> TripMgmt_driverquerywire_querier_process -> driverquerywire_stmt!24 -> driverquerywire_stmt?24 -> DriverRecord_driverquery_quried -> DriverRecord_driverquerywire_readstore_process -> driverquerywire_res!24 -> driverquerywire_res?24 -> TripMgmt_driverquerywire_querier_Skip -> TripMgmt_assignwire_eventpublisher_process -> assignwire_pevt!24 -> assignwire_pevt?24 -> AssignwireLog_logassign_logged -> AssignwireLog_assignwire_eventstore_process -> assignwire_sevt!24 -> AssignwireLog_assignwire_eventstore_persist -> assignwire_sevt?24 -> assignwire_bevt!24 -> assignwire_bevt?24 -> DriverUI_notify_notified -> DriverUI_assignwire_eventsubscriber_process -> TripMgmt_assignwire_eventpublisher_broadcast -> TripMgmt_assignwire_eventpublisher_Skip -> TripMgmt_callwire_responder_process -> callwire_res!24 -> callwire_res?24" exprText="[]  (PassengerUI.call.callride -> &lt;> DriverUI.notify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.9/@designmodel" visitedStates="131" verifyTime="0.006578499999999999" testport="//@interimmodels.9/@designmodel/@component.0/@port.0" traceExample="init -> PassengerUI_call_callride -> PassengerUI_callwire_requester_process -> callwire_req!72 -> callwire_req?72 -> TripMgmt_callwire_responder_invoke -> TripMgmt_accept_acknowledged -> TripMgmt_driverquerywire_querier_process -> driverquerywire_stmt!72 -> driverquerywire_stmt?72 -> DriverRecord_driverquery_quried -> DriverRecord_driverquerywire_readstore_process -> driverquerywire_res!72 -> driverquerywire_res?72 -> TripMgmt_driverquerywire_querier_Skip -> TripMgmt_assignwire_eventpublisher_process -> assignwire_pevt!72 -> assignwire_pevt?72 -> AssignwireLog_logassign_logged -> AssignwireLog_assignwire_eventstore_process -> assignwire_sevt!72 -> AssignwireLog_assignwire_eventstore_persist -> assignwire_sevt?72 -> assignwire_bevt!72 -> assignwire_bevt?72 -> DriverUI_notify_notified -> DriverUI_assignwire_eventsubscriber_process -> TripMgmt_assignwire_eventpublisher_broadcast -> TripMgmt_assignwire_eventpublisher_Skip -> TripMgmt_callwire_responder_process -> callwire_res!72 -> callwire_res?72" exprText="[]  (TripMgmt.accept.acknowledged -> &lt;> DriverRecord.driverquery.quried)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.9/@designmodel" counterExample="" visitedStates="10" verifyTime="0.0050953" testport="//@interimmodels.9/@designmodel/@component.0/@port.1" traceExample="init -> PassengerUI_pay_issuepay -> PassengerUI_paywire_writer_process -> paywire_req!64 -> paywire_req?64 -> Payment_paywire_writestorage_invoke -> Payment_record_payrecorded -> Payment_paywire_writestorage_process -> paywire_res!64 -> paywire_res?64" exprText="[]  (BillingGateway.process.processed -> &lt;> Payment.list.listed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.4/@port.1/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.9/@designmodel" visitedStates="24" verifyTime="0.0044913999999999996" testport="//@interimmodels.9/@designmodel/@component.0/@port.2" traceExample="init -> PassengerUI_plogin_login -> PassengerUI_authwire_requester_process -> authwire_req!57 -> authwire_req?57 -> SignOn_authwire_responder_invoke -> SignOn_auth_authenticated -> SignOn_userquerywire_reader_process -> userquerywire_req!57 -> userquerywire_req?57 -> UserDB_userquerywire_readstorage_invoke -> UserDB_find_queried -> UserDB_userquerywire_readstorage_process -> userquerywire_res!57 -> userquerywire_res?57 -> SignOn_userquerywire_reader_Skip -> SignOn_authwire_responder_process -> authwire_res!57 -> authwire_res?57" exprText="[]  (PassengerUI.plogin.login -> &lt;> SignOn.auth.authenticated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.0/@port.2/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.9/@designmodel" visitedStates="29" verifyTime="0.0046748" testport="//@interimmodels.9/@designmodel/@component.2/@port.1" traceExample="init -> DriverUI_dlogin_login -> DriverUI_authwire_requester_process -> authwire_req!32 -> authwire_req?32 -> SignOn_authwire_responder_invoke -> SignOn_auth_authenticated -> SignOn_userquerywire_reader_process -> userquerywire_req!32 -> userquerywire_req?32 -> UserDB_userquerywire_readstorage_invoke -> UserDB_find_queried -> UserDB_userquerywire_readstorage_process -> userquerywire_res!32 -> userquerywire_res?32 -> SignOn_userquerywire_reader_Skip -> SignOn_authwire_responder_process -> authwire_res!32 -> authwire_res?32" exprText="[]  (DriverUI.dlogin.login -> &lt;> UserDB.find.queried)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.2/@port.1/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.9/@designmodel/@component.0/@port.1" exprText="[]  (PassengerUI.pay.issuepay -> &lt;> paymentgatewayref.commitref.checked)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="signon1" testport="//@interimmodels.9/@designmodel/@component.0/@port.3" exprText="[]  (PassengerUI.ssologinref.login ->  &lt;> ssoserverref.issueref.tokenissuerefd)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="deliverer1" testport="//@interimmodels.9/@designmodel/@component.12/@port.0" exprText="[]  (eatuiref.callref.callrefride -> &lt;> DriverUI.notify.notified)"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="1" description="deliverer - establish-link">
    <designmodel name="interimdeliverer1">
      <component name="PassengerUI" type="client">
        <port name="call" role="//@interimmodels.10/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="callride"/>
        </port>
        <port name="pay" role="//@interimmodels.10/@designmodel/@connector.8/@role.0" type="request,OutboundPort">
          <events name="issuepay"/>
        </port>
        <port name="plogin" role="//@interimmodels.10/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="login"/>
        </port>
        <port name="ssologinref" role="//@interimmodels.10/@designmodel/@connector.9/@role.0" type="request,OutboundPort">
          <events name="submit"/>
        </port>
      </component>
      <component name="TripMgmt" type="server,eventsource,datareader,readendpoint">
        <port name="accept" role="//@interimmodels.10/@designmodel/@connector.0/@role.1 //@interimmodels.10/@designmodel/@connector.1/@role.0 //@interimmodels.10/@designmodel/@connector.2/@role.0" type="response,publish,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="acknowledged"/>
        </port>
      </component>
      <component name="DriverUI" type="client,eventconsumer,commandendpoint,viewdb,listener,datastore">
        <port name="notify" role="//@interimmodels.10/@designmodel/@connector.1/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
        <port name="dlogin" role="//@interimmodels.10/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="login"/>
        </port>
        <port name="locate" role="//@interimmodels.10/@designmodel/@connector.5/@role.0" type="update,OutboundPort,EventProcessorPort">
          <events name="located"/>
        </port>
      </component>
      <component name="DriverRecord" type="commandendpoint,viewdb,datastore">
        <port name="driverquery" role="//@interimmodels.10/@designmodel/@connector.2/@role.1" type="issue,query,InboundPort,EventProcessorPort">
          <events name="quried"/>
        </port>
        <port name="driverupdate" role="//@interimmodels.10/@designmodel/@connector.5/@role.1" type="issue,query,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Payment" type="repository,RuleSecureReading,datastore">
        <port name="record" type="TamperingProofPort">
          <events name="payrecorded"/>
        </port>
        <port name="list" role="//@interimmodels.10/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="listed"/>
        </port>
      </component>
      <component name="BillingGateway" type="datareader,readendpoint">
        <port name="process" role="//@interimmodels.10/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="SignOn" type="server,datareader,readendpoint">
        <port name="auth" role="//@interimmodels.10/@designmodel/@connector.3/@role.1 //@interimmodels.10/@designmodel/@connector.4/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="authenticated"/>
        </port>
      </component>
      <component name="UserDB" type="repository,datastore">
        <port name="find" role="//@interimmodels.10/@designmodel/@connector.4/@role.1" type="access,InboundPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="AssignwireLog" type="eventlogger,datastore">
        <port name="logassign" role="//@interimmodels.10/@designmodel/@connector.1/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
      </component>
      <component name="DriverupdatewireCommandLog" type="commanddb,datastore">
        <port name="logdriver" role="//@interimmodels.10/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
      </component>
      <component name="paymentgatewayref" type="server">
        <port name="commitref" role="//@interimmodels.10/@designmodel/@connector.8/@role.1" type="response,InboundPort">
          <events name="checked"/>
        </port>
      </component>
      <component name="ssoserverref" type="server">
        <port name="issueref" role="//@interimmodels.10/@designmodel/@connector.9/@role.1" type="response,InboundPort">
          <events name="tokenissued"/>
        </port>
      </component>
      <component name="eatuiref" type="client">
        <port name="callref" role="//@interimmodels.10/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="callride"/>
        </port>
      </component>
      <connector name="callwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.2/@role.0" connector="//@interimmodels.10/@designmodel/@connector.0"/>
      </connector>
      <connector name="assignwire" type="ESConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0">
        <role name="eventpublisher" roletype="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.1"/>
        <role name="eventsubscriber" roletype="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.1"/>
        <role name="eventstore" roletype="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2" type="in" connector="//@interimmodels.10/@designmodel/@connector.1"/>
      </connector>
      <connector name="driverquerywire" type="QRConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0">
        <role name="querier" roletype="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.1/@role.0" connector="//@interimmodels.10/@designmodel/@connector.2"/>
        <role name="readstore" roletype="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.2"/>
      </connector>
      <connector name="authwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.4/@role.0" connector="//@interimmodels.10/@designmodel/@connector.3"/>
      </connector>
      <connector name="userquerywire" type="REConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.4"/>
      </connector>
      <connector name="driverupdatewire" type="CRConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0">
        <role name="commander" roletype="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.1" type="out" connector="//@interimmodels.10/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.0" type="in" connector="//@interimmodels.10/@designmodel/@connector.5"/>
        <role name="commandstore" roletype="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.2" type="in" connector="//@interimmodels.10/@designmodel/@connector.5"/>
      </connector>
      <connector name="paywiretoremove" connectortype="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0">
        <role name="writertoremove" roletype="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0" type="" connector="//@interimmodels.10/@designmodel/@connector.6"/>
        <role name="writestoragetoremove" roletype="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.1" type="" connector="//@interimmodels.10/@designmodel/@connector.6"/>
      </connector>
      <connector name="billwire" type="REConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.7"/>
      </connector>
      <connector name="paywireref" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" type="out" connector="//@interimmodels.10/@designmodel/@connector.8">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="in" connector="//@interimmodels.10/@designmodel/@connector.8">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <connector name="tokenwireref" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" type="out" connector="//@interimmodels.10/@designmodel/@connector.9">
          <roletype href="sso.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="in" connector="//@interimmodels.10/@designmodel/@connector.9">
          <roletype href="sso.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.10/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.10/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.10/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.10/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.10/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.10/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.10/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.10/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.10/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.10/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.10/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.10/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.10/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.10/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.10/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.10/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.10/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.10/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.10/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.10/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.10/@designmodel" visitedStates="197" verifyTime="0.085503" testport="//@interimmodels.10/@designmodel/@component.0/@port.0" traceExample="init -> PassengerUI_call_callride -> PassengerUI_callwire_requester_process -> callwire_req!24 -> callwire_req?24 -> TripMgmt_callwire_responder_invoke -> TripMgmt_accept_acknowledged -> TripMgmt_driverquerywire_querier_process -> driverquerywire_stmt!24 -> driverquerywire_stmt?24 -> DriverRecord_driverquery_quried -> DriverRecord_driverquerywire_readstore_process -> driverquerywire_res!24 -> driverquerywire_res?24 -> TripMgmt_driverquerywire_querier_Skip -> TripMgmt_assignwire_eventpublisher_process -> assignwire_pevt!24 -> assignwire_pevt?24 -> AssignwireLog_logassign_logged -> AssignwireLog_assignwire_eventstore_process -> assignwire_sevt!24 -> AssignwireLog_assignwire_eventstore_persist -> assignwire_sevt?24 -> assignwire_bevt!24 -> assignwire_bevt?24 -> DriverUI_notify_notified -> DriverUI_assignwire_eventsubscriber_process -> TripMgmt_assignwire_eventpublisher_broadcast -> TripMgmt_assignwire_eventpublisher_Skip -> TripMgmt_callwire_responder_process -> callwire_res!24 -> callwire_res?24" exprText="[]  (PassengerUI.call.callride -> &lt;> DriverUI.notify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.10/@designmodel" visitedStates="131" verifyTime="0.006578499999999999" testport="//@interimmodels.10/@designmodel/@component.0/@port.0" traceExample="init -> PassengerUI_call_callride -> PassengerUI_callwire_requester_process -> callwire_req!72 -> callwire_req?72 -> TripMgmt_callwire_responder_invoke -> TripMgmt_accept_acknowledged -> TripMgmt_driverquerywire_querier_process -> driverquerywire_stmt!72 -> driverquerywire_stmt?72 -> DriverRecord_driverquery_quried -> DriverRecord_driverquerywire_readstore_process -> driverquerywire_res!72 -> driverquerywire_res?72 -> TripMgmt_driverquerywire_querier_Skip -> TripMgmt_assignwire_eventpublisher_process -> assignwire_pevt!72 -> assignwire_pevt?72 -> AssignwireLog_logassign_logged -> AssignwireLog_assignwire_eventstore_process -> assignwire_sevt!72 -> AssignwireLog_assignwire_eventstore_persist -> assignwire_sevt?72 -> assignwire_bevt!72 -> assignwire_bevt?72 -> DriverUI_notify_notified -> DriverUI_assignwire_eventsubscriber_process -> TripMgmt_assignwire_eventpublisher_broadcast -> TripMgmt_assignwire_eventpublisher_Skip -> TripMgmt_callwire_responder_process -> callwire_res!72 -> callwire_res?72" exprText="[]  (TripMgmt.accept.acknowledged -> &lt;> DriverRecord.driverquery.quried)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.10/@designmodel" counterExample="" visitedStates="10" verifyTime="0.0050953" testport="//@interimmodels.10/@designmodel/@component.0/@port.1" traceExample="init -> PassengerUI_pay_issuepay -> PassengerUI_paywire_writer_process -> paywire_req!64 -> paywire_req?64 -> Payment_paywire_writestorage_invoke -> Payment_record_payrecorded -> Payment_paywire_writestorage_process -> paywire_res!64 -> paywire_res?64" exprText="[]  (BillingGateway.process.processed -> &lt;> Payment.list.listed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.4/@port.1/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.10/@designmodel" visitedStates="24" verifyTime="0.0044913999999999996" testport="//@interimmodels.10/@designmodel/@component.0/@port.2" traceExample="init -> PassengerUI_plogin_login -> PassengerUI_authwire_requester_process -> authwire_req!57 -> authwire_req?57 -> SignOn_authwire_responder_invoke -> SignOn_auth_authenticated -> SignOn_userquerywire_reader_process -> userquerywire_req!57 -> userquerywire_req?57 -> UserDB_userquerywire_readstorage_invoke -> UserDB_find_queried -> UserDB_userquerywire_readstorage_process -> userquerywire_res!57 -> userquerywire_res?57 -> SignOn_userquerywire_reader_Skip -> SignOn_authwire_responder_process -> authwire_res!57 -> authwire_res?57" exprText="[]  (PassengerUI.plogin.login -> &lt;> SignOn.auth.authenticated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.0/@port.2/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.10/@designmodel" visitedStates="29" verifyTime="0.0046748" testport="//@interimmodels.10/@designmodel/@component.2/@port.1" traceExample="init -> DriverUI_dlogin_login -> DriverUI_authwire_requester_process -> authwire_req!32 -> authwire_req?32 -> SignOn_authwire_responder_invoke -> SignOn_auth_authenticated -> SignOn_userquerywire_reader_process -> userquerywire_req!32 -> userquerywire_req?32 -> UserDB_userquerywire_readstorage_invoke -> UserDB_find_queried -> UserDB_userquerywire_readstorage_process -> userquerywire_res!32 -> userquerywire_res?32 -> SignOn_userquerywire_reader_Skip -> SignOn_authwire_responder_process -> authwire_res!32 -> authwire_res?32" exprText="[]  (DriverUI.dlogin.login -> &lt;> UserDB.find.queried)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.2/@port.1/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.10/@designmodel/@component.0/@port.1" exprText="[]  (PassengerUI.pay.issuepay -> &lt;> paymentgatewayref.commitref.checked)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="signon1" testport="//@interimmodels.10/@designmodel/@component.0/@port.3" exprText="[]  (PassengerUI.ssologinref.login ->  &lt;> ssoserverref.issueref.tokenissuerefd)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="deliverer1" visitedStates="127" verifyTime="0.0081476" testport="//@interimmodels.10/@designmodel/@component.12/@port.0" traceExample="init -> eatuiref_callref_callride -> eatuiref_callwire_requester_process -> callwire_req!12 -> callwire_req?12 -> TripMgmt_callwire_responder_invoke -> TripMgmt_accept_acknowledged -> TripMgmt_driverquerywire_querier_process -> driverquerywire_stmt!12 -> driverquerywire_stmt?12 -> DriverRecord_driverquery_quried -> DriverRecord_driverquerywire_readstore_process -> driverquerywire_res!12 -> driverquerywire_res?12 -> TripMgmt_driverquerywire_querier_Skip -> TripMgmt_assignwire_eventpublisher_process -> assignwire_pevt!12 -> assignwire_pevt?12 -> AssignwireLog_logassign_logged -> AssignwireLog_assignwire_eventstore_process -> assignwire_sevt!12 -> AssignwireLog_assignwire_eventstore_persist -> assignwire_sevt?12 -> assignwire_bevt!12 -> assignwire_bevt?12 -> DriverUI_notify_notified -> DriverUI_assignwire_eventsubscriber_process -> TripMgmt_assignwire_eventpublisher_broadcast -> TripMgmt_assignwire_eventpublisher_Skip -> TripMgmt_callwire_responder_process -> callwire_res!12 -> callwire_res?12" exprText="[]  (eatuiref.callref.callrefride -> &lt;> DriverUI.notify.notified)"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
</arch:MigrationModel>
