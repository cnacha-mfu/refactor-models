<?xml version="1.0" encoding="ASCII"?>
<arch:MigrationModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arch="http://www.example.org/arch">
  <source href="current.arch#/"/>
  <interimmodels description="mobile - setup-component" nextModel="//@interimmodels.1">
    <designmodel name="interimmobile0">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.0/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.0/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.0/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.0/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.0/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.0/@designmodel/@connector.1/@role.1 //@interimmodels.0/@designmodel/@connector.4/@role.0 //@interimmodels.0/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.0/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.0/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.0/@designmodel/@connector.2/@role.1 //@interimmodels.0/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.0/@designmodel/@connector.4/@role.1 //@interimmodels.0/@designmodel/@connector.6/@role.0 //@interimmodels.0/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.0/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.0/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.0/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.0/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.0/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.0/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.0/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.0/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.0/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.0/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.0/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.0/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="provenancemobileappref">
        <port name="prvconsumeref">
          <events name="provenancerequest"/>
        </port>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.5/@role.0" connector="//@interimmodels.0/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.4/@role.0" connector="//@interimmodels.0/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.8/@role.0" connector="//@interimmodels.0/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.4/@role.0" connector="//@interimmodels.0/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="REConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.6/@role.0" connector="//@interimmodels.0/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.9"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.0/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.0/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.0/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.0/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.0/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.0/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.0/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.0/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.0/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.0/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.0/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.0/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.0/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.0/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.0/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.0/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.0/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.0/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.0/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.0/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.0/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.0/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.0/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="340" verifyTime="0.0088024" testport="//@interimmodels.0/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!79 -> prvapiwire_req?79 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!79 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!79 -> prvmsgwire_req?79 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!79 -> comwire_req?79 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!79 -> comwire_res?79 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!79 -> finwritewire_req?79 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!79 -> finwritewire_res?79 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!79 -> prvmsgwire_res?79 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!79 -> prvapiwire_res?79 -> admsgwire_pub?79 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0048264" testport="//@interimmodels.0/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!18 -> iotreqwire_req?18 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!18 -> prvmsgwire_req?18 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!18 -> comwire_req?18 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!18 -> comwire_res?18 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!18 -> finwritewire_req?18 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!18 -> finwritewire_res?18 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!18 -> prvmsgwire_res?18 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!18 -> iotreqwire_res?18" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.0/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.0/@designmodel" visitedStates="10" verifyTime="0.0074221" testport="//@interimmodels.0/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!15 -> ibankwire_req?15 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!15 -> ibankwire_res?15" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.0/@designmodel" visitedStates="346" verifyTime="0.0150989" testport="//@interimmodels.0/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!75 -> prvapiwire_req?75 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!75 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!75 -> prvmsgwire_req?75 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!75 -> comwire_req?75 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!75 -> comwire_res?75 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!75 -> finwritewire_req?75 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!75 -> finwritewire_res?75 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!75 -> prvmsgwire_res?75 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!75 -> prvapiwire_res?75 -> admsgwire_pub?75 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.0/@designmodel" visitedStates="248" verifyTime="0.01125" testport="//@interimmodels.0/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!89 -> prvapiwire_req?89 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!89 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!89 -> prvmsgwire_req?89 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!89 -> comwire_req?89 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!89 -> comwire_res?89 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!89 -> finwritewire_req?89 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!89 -> finwritewire_res?89 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!89 -> prvmsgwire_res?89 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!89 -> prvapiwire_res?89 -> admsgwire_pub?89 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceWebApp.prvconsume.provenancerequest -> &lt;> ProvenanceInt.prvpub.prvevntpublish)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop6" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="2" verifyTime="0.0037329" testport="//@interimmodels.0/@designmodel/@component.9/@port.1" traceExample="********Verification Result********&#xD;&#xA;The Assertion (agridigital() |= ![](&lt;>Commodity_liststate_listed->&lt;>Controller_monitor_listcommodity)) is NOT valid.&#xD;&#xA;A counterexample is presented as follows.&#xD;&#xA;&lt;init" exprText="[]  (&lt;> Commodity.liststate.listed -> &lt;> Controller.monitor.listcommodity)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.5">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.9/@port.1/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.5/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.11/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="mobile1" testport="//@interimmodels.0/@designmodel/@component.12/@port.0" exprText="[]  (provenancemobileappref.prvconsumeref.provenancerequest -> &lt;> ProvenanceInt.prvpub.prvevntpublish)"/>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.0/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.0/@designmodel/@host.0/@node.0" namedport="//@interimmodels.0/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.0/@designmodel/@host.0/@node.0" namedport="//@interimmodels.0/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.0/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.0/@designmodel/@host.1/@node.0" namedport="//@interimmodels.0/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.0/@designmodel/@component.2 //@interimmodels.0/@designmodel/@component.3 //@interimmodels.0/@designmodel/@component.5 //@interimmodels.0/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.0/@designmodel/@host.2/@node.0" namedport="//@interimmodels.0/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.0/@designmodel/@host.2/@node.0" namedport="//@interimmodels.0/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.0/@designmodel/@host.2/@node.0" namedport="//@interimmodels.0/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.0/@designmodel/@component.10 //@interimmodels.0/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.0/@designmodel/@host.2/@node.1" namedport="//@interimmodels.0/@designmodel/@component.10/@port.0 //@interimmodels.0/@designmodel/@component.10/@port.1 //@interimmodels.0/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.0/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.0/@designmodel/@host.3/@node.0" namedport="//@interimmodels.0/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.0/@designmodel/@host.3/@node.0" namedport="//@interimmodels.0/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.0/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.0/@designmodel/@host.4/@node.0" namedport="//@interimmodels.0/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.0/@designmodel/@host.4/@node.0" namedport="//@interimmodels.0/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.0/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.0/@designmodel/@host.4/@node.1" namedport="//@interimmodels.0/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.0/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.0/@designmodel/@host.5/@node.0" namedport="//@interimmodels.0/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.0/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.0/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.0/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.0/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.0/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.0/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.0/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.0/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.0/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.0/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.0/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="1" description="mobile - establish-link" nextModel="//@interimmodels.2">
    <designmodel name="interimmobile1">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.1/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.1/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.1/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.1/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.1/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.1/@designmodel/@connector.1/@role.1 //@interimmodels.1/@designmodel/@connector.4/@role.0 //@interimmodels.1/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.1/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.1/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.1/@designmodel/@connector.2/@role.1 //@interimmodels.1/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.1/@designmodel/@connector.4/@role.1 //@interimmodels.1/@designmodel/@connector.6/@role.0 //@interimmodels.1/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.1/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.1/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.1/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.1/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.1/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.1/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.1/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.1/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.1/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.1/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.1/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.1/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="provenancemobileappref">
        <port name="prvconsumeref" role="//@interimmodels.1/@designmodel/@connector.1/@role.0">
          <events name="provenancerequest"/>
        </port>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="tolink" connector="//@interimmodels.1/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.5/@role.0" connector="//@interimmodels.1/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.4/@role.0" connector="//@interimmodels.1/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.8/@role.0" connector="//@interimmodels.1/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.4/@role.0" connector="//@interimmodels.1/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="REConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.6/@role.0" connector="//@interimmodels.1/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.9"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.1/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.1/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.1/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.1/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.1/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.1/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.1/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.1/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.1/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.1/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.1/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.1/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.1/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.1/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.1/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.1/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.1/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.1/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.1/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.1/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.1/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.1/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.1/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="340" verifyTime="0.0088024" testport="//@interimmodels.1/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!79 -> prvapiwire_req?79 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!79 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!79 -> prvmsgwire_req?79 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!79 -> comwire_req?79 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!79 -> comwire_res?79 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!79 -> finwritewire_req?79 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!79 -> finwritewire_res?79 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!79 -> prvmsgwire_res?79 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!79 -> prvapiwire_res?79 -> admsgwire_pub?79 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0048264" testport="//@interimmodels.1/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!18 -> iotreqwire_req?18 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!18 -> prvmsgwire_req?18 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!18 -> comwire_req?18 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!18 -> comwire_res?18 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!18 -> finwritewire_req?18 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!18 -> finwritewire_res?18 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!18 -> prvmsgwire_res?18 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!18 -> iotreqwire_res?18" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.1/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.1/@designmodel" visitedStates="10" verifyTime="0.0074221" testport="//@interimmodels.1/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!15 -> ibankwire_req?15 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!15 -> ibankwire_res?15" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.1/@designmodel" visitedStates="346" verifyTime="0.0150989" testport="//@interimmodels.1/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!75 -> prvapiwire_req?75 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!75 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!75 -> prvmsgwire_req?75 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!75 -> comwire_req?75 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!75 -> comwire_res?75 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!75 -> finwritewire_req?75 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!75 -> finwritewire_res?75 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!75 -> prvmsgwire_res?75 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!75 -> prvapiwire_res?75 -> admsgwire_pub?75 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.1/@designmodel" visitedStates="248" verifyTime="0.01125" testport="//@interimmodels.1/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!89 -> prvapiwire_req?89 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!89 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!89 -> prvmsgwire_req?89 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!89 -> comwire_req?89 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!89 -> comwire_res?89 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!89 -> finwritewire_req?89 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!89 -> finwritewire_res?89 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!89 -> prvmsgwire_res?89 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!89 -> prvapiwire_res?89 -> admsgwire_pub?89 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceWebApp.prvconsume.provenancerequest -> &lt;> ProvenanceInt.prvpub.prvevntpublish)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop6" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="2" verifyTime="0.0037329" testport="//@interimmodels.1/@designmodel/@component.9/@port.1" traceExample="********Verification Result********&#xD;&#xA;The Assertion (agridigital() |= ![](&lt;>Commodity_liststate_listed->&lt;>Controller_monitor_listcommodity)) is NOT valid.&#xD;&#xA;A counterexample is presented as follows.&#xD;&#xA;&lt;init" exprText="[]  (&lt;> Commodity.liststate.listed -> &lt;> Controller.monitor.listcommodity)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.5">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.9/@port.1/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.5/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.11/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="mobile1" testport="//@interimmodels.1/@designmodel/@component.12/@port.0" exprText="[]  (provenancemobileappref.prvconsumeref.provenancerequest -> &lt;> ProvenanceInt.prvpub.prvevntpublish)"/>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.1/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.1/@designmodel/@host.0/@node.0" namedport="//@interimmodels.1/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.1/@designmodel/@host.0/@node.0" namedport="//@interimmodels.1/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.1/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.1/@designmodel/@host.1/@node.0" namedport="//@interimmodels.1/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.1/@designmodel/@component.2 //@interimmodels.1/@designmodel/@component.3 //@interimmodels.1/@designmodel/@component.5 //@interimmodels.1/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.1/@designmodel/@host.2/@node.0" namedport="//@interimmodels.1/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.1/@designmodel/@host.2/@node.0" namedport="//@interimmodels.1/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.1/@designmodel/@host.2/@node.0" namedport="//@interimmodels.1/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.1/@designmodel/@component.10 //@interimmodels.1/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.1/@designmodel/@host.2/@node.1" namedport="//@interimmodels.1/@designmodel/@component.10/@port.0 //@interimmodels.1/@designmodel/@component.10/@port.1 //@interimmodels.1/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.1/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.1/@designmodel/@host.3/@node.0" namedport="//@interimmodels.1/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.1/@designmodel/@host.3/@node.0" namedport="//@interimmodels.1/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.1/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.1/@designmodel/@host.4/@node.0" namedport="//@interimmodels.1/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.1/@designmodel/@host.4/@node.0" namedport="//@interimmodels.1/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.1/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.1/@designmodel/@host.4/@node.1" namedport="//@interimmodels.1/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.1/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.1/@designmodel/@host.5/@node.0" namedport="//@interimmodels.1/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.1/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.1/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.1/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.1/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.1/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.1/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.1/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.1/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.1/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.1/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.1/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels description="market - setup-connector" nextModel="//@interimmodels.3">
    <designmodel name="interimmarket0">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.2/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.2/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.2/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.2/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.2/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.2/@designmodel/@connector.1/@role.1 //@interimmodels.2/@designmodel/@connector.4/@role.0 //@interimmodels.2/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.2/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.2/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.2/@designmodel/@connector.2/@role.1 //@interimmodels.2/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.2/@designmodel/@connector.4/@role.1 //@interimmodels.2/@designmodel/@connector.6/@role.0 //@interimmodels.2/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.2/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.2/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.2/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.2/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.2/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.2/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.2/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.2/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.2/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.2/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.2/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.2/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="provenancemobileappref">
        <port name="prvconsumeref" role="//@interimmodels.2/@designmodel/@connector.1/@role.0">
          <events name="provenancerequest"/>
        </port>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="tolink" connector="//@interimmodels.2/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.5/@role.0" connector="//@interimmodels.2/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.4/@role.0" connector="//@interimmodels.2/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.8/@role.0" connector="//@interimmodels.2/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.4/@role.0" connector="//@interimmodels.2/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="REConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.6/@role.0" connector="//@interimmodels.2/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.9"/>
      </connector>
      <connector name="tradewireref">
        <role name="requester" type="requester" connector="//@interimmodels.2/@designmodel/@connector.10">
          <roletype href="market.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="responder" connector="//@interimmodels.2/@designmodel/@connector.10">
          <roletype href="market.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.2/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.2/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.2/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.2/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.2/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.2/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.2/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.2/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.2/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.2/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.2/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.2/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.2/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.2/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.2/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.2/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.2/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.2/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.2/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.2/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.2/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.2/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.2/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="340" verifyTime="0.0088024" testport="//@interimmodels.2/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!79 -> prvapiwire_req?79 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!79 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!79 -> prvmsgwire_req?79 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!79 -> comwire_req?79 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!79 -> comwire_res?79 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!79 -> finwritewire_req?79 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!79 -> finwritewire_res?79 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!79 -> prvmsgwire_res?79 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!79 -> prvapiwire_res?79 -> admsgwire_pub?79 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0048264" testport="//@interimmodels.2/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!18 -> iotreqwire_req?18 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!18 -> prvmsgwire_req?18 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!18 -> comwire_req?18 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!18 -> comwire_res?18 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!18 -> finwritewire_req?18 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!18 -> finwritewire_res?18 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!18 -> prvmsgwire_res?18 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!18 -> iotreqwire_res?18" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.2/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.2/@designmodel" visitedStates="10" verifyTime="0.0074221" testport="//@interimmodels.2/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!15 -> ibankwire_req?15 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!15 -> ibankwire_res?15" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.2/@designmodel" visitedStates="346" verifyTime="0.0150989" testport="//@interimmodels.2/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!75 -> prvapiwire_req?75 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!75 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!75 -> prvmsgwire_req?75 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!75 -> comwire_req?75 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!75 -> comwire_res?75 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!75 -> finwritewire_req?75 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!75 -> finwritewire_res?75 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!75 -> prvmsgwire_res?75 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!75 -> prvapiwire_res?75 -> admsgwire_pub?75 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.2/@designmodel" visitedStates="248" verifyTime="0.01125" testport="//@interimmodels.2/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!89 -> prvapiwire_req?89 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!89 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!89 -> prvmsgwire_req?89 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!89 -> comwire_req?89 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!89 -> comwire_res?89 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!89 -> finwritewire_req?89 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!89 -> finwritewire_res?89 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!89 -> prvmsgwire_res?89 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!89 -> prvapiwire_res?89 -> admsgwire_pub?89 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceWebApp.prvconsume.provenancerequest -> &lt;> ProvenanceInt.prvpub.prvevntpublish)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop6" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="2" verifyTime="0.0037329" testport="//@interimmodels.2/@designmodel/@component.9/@port.1" traceExample="********Verification Result********&#xD;&#xA;The Assertion (agridigital() |= ![](&lt;>Commodity_liststate_listed->&lt;>Controller_monitor_listcommodity)) is NOT valid.&#xD;&#xA;A counterexample is presented as follows.&#xD;&#xA;&lt;init" exprText="[]  (&lt;> Commodity.liststate.listed -> &lt;> Controller.monitor.listcommodity)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.5">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.9/@port.1/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.5/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.11/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="mobile1" testport="//@interimmodels.2/@designmodel/@component.12/@port.0" exprText="[]  (provenancemobileappref.prvconsumeref.provenancerequest -> &lt;> ProvenanceInt.prvpub.prvevntpublish)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="market1" exprText="[]  (ADWebApp.advertiseref.submitted -> &lt;> marketplaceref.postref.committed)"/>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.2/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.2/@designmodel/@host.0/@node.0" namedport="//@interimmodels.2/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.2/@designmodel/@host.0/@node.0" namedport="//@interimmodels.2/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.2/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.2/@designmodel/@host.1/@node.0" namedport="//@interimmodels.2/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.2/@designmodel/@component.2 //@interimmodels.2/@designmodel/@component.3 //@interimmodels.2/@designmodel/@component.5 //@interimmodels.2/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.2/@designmodel/@host.2/@node.0" namedport="//@interimmodels.2/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.2/@designmodel/@host.2/@node.0" namedport="//@interimmodels.2/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.2/@designmodel/@host.2/@node.0" namedport="//@interimmodels.2/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.2/@designmodel/@component.10 //@interimmodels.2/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.2/@designmodel/@host.2/@node.1" namedport="//@interimmodels.2/@designmodel/@component.10/@port.0 //@interimmodels.2/@designmodel/@component.10/@port.1 //@interimmodels.2/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.2/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.2/@designmodel/@host.3/@node.0" namedport="//@interimmodels.2/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.2/@designmodel/@host.3/@node.0" namedport="//@interimmodels.2/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.2/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.2/@designmodel/@host.4/@node.0" namedport="//@interimmodels.2/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.2/@designmodel/@host.4/@node.0" namedport="//@interimmodels.2/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.2/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.2/@designmodel/@host.4/@node.1" namedport="//@interimmodels.2/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.2/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.2/@designmodel/@host.5/@node.0" namedport="//@interimmodels.2/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.2/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.2/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.2/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.2/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.2/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.2/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.2/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.2/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.2/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.2/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.2/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="1" description="market - establish-link" nextModel="//@interimmodels.4">
    <designmodel name="interimmarket1">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.3/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.3/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.3/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
        <port name="advertiseref" role="//@interimmodels.3/@designmodel/@connector.10/@role.0">
          <events name="submitted"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.3/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.3/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.3/@designmodel/@connector.1/@role.1 //@interimmodels.3/@designmodel/@connector.4/@role.0 //@interimmodels.3/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.3/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.3/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.3/@designmodel/@connector.2/@role.1 //@interimmodels.3/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.3/@designmodel/@connector.4/@role.1 //@interimmodels.3/@designmodel/@connector.6/@role.0 //@interimmodels.3/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.3/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.3/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.3/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.3/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.3/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.3/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.3/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.3/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.3/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.3/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.3/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.3/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="provenancemobileappref">
        <port name="prvconsumeref" role="//@interimmodels.3/@designmodel/@connector.1/@role.0">
          <events name="provenancerequest"/>
        </port>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="tolink" connector="//@interimmodels.3/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.5/@role.0" connector="//@interimmodels.3/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.4/@role.0" connector="//@interimmodels.3/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.8/@role.0" connector="//@interimmodels.3/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.4/@role.0" connector="//@interimmodels.3/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="REConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.6/@role.0" connector="//@interimmodels.3/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.9"/>
      </connector>
      <connector name="tradewireref">
        <role name="requester" type="tolink" connector="//@interimmodels.3/@designmodel/@connector.10">
          <roletype href="market.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="responder" connector="//@interimmodels.3/@designmodel/@connector.10">
          <roletype href="market.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.3/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.3/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.3/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.3/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.3/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.3/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.3/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.3/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.3/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.3/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.3/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.3/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.3/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.3/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.3/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.3/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.3/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.3/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.3/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.3/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.3/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.3/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.3/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="340" verifyTime="0.0088024" testport="//@interimmodels.3/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!79 -> prvapiwire_req?79 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!79 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!79 -> prvmsgwire_req?79 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!79 -> comwire_req?79 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!79 -> comwire_res?79 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!79 -> finwritewire_req?79 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!79 -> finwritewire_res?79 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!79 -> prvmsgwire_res?79 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!79 -> prvapiwire_res?79 -> admsgwire_pub?79 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0048264" testport="//@interimmodels.3/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!18 -> iotreqwire_req?18 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!18 -> prvmsgwire_req?18 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!18 -> comwire_req?18 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!18 -> comwire_res?18 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!18 -> finwritewire_req?18 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!18 -> finwritewire_res?18 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!18 -> prvmsgwire_res?18 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!18 -> iotreqwire_res?18" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.3/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.3/@designmodel" visitedStates="10" verifyTime="0.0074221" testport="//@interimmodels.3/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!15 -> ibankwire_req?15 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!15 -> ibankwire_res?15" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.3/@designmodel" visitedStates="346" verifyTime="0.0150989" testport="//@interimmodels.3/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!75 -> prvapiwire_req?75 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!75 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!75 -> prvmsgwire_req?75 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!75 -> comwire_req?75 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!75 -> comwire_res?75 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!75 -> finwritewire_req?75 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!75 -> finwritewire_res?75 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!75 -> prvmsgwire_res?75 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!75 -> prvapiwire_res?75 -> admsgwire_pub?75 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.3/@designmodel" visitedStates="248" verifyTime="0.01125" testport="//@interimmodels.3/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!89 -> prvapiwire_req?89 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!89 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!89 -> prvmsgwire_req?89 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!89 -> comwire_req?89 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!89 -> comwire_res?89 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!89 -> finwritewire_req?89 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!89 -> finwritewire_res?89 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!89 -> prvmsgwire_res?89 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!89 -> prvapiwire_res?89 -> admsgwire_pub?89 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceWebApp.prvconsume.provenancerequest -> &lt;> ProvenanceInt.prvpub.prvevntpublish)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop6" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="2" verifyTime="0.0037329" testport="//@interimmodels.3/@designmodel/@component.9/@port.1" traceExample="********Verification Result********&#xD;&#xA;The Assertion (agridigital() |= ![](&lt;>Commodity_liststate_listed->&lt;>Controller_monitor_listcommodity)) is NOT valid.&#xD;&#xA;A counterexample is presented as follows.&#xD;&#xA;&lt;init" exprText="[]  (&lt;> Commodity.liststate.listed -> &lt;> Controller.monitor.listcommodity)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.5">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.9/@port.1/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.5/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.11/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="mobile1" testport="//@interimmodels.3/@designmodel/@component.12/@port.0" exprText="[]  (provenancemobileappref.prvconsumeref.provenancerequest -> &lt;> ProvenanceInt.prvpub.prvevntpublish)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="market1" testport="//@interimmodels.3/@designmodel/@component.0/@port.2" exprText="[]  (ADWebApp.advertiseref.submitted -> &lt;> marketplaceref.postref.committed)"/>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.3/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.3/@designmodel/@host.0/@node.0" namedport="//@interimmodels.3/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.3/@designmodel/@host.0/@node.0" namedport="//@interimmodels.3/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.3/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.3/@designmodel/@host.1/@node.0" namedport="//@interimmodels.3/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.3/@designmodel/@component.2 //@interimmodels.3/@designmodel/@component.3 //@interimmodels.3/@designmodel/@component.5 //@interimmodels.3/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.3/@designmodel/@host.2/@node.0" namedport="//@interimmodels.3/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.3/@designmodel/@host.2/@node.0" namedport="//@interimmodels.3/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.3/@designmodel/@host.2/@node.0" namedport="//@interimmodels.3/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.3/@designmodel/@component.10 //@interimmodels.3/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.3/@designmodel/@host.2/@node.1" namedport="//@interimmodels.3/@designmodel/@component.10/@port.0 //@interimmodels.3/@designmodel/@component.10/@port.1 //@interimmodels.3/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.3/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.3/@designmodel/@host.3/@node.0" namedport="//@interimmodels.3/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.3/@designmodel/@host.3/@node.0" namedport="//@interimmodels.3/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.3/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.3/@designmodel/@host.4/@node.0" namedport="//@interimmodels.3/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.3/@designmodel/@host.4/@node.0" namedport="//@interimmodels.3/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.3/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.3/@designmodel/@host.4/@node.1" namedport="//@interimmodels.3/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.3/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.3/@designmodel/@host.5/@node.0" namedport="//@interimmodels.3/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.3/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.3/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.3/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.3/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.3/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.3/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.3/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.3/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.3/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.3/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.3/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="2" description="market - setup-component" nextModel="//@interimmodels.5">
    <designmodel name="interimmarket2">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.4/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.4/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.4/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
        <port name="advertiseref" role="//@interimmodels.4/@designmodel/@connector.10/@role.0">
          <events name="submitted"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.4/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.4/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.4/@designmodel/@connector.1/@role.1 //@interimmodels.4/@designmodel/@connector.4/@role.0 //@interimmodels.4/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.4/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.4/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.4/@designmodel/@connector.2/@role.1 //@interimmodels.4/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.4/@designmodel/@connector.4/@role.1 //@interimmodels.4/@designmodel/@connector.6/@role.0 //@interimmodels.4/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.4/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.4/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.4/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.4/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.4/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.4/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.4/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.4/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.4/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.4/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.4/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.4/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="provenancemobileappref">
        <port name="prvconsumeref" role="//@interimmodels.4/@designmodel/@connector.1/@role.0">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="marketplaceref">
        <port name="postref">
          <events name="committed"/>
        </port>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="tolink" connector="//@interimmodels.4/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.5/@role.0" connector="//@interimmodels.4/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.4/@role.0" connector="//@interimmodels.4/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.8/@role.0" connector="//@interimmodels.4/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.4/@role.0" connector="//@interimmodels.4/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="REConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.6/@role.0" connector="//@interimmodels.4/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.9"/>
      </connector>
      <connector name="tradewireref">
        <role name="requester" type="tolink" connector="//@interimmodels.4/@designmodel/@connector.10">
          <roletype href="market.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="responder" connector="//@interimmodels.4/@designmodel/@connector.10">
          <roletype href="market.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.4/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.4/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.4/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.4/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.4/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.4/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.4/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.4/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.4/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.4/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.4/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.4/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.4/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.4/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.4/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.4/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.4/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.4/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.4/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.4/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.4/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.4/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.4/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="340" verifyTime="0.0088024" testport="//@interimmodels.4/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!79 -> prvapiwire_req?79 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!79 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!79 -> prvmsgwire_req?79 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!79 -> comwire_req?79 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!79 -> comwire_res?79 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!79 -> finwritewire_req?79 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!79 -> finwritewire_res?79 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!79 -> prvmsgwire_res?79 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!79 -> prvapiwire_res?79 -> admsgwire_pub?79 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0048264" testport="//@interimmodels.4/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!18 -> iotreqwire_req?18 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!18 -> prvmsgwire_req?18 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!18 -> comwire_req?18 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!18 -> comwire_res?18 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!18 -> finwritewire_req?18 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!18 -> finwritewire_res?18 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!18 -> prvmsgwire_res?18 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!18 -> iotreqwire_res?18" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.4/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.4/@designmodel" visitedStates="10" verifyTime="0.0074221" testport="//@interimmodels.4/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!15 -> ibankwire_req?15 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!15 -> ibankwire_res?15" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.4/@designmodel" visitedStates="346" verifyTime="0.0150989" testport="//@interimmodels.4/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!75 -> prvapiwire_req?75 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!75 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!75 -> prvmsgwire_req?75 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!75 -> comwire_req?75 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!75 -> comwire_res?75 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!75 -> finwritewire_req?75 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!75 -> finwritewire_res?75 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!75 -> prvmsgwire_res?75 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!75 -> prvapiwire_res?75 -> admsgwire_pub?75 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.4/@designmodel" visitedStates="248" verifyTime="0.01125" testport="//@interimmodels.4/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!89 -> prvapiwire_req?89 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!89 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!89 -> prvmsgwire_req?89 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!89 -> comwire_req?89 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!89 -> comwire_res?89 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!89 -> finwritewire_req?89 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!89 -> finwritewire_res?89 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!89 -> prvmsgwire_res?89 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!89 -> prvapiwire_res?89 -> admsgwire_pub?89 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceWebApp.prvconsume.provenancerequest -> &lt;> ProvenanceInt.prvpub.prvevntpublish)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop6" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="2" verifyTime="0.0037329" testport="//@interimmodels.4/@designmodel/@component.9/@port.1" traceExample="********Verification Result********&#xD;&#xA;The Assertion (agridigital() |= ![](&lt;>Commodity_liststate_listed->&lt;>Controller_monitor_listcommodity)) is NOT valid.&#xD;&#xA;A counterexample is presented as follows.&#xD;&#xA;&lt;init" exprText="[]  (&lt;> Commodity.liststate.listed -> &lt;> Controller.monitor.listcommodity)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.5">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.9/@port.1/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.5/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.11/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="mobile1" testport="//@interimmodels.4/@designmodel/@component.12/@port.0" exprText="[]  (provenancemobileappref.prvconsumeref.provenancerequest -> &lt;> ProvenanceInt.prvpub.prvevntpublish)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="market1" testport="//@interimmodels.4/@designmodel/@component.0/@port.2" exprText="[]  (ADWebApp.advertiseref.submitted -> &lt;> marketplaceref.postref.committed)"/>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.4/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.4/@designmodel/@host.0/@node.0" namedport="//@interimmodels.4/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.4/@designmodel/@host.0/@node.0" namedport="//@interimmodels.4/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.4/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.4/@designmodel/@host.1/@node.0" namedport="//@interimmodels.4/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.4/@designmodel/@component.2 //@interimmodels.4/@designmodel/@component.3 //@interimmodels.4/@designmodel/@component.5 //@interimmodels.4/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.4/@designmodel/@host.2/@node.0" namedport="//@interimmodels.4/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.4/@designmodel/@host.2/@node.0" namedport="//@interimmodels.4/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.4/@designmodel/@host.2/@node.0" namedport="//@interimmodels.4/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.4/@designmodel/@component.10 //@interimmodels.4/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.4/@designmodel/@host.2/@node.1" namedport="//@interimmodels.4/@designmodel/@component.10/@port.0 //@interimmodels.4/@designmodel/@component.10/@port.1 //@interimmodels.4/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.4/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.4/@designmodel/@host.3/@node.0" namedport="//@interimmodels.4/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.4/@designmodel/@host.3/@node.0" namedport="//@interimmodels.4/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.4/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.4/@designmodel/@host.4/@node.0" namedport="//@interimmodels.4/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.4/@designmodel/@host.4/@node.0" namedport="//@interimmodels.4/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.4/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.4/@designmodel/@host.4/@node.1" namedport="//@interimmodels.4/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.4/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.4/@designmodel/@host.5/@node.0" namedport="//@interimmodels.4/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.4/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.4/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.4/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.4/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.4/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.4/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.4/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.4/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.4/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.4/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.4/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="3" description="market - establish-link" nextModel="//@interimmodels.6">
    <designmodel name="interimmarket3">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.5/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.5/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.5/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
        <port name="advertiseref" role="//@interimmodels.5/@designmodel/@connector.10/@role.0">
          <events name="submitted"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.5/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.5/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.5/@designmodel/@connector.1/@role.1 //@interimmodels.5/@designmodel/@connector.4/@role.0 //@interimmodels.5/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.5/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.5/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.5/@designmodel/@connector.2/@role.1 //@interimmodels.5/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.5/@designmodel/@connector.4/@role.1 //@interimmodels.5/@designmodel/@connector.6/@role.0 //@interimmodels.5/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.5/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.5/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.5/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.5/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.5/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.5/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.5/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.5/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.5/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.5/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.5/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.5/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="provenancemobileappref">
        <port name="prvconsumeref" role="//@interimmodels.5/@designmodel/@connector.1/@role.0">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="marketplaceref">
        <port name="postref" role="//@interimmodels.5/@designmodel/@connector.10/@role.1">
          <events name="committed"/>
        </port>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="tolink" connector="//@interimmodels.5/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.5/@role.0" connector="//@interimmodels.5/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.4/@role.0" connector="//@interimmodels.5/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.8/@role.0" connector="//@interimmodels.5/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.4/@role.0" connector="//@interimmodels.5/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="REConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.6/@role.0" connector="//@interimmodels.5/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.9"/>
      </connector>
      <connector name="tradewireref">
        <role name="requester" type="tolink" connector="//@interimmodels.5/@designmodel/@connector.10">
          <roletype href="market.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.5/@designmodel/@connector.10">
          <roletype href="market.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.5/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.5/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.5/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.5/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.5/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.5/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.5/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.5/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.5/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.5/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.5/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.5/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.5/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.5/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.5/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.5/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.5/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.5/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.5/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.5/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.5/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.5/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.5/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="340" verifyTime="0.0088024" testport="//@interimmodels.5/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!79 -> prvapiwire_req?79 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!79 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!79 -> prvmsgwire_req?79 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!79 -> comwire_req?79 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!79 -> comwire_res?79 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!79 -> finwritewire_req?79 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!79 -> finwritewire_res?79 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!79 -> prvmsgwire_res?79 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!79 -> prvapiwire_res?79 -> admsgwire_pub?79 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0048264" testport="//@interimmodels.5/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!18 -> iotreqwire_req?18 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!18 -> prvmsgwire_req?18 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!18 -> comwire_req?18 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!18 -> comwire_res?18 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!18 -> finwritewire_req?18 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!18 -> finwritewire_res?18 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!18 -> prvmsgwire_res?18 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!18 -> iotreqwire_res?18" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.5/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.5/@designmodel" visitedStates="10" verifyTime="0.0074221" testport="//@interimmodels.5/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!15 -> ibankwire_req?15 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!15 -> ibankwire_res?15" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.5/@designmodel" visitedStates="346" verifyTime="0.0150989" testport="//@interimmodels.5/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!75 -> prvapiwire_req?75 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!75 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!75 -> prvmsgwire_req?75 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!75 -> comwire_req?75 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!75 -> comwire_res?75 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!75 -> finwritewire_req?75 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!75 -> finwritewire_res?75 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!75 -> prvmsgwire_res?75 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!75 -> prvapiwire_res?75 -> admsgwire_pub?75 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.5/@designmodel" visitedStates="248" verifyTime="0.01125" testport="//@interimmodels.5/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!89 -> prvapiwire_req?89 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!89 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!89 -> prvmsgwire_req?89 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!89 -> comwire_req?89 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!89 -> comwire_res?89 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!89 -> finwritewire_req?89 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!89 -> finwritewire_res?89 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!89 -> prvmsgwire_res?89 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!89 -> prvapiwire_res?89 -> admsgwire_pub?89 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceWebApp.prvconsume.provenancerequest -> &lt;> ProvenanceInt.prvpub.prvevntpublish)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop6" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="2" verifyTime="0.0037329" testport="//@interimmodels.5/@designmodel/@component.9/@port.1" traceExample="********Verification Result********&#xD;&#xA;The Assertion (agridigital() |= ![](&lt;>Commodity_liststate_listed->&lt;>Controller_monitor_listcommodity)) is NOT valid.&#xD;&#xA;A counterexample is presented as follows.&#xD;&#xA;&lt;init" exprText="[]  (&lt;> Commodity.liststate.listed -> &lt;> Controller.monitor.listcommodity)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.5">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.9/@port.1/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.5/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.11/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="mobile1" testport="//@interimmodels.5/@designmodel/@component.12/@port.0" exprText="[]  (provenancemobileappref.prvconsumeref.provenancerequest -> &lt;> ProvenanceInt.prvpub.prvevntpublish)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="market1" testport="//@interimmodels.5/@designmodel/@component.0/@port.2" exprText="[]  (ADWebApp.advertiseref.submitted -> &lt;> marketplaceref.postref.committed)"/>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.5/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.5/@designmodel/@host.0/@node.0" namedport="//@interimmodels.5/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.5/@designmodel/@host.0/@node.0" namedport="//@interimmodels.5/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.5/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.5/@designmodel/@host.1/@node.0" namedport="//@interimmodels.5/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.5/@designmodel/@component.2 //@interimmodels.5/@designmodel/@component.3 //@interimmodels.5/@designmodel/@component.5 //@interimmodels.5/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.5/@designmodel/@host.2/@node.0" namedport="//@interimmodels.5/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.5/@designmodel/@host.2/@node.0" namedport="//@interimmodels.5/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.5/@designmodel/@host.2/@node.0" namedport="//@interimmodels.5/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.5/@designmodel/@component.10 //@interimmodels.5/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.5/@designmodel/@host.2/@node.1" namedport="//@interimmodels.5/@designmodel/@component.10/@port.0 //@interimmodels.5/@designmodel/@component.10/@port.1 //@interimmodels.5/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.5/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.5/@designmodel/@host.3/@node.0" namedport="//@interimmodels.5/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.5/@designmodel/@host.3/@node.0" namedport="//@interimmodels.5/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.5/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.5/@designmodel/@host.4/@node.0" namedport="//@interimmodels.5/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.5/@designmodel/@host.4/@node.0" namedport="//@interimmodels.5/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.5/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.5/@designmodel/@host.4/@node.1" namedport="//@interimmodels.5/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.5/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.5/@designmodel/@host.5/@node.0" namedport="//@interimmodels.5/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.5/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.5/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.5/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.5/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.5/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.5/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.5/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.5/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.5/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.5/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.5/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels description="monitor - setup-connector" nextModel="//@interimmodels.7">
    <designmodel name="interimmonitor0">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.6/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.6/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.6/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
        <port name="advertiseref" role="//@interimmodels.6/@designmodel/@connector.10/@role.0">
          <events name="submitted"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.6/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.6/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.6/@designmodel/@connector.1/@role.1 //@interimmodels.6/@designmodel/@connector.4/@role.0 //@interimmodels.6/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.6/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.6/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.6/@designmodel/@connector.2/@role.1 //@interimmodels.6/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.6/@designmodel/@connector.4/@role.1 //@interimmodels.6/@designmodel/@connector.6/@role.0 //@interimmodels.6/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.6/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.6/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.6/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.6/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.6/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.6/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.6/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.6/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.6/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.6/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.6/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.6/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="provenancemobileappref">
        <port name="prvconsumeref" role="//@interimmodels.6/@designmodel/@connector.1/@role.0">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="marketplaceref">
        <port name="postref" role="//@interimmodels.6/@designmodel/@connector.10/@role.1">
          <events name="committed"/>
        </port>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="tolink" connector="//@interimmodels.6/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.5/@role.0" connector="//@interimmodels.6/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.4/@role.0" connector="//@interimmodels.6/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.8/@role.0" connector="//@interimmodels.6/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.4/@role.0" connector="//@interimmodels.6/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="REConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.6/@role.0" connector="//@interimmodels.6/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.9"/>
      </connector>
      <connector name="tradewireref">
        <role name="requester" type="tolink" connector="//@interimmodels.6/@designmodel/@connector.10">
          <roletype href="market.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.6/@designmodel/@connector.10">
          <roletype href="market.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <connector name="ctrlwireref">
        <role name="publisher" type="publisher" connector="//@interimmodels.6/@designmodel/@connector.11">
          <roletype href="monitor.arch#//@archstyle.6/@connectortype.0/@roletype.0"/>
        </role>
        <role name="subscriber" type="subscriber" connector="//@interimmodels.6/@designmodel/@connector.11">
          <roletype href="monitor.arch#//@archstyle.6/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.6/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.6/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.6/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.6/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.6/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.6/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.6/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.6/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.6/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.6/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.6/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.6/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.6/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.6/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.6/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.6/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.6/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.6/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.6/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.6/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.6/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.6/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.6/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="340" verifyTime="0.0088024" testport="//@interimmodels.6/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!79 -> prvapiwire_req?79 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!79 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!79 -> prvmsgwire_req?79 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!79 -> comwire_req?79 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!79 -> comwire_res?79 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!79 -> finwritewire_req?79 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!79 -> finwritewire_res?79 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!79 -> prvmsgwire_res?79 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!79 -> prvapiwire_res?79 -> admsgwire_pub?79 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0048264" testport="//@interimmodels.6/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!18 -> iotreqwire_req?18 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!18 -> prvmsgwire_req?18 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!18 -> comwire_req?18 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!18 -> comwire_res?18 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!18 -> finwritewire_req?18 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!18 -> finwritewire_res?18 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!18 -> prvmsgwire_res?18 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!18 -> iotreqwire_res?18" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.6/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.6/@designmodel" visitedStates="10" verifyTime="0.0074221" testport="//@interimmodels.6/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!15 -> ibankwire_req?15 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!15 -> ibankwire_res?15" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.6/@designmodel" visitedStates="346" verifyTime="0.0150989" testport="//@interimmodels.6/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!75 -> prvapiwire_req?75 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!75 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!75 -> prvmsgwire_req?75 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!75 -> comwire_req?75 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!75 -> comwire_res?75 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!75 -> finwritewire_req?75 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!75 -> finwritewire_res?75 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!75 -> prvmsgwire_res?75 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!75 -> prvapiwire_res?75 -> admsgwire_pub?75 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.6/@designmodel" visitedStates="248" verifyTime="0.01125" testport="//@interimmodels.6/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!89 -> prvapiwire_req?89 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!89 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!89 -> prvmsgwire_req?89 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!89 -> comwire_req?89 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!89 -> comwire_res?89 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!89 -> finwritewire_req?89 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!89 -> finwritewire_res?89 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!89 -> prvmsgwire_res?89 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!89 -> prvapiwire_res?89 -> admsgwire_pub?89 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceWebApp.prvconsume.provenancerequest -> &lt;> ProvenanceInt.prvpub.prvevntpublish)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop6" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="2" verifyTime="0.0037329" testport="//@interimmodels.6/@designmodel/@component.9/@port.1" traceExample="********Verification Result********&#xD;&#xA;The Assertion (agridigital() |= ![](&lt;>Commodity_liststate_listed->&lt;>Controller_monitor_listcommodity)) is NOT valid.&#xD;&#xA;A counterexample is presented as follows.&#xD;&#xA;&lt;init" exprText="[]  (&lt;> Commodity.liststate.listed -> &lt;> Controller.monitor.listcommodity)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.5">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.9/@port.1/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.5/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.11/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="mobile1" testport="//@interimmodels.6/@designmodel/@component.12/@port.0" exprText="[]  (provenancemobileappref.prvconsumeref.provenancerequest -> &lt;> ProvenanceInt.prvpub.prvevntpublish)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="market1" testport="//@interimmodels.6/@designmodel/@component.0/@port.2" exprText="[]  (ADWebApp.advertiseref.submitted -> &lt;> marketplaceref.postref.committed)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="monitor1" testport="//@interimmodels.6/@designmodel/@component.9/@port.1" exprText="[]  (Commodity.liststate.listed -> &lt;> monitorref.displayref.rendered)"/>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.6/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.6/@designmodel/@host.0/@node.0" namedport="//@interimmodels.6/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.6/@designmodel/@host.0/@node.0" namedport="//@interimmodels.6/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.6/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.6/@designmodel/@host.1/@node.0" namedport="//@interimmodels.6/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.6/@designmodel/@component.2 //@interimmodels.6/@designmodel/@component.3 //@interimmodels.6/@designmodel/@component.5 //@interimmodels.6/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.6/@designmodel/@host.2/@node.0" namedport="//@interimmodels.6/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.6/@designmodel/@host.2/@node.0" namedport="//@interimmodels.6/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.6/@designmodel/@host.2/@node.0" namedport="//@interimmodels.6/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.6/@designmodel/@component.10 //@interimmodels.6/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.6/@designmodel/@host.2/@node.1" namedport="//@interimmodels.6/@designmodel/@component.10/@port.0 //@interimmodels.6/@designmodel/@component.10/@port.1 //@interimmodels.6/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.6/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.6/@designmodel/@host.3/@node.0" namedport="//@interimmodels.6/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.6/@designmodel/@host.3/@node.0" namedport="//@interimmodels.6/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.6/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.6/@designmodel/@host.4/@node.0" namedport="//@interimmodels.6/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.6/@designmodel/@host.4/@node.0" namedport="//@interimmodels.6/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.6/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.6/@designmodel/@host.4/@node.1" namedport="//@interimmodels.6/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.6/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.6/@designmodel/@host.5/@node.0" namedport="//@interimmodels.6/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.6/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.6/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.6/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.6/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.6/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.6/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.6/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.6/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.6/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.6/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.6/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="1" description="monitor - establish-link" nextModel="//@interimmodels.8">
    <designmodel name="interimmonitor1">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.7/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.7/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.7/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
        <port name="advertiseref" role="//@interimmodels.7/@designmodel/@connector.10/@role.0">
          <events name="submitted"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.7/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.7/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.7/@designmodel/@connector.1/@role.1 //@interimmodels.7/@designmodel/@connector.4/@role.0 //@interimmodels.7/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.7/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.7/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.7/@designmodel/@connector.2/@role.1 //@interimmodels.7/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.7/@designmodel/@connector.4/@role.1 //@interimmodels.7/@designmodel/@connector.6/@role.0 //@interimmodels.7/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.7/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.7/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.7/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.7/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.7/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.7/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.7/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.7/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.7/@designmodel/@connector.9/@role.1 //@interimmodels.7/@designmodel/@connector.11/@role.0" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.7/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.7/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.7/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="provenancemobileappref">
        <port name="prvconsumeref" role="//@interimmodels.7/@designmodel/@connector.1/@role.0">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="marketplaceref">
        <port name="postref" role="//@interimmodels.7/@designmodel/@connector.10/@role.1">
          <events name="committed"/>
        </port>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="tolink" connector="//@interimmodels.7/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.5/@role.0" connector="//@interimmodels.7/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.4/@role.0" connector="//@interimmodels.7/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.8/@role.0" connector="//@interimmodels.7/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.4/@role.0" connector="//@interimmodels.7/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="REConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.6/@role.0" connector="//@interimmodels.7/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.9"/>
      </connector>
      <connector name="tradewireref">
        <role name="requester" type="tolink" connector="//@interimmodels.7/@designmodel/@connector.10">
          <roletype href="market.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.7/@designmodel/@connector.10">
          <roletype href="market.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <connector name="ctrlwireref">
        <role name="publisher" type="tolink" connector="//@interimmodels.7/@designmodel/@connector.11">
          <roletype href="monitor.arch#//@archstyle.6/@connectortype.0/@roletype.0"/>
        </role>
        <role name="subscriber" type="subscriber" connector="//@interimmodels.7/@designmodel/@connector.11">
          <roletype href="monitor.arch#//@archstyle.6/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.7/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.7/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.7/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.7/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.7/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.7/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.7/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.7/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.7/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.7/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.7/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.7/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.7/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.7/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.7/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.7/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.7/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.7/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.7/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.7/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.7/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.7/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.7/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="340" verifyTime="0.0088024" testport="//@interimmodels.7/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!79 -> prvapiwire_req?79 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!79 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!79 -> prvmsgwire_req?79 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!79 -> comwire_req?79 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!79 -> comwire_res?79 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!79 -> finwritewire_req?79 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!79 -> finwritewire_res?79 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!79 -> prvmsgwire_res?79 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!79 -> prvapiwire_res?79 -> admsgwire_pub?79 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0048264" testport="//@interimmodels.7/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!18 -> iotreqwire_req?18 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!18 -> prvmsgwire_req?18 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!18 -> comwire_req?18 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!18 -> comwire_res?18 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!18 -> finwritewire_req?18 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!18 -> finwritewire_res?18 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!18 -> prvmsgwire_res?18 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!18 -> iotreqwire_res?18" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.7/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.7/@designmodel" visitedStates="10" verifyTime="0.0074221" testport="//@interimmodels.7/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!15 -> ibankwire_req?15 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!15 -> ibankwire_res?15" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.7/@designmodel" visitedStates="346" verifyTime="0.0150989" testport="//@interimmodels.7/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!75 -> prvapiwire_req?75 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!75 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!75 -> prvmsgwire_req?75 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!75 -> comwire_req?75 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!75 -> comwire_res?75 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!75 -> finwritewire_req?75 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!75 -> finwritewire_res?75 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!75 -> prvmsgwire_res?75 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!75 -> prvapiwire_res?75 -> admsgwire_pub?75 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.7/@designmodel" visitedStates="248" verifyTime="0.01125" testport="//@interimmodels.7/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!89 -> prvapiwire_req?89 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!89 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!89 -> prvmsgwire_req?89 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!89 -> comwire_req?89 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!89 -> comwire_res?89 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!89 -> finwritewire_req?89 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!89 -> finwritewire_res?89 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!89 -> prvmsgwire_res?89 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!89 -> prvapiwire_res?89 -> admsgwire_pub?89 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceWebApp.prvconsume.provenancerequest -> &lt;> ProvenanceInt.prvpub.prvevntpublish)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop6" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="2" verifyTime="0.0037329" testport="//@interimmodels.7/@designmodel/@component.9/@port.1" traceExample="********Verification Result********&#xD;&#xA;The Assertion (agridigital() |= ![](&lt;>Commodity_liststate_listed->&lt;>Controller_monitor_listcommodity)) is NOT valid.&#xD;&#xA;A counterexample is presented as follows.&#xD;&#xA;&lt;init" exprText="[]  (&lt;> Commodity.liststate.listed -> &lt;> Controller.monitor.listcommodity)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.5">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.9/@port.1/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.5/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.11/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="mobile1" testport="//@interimmodels.7/@designmodel/@component.12/@port.0" exprText="[]  (provenancemobileappref.prvconsumeref.provenancerequest -> &lt;> ProvenanceInt.prvpub.prvevntpublish)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="market1" testport="//@interimmodels.7/@designmodel/@component.0/@port.2" exprText="[]  (ADWebApp.advertiseref.submitted -> &lt;> marketplaceref.postref.committed)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="monitor1" testport="//@interimmodels.7/@designmodel/@component.9/@port.1" exprText="[]  (Commodity.liststate.listed -> &lt;> monitorref.displayref.rendered)"/>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.7/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.7/@designmodel/@host.0/@node.0" namedport="//@interimmodels.7/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.7/@designmodel/@host.0/@node.0" namedport="//@interimmodels.7/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.7/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.7/@designmodel/@host.1/@node.0" namedport="//@interimmodels.7/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.7/@designmodel/@component.2 //@interimmodels.7/@designmodel/@component.3 //@interimmodels.7/@designmodel/@component.5 //@interimmodels.7/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.7/@designmodel/@host.2/@node.0" namedport="//@interimmodels.7/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.7/@designmodel/@host.2/@node.0" namedport="//@interimmodels.7/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.7/@designmodel/@host.2/@node.0" namedport="//@interimmodels.7/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.7/@designmodel/@component.10 //@interimmodels.7/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.7/@designmodel/@host.2/@node.1" namedport="//@interimmodels.7/@designmodel/@component.10/@port.0 //@interimmodels.7/@designmodel/@component.10/@port.1 //@interimmodels.7/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.7/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.7/@designmodel/@host.3/@node.0" namedport="//@interimmodels.7/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.7/@designmodel/@host.3/@node.0" namedport="//@interimmodels.7/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.7/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.7/@designmodel/@host.4/@node.0" namedport="//@interimmodels.7/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.7/@designmodel/@host.4/@node.0" namedport="//@interimmodels.7/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.7/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.7/@designmodel/@host.4/@node.1" namedport="//@interimmodels.7/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.7/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.7/@designmodel/@host.5/@node.0" namedport="//@interimmodels.7/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.7/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.7/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.7/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.7/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.7/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.7/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.7/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.7/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.7/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.7/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.7/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="2" description="monitor - setup-component" nextModel="//@interimmodels.9">
    <designmodel name="interimmonitor2">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.8/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.8/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.8/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
        <port name="advertiseref" role="//@interimmodels.8/@designmodel/@connector.10/@role.0">
          <events name="submitted"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.8/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.8/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.8/@designmodel/@connector.1/@role.1 //@interimmodels.8/@designmodel/@connector.4/@role.0 //@interimmodels.8/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.8/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.8/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.8/@designmodel/@connector.2/@role.1 //@interimmodels.8/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.8/@designmodel/@connector.4/@role.1 //@interimmodels.8/@designmodel/@connector.6/@role.0 //@interimmodels.8/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.8/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.8/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.8/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.8/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.8/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.8/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.8/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.8/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.8/@designmodel/@connector.9/@role.1 //@interimmodels.8/@designmodel/@connector.11/@role.0" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.8/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.8/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.8/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="provenancemobileappref">
        <port name="prvconsumeref" role="//@interimmodels.8/@designmodel/@connector.1/@role.0">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="marketplaceref">
        <port name="postref" role="//@interimmodels.8/@designmodel/@connector.10/@role.1">
          <events name="committed"/>
        </port>
      </component>
      <component name="monitorref">
        <port name="displayref">
          <events name="rendered"/>
        </port>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="tolink" connector="//@interimmodels.8/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.5/@role.0" connector="//@interimmodels.8/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.4/@role.0" connector="//@interimmodels.8/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.8/@role.0" connector="//@interimmodels.8/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.4/@role.0" connector="//@interimmodels.8/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="REConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.6/@role.0" connector="//@interimmodels.8/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.9"/>
      </connector>
      <connector name="tradewireref">
        <role name="requester" type="tolink" connector="//@interimmodels.8/@designmodel/@connector.10">
          <roletype href="market.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.8/@designmodel/@connector.10">
          <roletype href="market.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <connector name="ctrlwireref">
        <role name="publisher" type="tolink" connector="//@interimmodels.8/@designmodel/@connector.11">
          <roletype href="monitor.arch#//@archstyle.6/@connectortype.0/@roletype.0"/>
        </role>
        <role name="subscriber" type="subscriber" connector="//@interimmodels.8/@designmodel/@connector.11">
          <roletype href="monitor.arch#//@archstyle.6/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.8/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.8/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.8/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.8/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.8/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.8/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.8/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.8/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.8/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.8/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.8/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.8/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.8/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.8/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.8/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.8/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.8/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.8/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.8/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.8/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.8/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.8/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.8/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="340" verifyTime="0.0088024" testport="//@interimmodels.8/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!79 -> prvapiwire_req?79 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!79 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!79 -> prvmsgwire_req?79 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!79 -> comwire_req?79 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!79 -> comwire_res?79 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!79 -> finwritewire_req?79 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!79 -> finwritewire_res?79 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!79 -> prvmsgwire_res?79 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!79 -> prvapiwire_res?79 -> admsgwire_pub?79 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0048264" testport="//@interimmodels.8/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!18 -> iotreqwire_req?18 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!18 -> prvmsgwire_req?18 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!18 -> comwire_req?18 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!18 -> comwire_res?18 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!18 -> finwritewire_req?18 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!18 -> finwritewire_res?18 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!18 -> prvmsgwire_res?18 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!18 -> iotreqwire_res?18" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.8/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.8/@designmodel" visitedStates="10" verifyTime="0.0074221" testport="//@interimmodels.8/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!15 -> ibankwire_req?15 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!15 -> ibankwire_res?15" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.8/@designmodel" visitedStates="346" verifyTime="0.0150989" testport="//@interimmodels.8/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!75 -> prvapiwire_req?75 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!75 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!75 -> prvmsgwire_req?75 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!75 -> comwire_req?75 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!75 -> comwire_res?75 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!75 -> finwritewire_req?75 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!75 -> finwritewire_res?75 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!75 -> prvmsgwire_res?75 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!75 -> prvapiwire_res?75 -> admsgwire_pub?75 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.8/@designmodel" visitedStates="248" verifyTime="0.01125" testport="//@interimmodels.8/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!89 -> prvapiwire_req?89 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!89 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!89 -> prvmsgwire_req?89 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!89 -> comwire_req?89 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!89 -> comwire_res?89 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!89 -> finwritewire_req?89 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!89 -> finwritewire_res?89 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!89 -> prvmsgwire_res?89 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!89 -> prvapiwire_res?89 -> admsgwire_pub?89 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceWebApp.prvconsume.provenancerequest -> &lt;> ProvenanceInt.prvpub.prvevntpublish)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop6" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="2" verifyTime="0.0037329" testport="//@interimmodels.8/@designmodel/@component.9/@port.1" traceExample="********Verification Result********&#xD;&#xA;The Assertion (agridigital() |= ![](&lt;>Commodity_liststate_listed->&lt;>Controller_monitor_listcommodity)) is NOT valid.&#xD;&#xA;A counterexample is presented as follows.&#xD;&#xA;&lt;init" exprText="[]  (&lt;> Commodity.liststate.listed -> &lt;> Controller.monitor.listcommodity)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.5">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.9/@port.1/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.5/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.11/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="mobile1" testport="//@interimmodels.8/@designmodel/@component.12/@port.0" exprText="[]  (provenancemobileappref.prvconsumeref.provenancerequest -> &lt;> ProvenanceInt.prvpub.prvevntpublish)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="market1" testport="//@interimmodels.8/@designmodel/@component.0/@port.2" exprText="[]  (ADWebApp.advertiseref.submitted -> &lt;> marketplaceref.postref.committed)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="monitor1" testport="//@interimmodels.8/@designmodel/@component.9/@port.1" exprText="[]  (Commodity.liststate.listed -> &lt;> monitorref.displayref.rendered)"/>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.8/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.8/@designmodel/@host.0/@node.0" namedport="//@interimmodels.8/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.8/@designmodel/@host.0/@node.0" namedport="//@interimmodels.8/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.8/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.8/@designmodel/@host.1/@node.0" namedport="//@interimmodels.8/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.8/@designmodel/@component.2 //@interimmodels.8/@designmodel/@component.3 //@interimmodels.8/@designmodel/@component.5 //@interimmodels.8/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.8/@designmodel/@host.2/@node.0" namedport="//@interimmodels.8/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.8/@designmodel/@host.2/@node.0" namedport="//@interimmodels.8/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.8/@designmodel/@host.2/@node.0" namedport="//@interimmodels.8/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.8/@designmodel/@component.10 //@interimmodels.8/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.8/@designmodel/@host.2/@node.1" namedport="//@interimmodels.8/@designmodel/@component.10/@port.0 //@interimmodels.8/@designmodel/@component.10/@port.1 //@interimmodels.8/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.8/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.8/@designmodel/@host.3/@node.0" namedport="//@interimmodels.8/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.8/@designmodel/@host.3/@node.0" namedport="//@interimmodels.8/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.8/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.8/@designmodel/@host.4/@node.0" namedport="//@interimmodels.8/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.8/@designmodel/@host.4/@node.0" namedport="//@interimmodels.8/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.8/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.8/@designmodel/@host.4/@node.1" namedport="//@interimmodels.8/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.8/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.8/@designmodel/@host.5/@node.0" namedport="//@interimmodels.8/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.8/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.8/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.8/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.8/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.8/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.8/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.8/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.8/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.8/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.8/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.8/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="3" description="monitor - remove-connector" nextModel="//@interimmodels.10">
    <designmodel name="interimmonitor3">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.9/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.9/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.9/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
        <port name="advertiseref" role="//@interimmodels.9/@designmodel/@connector.10/@role.0">
          <events name="submitted"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.9/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.9/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.9/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.9/@designmodel/@connector.1/@role.1 //@interimmodels.9/@designmodel/@connector.4/@role.0 //@interimmodels.9/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.9/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.9/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.9/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.9/@designmodel/@connector.2/@role.1 //@interimmodels.9/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.9/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.9/@designmodel/@connector.4/@role.1 //@interimmodels.9/@designmodel/@connector.6/@role.0 //@interimmodels.9/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.9/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.9/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.9/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.9/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.9/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.9/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.9/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.9/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.9/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.9/@designmodel/@connector.11/@role.0" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.9/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.9/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.9/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.9/@designmodel/@host.2/@node.0">
        <port name="monitor" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="provenancemobileappref">
        <port name="prvconsumeref" role="//@interimmodels.9/@designmodel/@connector.1/@role.0">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="marketplaceref">
        <port name="postref" role="//@interimmodels.9/@designmodel/@connector.10/@role.1">
          <events name="committed"/>
        </port>
      </component>
      <component name="monitorref">
        <port name="displayref">
          <events name="rendered"/>
        </port>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="tolink" connector="//@interimmodels.9/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.5/@role.0" connector="//@interimmodels.9/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.4/@role.0" connector="//@interimmodels.9/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.8/@role.0" connector="//@interimmodels.9/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.4/@role.0" connector="//@interimmodels.9/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="REConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.6/@role.0" connector="//@interimmodels.9/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwiretoremove" type="REConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0">
        <role name="readertoremove" roletype="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.9"/>
        <role name="readstoragetoremove" roletype="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.9"/>
      </connector>
      <connector name="tradewireref">
        <role name="requester" type="tolink" connector="//@interimmodels.9/@designmodel/@connector.10">
          <roletype href="market.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.9/@designmodel/@connector.10">
          <roletype href="market.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <connector name="ctrlwireref">
        <role name="publisher" type="tolink" connector="//@interimmodels.9/@designmodel/@connector.11">
          <roletype href="monitor.arch#//@archstyle.6/@connectortype.0/@roletype.0"/>
        </role>
        <role name="subscriber" type="subscriber" connector="//@interimmodels.9/@designmodel/@connector.11">
          <roletype href="monitor.arch#//@archstyle.6/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.9/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.9/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.9/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.9/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.9/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.9/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.9/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.9/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.9/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.9/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.9/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.9/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.9/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.9/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.9/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.9/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.9/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.9/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.9/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.9/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.9/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.9/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.9/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.9/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.9/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.9/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.9/@designmodel" counterExample="" visitedStates="340" verifyTime="0.0088024" testport="//@interimmodels.9/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!79 -> prvapiwire_req?79 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!79 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!79 -> prvmsgwire_req?79 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!79 -> comwire_req?79 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!79 -> comwire_res?79 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!79 -> finwritewire_req?79 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!79 -> finwritewire_res?79 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!79 -> prvmsgwire_res?79 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!79 -> prvapiwire_res?79 -> admsgwire_pub?79 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.9/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0048264" testport="//@interimmodels.9/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!18 -> iotreqwire_req?18 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!18 -> prvmsgwire_req?18 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!18 -> comwire_req?18 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!18 -> comwire_res?18 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!18 -> finwritewire_req?18 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!18 -> finwritewire_res?18 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!18 -> prvmsgwire_res?18 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!18 -> iotreqwire_res?18" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.9/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.9/@designmodel" visitedStates="10" verifyTime="0.0074221" testport="//@interimmodels.9/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!15 -> ibankwire_req?15 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!15 -> ibankwire_res?15" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.9/@designmodel" visitedStates="346" verifyTime="0.0150989" testport="//@interimmodels.9/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!75 -> prvapiwire_req?75 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!75 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!75 -> prvmsgwire_req?75 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!75 -> comwire_req?75 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!75 -> comwire_res?75 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!75 -> finwritewire_req?75 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!75 -> finwritewire_res?75 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!75 -> prvmsgwire_res?75 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!75 -> prvapiwire_res?75 -> admsgwire_pub?75 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.9/@designmodel" visitedStates="248" verifyTime="0.01125" testport="//@interimmodels.9/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!89 -> prvapiwire_req?89 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!89 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!89 -> prvmsgwire_req?89 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!89 -> comwire_req?89 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!89 -> comwire_res?89 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!89 -> finwritewire_req?89 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!89 -> finwritewire_res?89 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!89 -> prvmsgwire_res?89 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!89 -> prvapiwire_res?89 -> admsgwire_pub?89 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceWebApp.prvconsume.provenancerequest -> &lt;> ProvenanceInt.prvpub.prvevntpublish)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop6" model="//@interimmodels.9/@designmodel" counterExample="" visitedStates="2" verifyTime="0.0037329" testport="//@interimmodels.9/@designmodel/@component.9/@port.1" traceExample="********Verification Result********&#xD;&#xA;The Assertion (agridigital() |= ![](&lt;>Commodity_liststate_listed->&lt;>Controller_monitor_listcommodity)) is NOT valid.&#xD;&#xA;A counterexample is presented as follows.&#xD;&#xA;&lt;init" exprText="[]  (&lt;> Commodity.liststate.listed -> &lt;> Controller.monitor.listcommodity)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.5">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.9/@port.1/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.5/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.11/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="mobile1" testport="//@interimmodels.9/@designmodel/@component.12/@port.0" exprText="[]  (provenancemobileappref.prvconsumeref.provenancerequest -> &lt;> ProvenanceInt.prvpub.prvevntpublish)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="market1" testport="//@interimmodels.9/@designmodel/@component.0/@port.2" exprText="[]  (ADWebApp.advertiseref.submitted -> &lt;> marketplaceref.postref.committed)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="monitor1" testport="//@interimmodels.9/@designmodel/@component.9/@port.1" exprText="[]  (Commodity.liststate.listed -> &lt;> monitorref.displayref.rendered)"/>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.9/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.9/@designmodel/@host.0/@node.0" namedport="//@interimmodels.9/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.9/@designmodel/@host.0/@node.0" namedport="//@interimmodels.9/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.9/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.9/@designmodel/@host.1/@node.0" namedport="//@interimmodels.9/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.9/@designmodel/@component.2 //@interimmodels.9/@designmodel/@component.3 //@interimmodels.9/@designmodel/@component.5 //@interimmodels.9/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.9/@designmodel/@host.2/@node.0" namedport="//@interimmodels.9/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.9/@designmodel/@host.2/@node.0" namedport="//@interimmodels.9/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.9/@designmodel/@host.2/@node.0" namedport="//@interimmodels.9/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.9/@designmodel/@component.10 //@interimmodels.9/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.9/@designmodel/@host.2/@node.1" namedport="//@interimmodels.9/@designmodel/@component.10/@port.0 //@interimmodels.9/@designmodel/@component.10/@port.1 //@interimmodels.9/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.9/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.9/@designmodel/@host.3/@node.0" namedport="//@interimmodels.9/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.9/@designmodel/@host.3/@node.0" namedport="//@interimmodels.9/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.9/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.9/@designmodel/@host.4/@node.0" namedport="//@interimmodels.9/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.9/@designmodel/@host.4/@node.0" namedport="//@interimmodels.9/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.9/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.9/@designmodel/@host.4/@node.1" namedport="//@interimmodels.9/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.9/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.9/@designmodel/@host.5/@node.0" namedport="//@interimmodels.9/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.9/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.9/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.9/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.9/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.9/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.9/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.9/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.9/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.9/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.9/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.9/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="4" description="monitor - establish-link">
    <designmodel name="interimmonitor4">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.10/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.10/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.10/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
        <port name="advertiseref" role="//@interimmodels.10/@designmodel/@connector.10/@role.0" type="request,OutboundPort">
          <events name="submitted"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.10/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.10/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.10/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.10/@designmodel/@connector.1/@role.1 //@interimmodels.10/@designmodel/@connector.4/@role.0 //@interimmodels.10/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.10/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.10/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.10/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.10/@designmodel/@connector.2/@role.1 //@interimmodels.10/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.10/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.10/@designmodel/@connector.4/@role.1 //@interimmodels.10/@designmodel/@connector.6/@role.0 //@interimmodels.10/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.10/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.10/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.10/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.10/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.10/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.10/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.10/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="broadcaster,repository,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.10/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.10/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.10/@designmodel/@connector.11/@role.0" type="broadcast,OutboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.10/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.10/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.10/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" deploymentnode="//@interimmodels.10/@designmodel/@host.2/@node.0">
        <port name="monitor">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="provenancemobileappref" type="client">
        <port name="prvconsumeref" role="//@interimmodels.10/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="marketplaceref" type="server">
        <port name="postref" role="//@interimmodels.10/@designmodel/@connector.10/@role.1" type="response,InboundPort">
          <events name="committed"/>
        </port>
      </component>
      <component name="monitorref" type="listener,eventconsumer">
        <port name="displayref" role="//@interimmodels.10/@designmodel/@connector.11/@role.1" type="listen,InboundPort">
          <events name="rendered"/>
        </port>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.5/@role.0" connector="//@interimmodels.10/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.4/@role.0" connector="//@interimmodels.10/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.8/@role.0" connector="//@interimmodels.10/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.4/@role.0" connector="//@interimmodels.10/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="REConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.6/@role.0" connector="//@interimmodels.10/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwiretoremove" connectortype="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0">
        <role name="readertoremove" roletype="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="" connector="//@interimmodels.10/@designmodel/@connector.9"/>
        <role name="readstoragetoremove" roletype="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="" connector="//@interimmodels.10/@designmodel/@connector.9"/>
      </connector>
      <connector name="tradewireref" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" type="out" connector="//@interimmodels.10/@designmodel/@connector.10">
          <roletype href="market.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="in" connector="//@interimmodels.10/@designmodel/@connector.10">
          <roletype href="market.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <connector name="ctrlwireref" type="PSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" type="out" connector="//@interimmodels.10/@designmodel/@connector.11">
          <roletype href="monitor.arch#//@archstyle.6/@connectortype.0/@roletype.0"/>
        </role>
        <role name="subscriber" type="in" connector="//@interimmodels.10/@designmodel/@connector.11">
          <roletype href="monitor.arch#//@archstyle.6/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.10/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.10/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.10/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.10/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.10/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.10/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.10/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.10/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.10/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.10/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.10/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.10/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.10/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.10/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.10/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.10/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.10/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.10/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.10/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.10/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.10/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.10/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.10/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.10/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.10/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.10/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.10/@designmodel" counterExample="" visitedStates="340" verifyTime="0.0088024" testport="//@interimmodels.10/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!79 -> prvapiwire_req?79 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!79 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!79 -> prvmsgwire_req?79 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!79 -> comwire_req?79 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!79 -> comwire_res?79 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!79 -> finwritewire_req?79 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!79 -> finwritewire_res?79 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!79 -> prvmsgwire_res?79 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!79 -> prvapiwire_res?79 -> admsgwire_pub?79 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.10/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0048264" testport="//@interimmodels.10/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!18 -> iotreqwire_req?18 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!18 -> prvmsgwire_req?18 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!18 -> comwire_req?18 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!18 -> comwire_res?18 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!18 -> finwritewire_req?18 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!18 -> finwritewire_res?18 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!18 -> prvmsgwire_res?18 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!18 -> iotreqwire_res?18" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.10/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.10/@designmodel" visitedStates="10" verifyTime="0.0074221" testport="//@interimmodels.10/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!15 -> ibankwire_req?15 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!15 -> ibankwire_res?15" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.10/@designmodel" visitedStates="346" verifyTime="0.0150989" testport="//@interimmodels.10/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!75 -> prvapiwire_req?75 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!75 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!75 -> prvmsgwire_req?75 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!75 -> comwire_req?75 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!75 -> comwire_res?75 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!75 -> finwritewire_req?75 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!75 -> finwritewire_res?75 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!75 -> prvmsgwire_res?75 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!75 -> prvapiwire_res?75 -> admsgwire_pub?75 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.10/@designmodel" visitedStates="248" verifyTime="0.01125" testport="//@interimmodels.10/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!89 -> prvapiwire_req?89 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!89 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!89 -> prvmsgwire_req?89 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!89 -> comwire_req?89 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!89 -> comwire_res?89 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!89 -> finwritewire_req?89 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!89 -> finwritewire_res?89 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!89 -> prvmsgwire_res?89 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!89 -> prvapiwire_res?89 -> admsgwire_pub?89 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceWebApp.prvconsume.provenancerequest -> &lt;> ProvenanceInt.prvpub.prvevntpublish)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop6" model="//@interimmodels.10/@designmodel" counterExample="" visitedStates="2" verifyTime="0.0037329" testport="//@interimmodels.10/@designmodel/@component.9/@port.1" traceExample="********Verification Result********&#xD;&#xA;The Assertion (agridigital() |= ![](&lt;>Commodity_liststate_listed->&lt;>Controller_monitor_listcommodity)) is NOT valid.&#xD;&#xA;A counterexample is presented as follows.&#xD;&#xA;&lt;init" exprText="[]  (&lt;> Commodity.liststate.listed -> &lt;> Controller.monitor.listcommodity)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.5">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.9/@port.1/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.5/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.11/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="mobile1" testport="//@interimmodels.10/@designmodel/@component.12/@port.0" exprText="[]  (provenancemobileappref.prvconsumeref.provenancerequest -> &lt;> ProvenanceInt.prvpub.prvevntpublish)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="market1" testport="//@interimmodels.10/@designmodel/@component.0/@port.2" exprText="[]  (ADWebApp.advertiseref.submitted -> &lt;> marketplaceref.postref.committed)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="monitor1" visitedStates="11" verifyTime="0.006145599999999999" testport="//@interimmodels.10/@designmodel/@component.9/@port.1" traceExample="init -> Commodity_liststate_listed -> Commodity_ctrlwireref_publisher_process -> ctrlwireref_pub!92 -> ctrlwireref_pub?92 -> monitorref_displayref_rendered -> monitorref_ctrlwireref_subscriber_process" exprText="[]  (Commodity.liststate.listed -> &lt;> monitorref.displayref.rendered)"/>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.10/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.10/@designmodel/@host.0/@node.0" namedport="//@interimmodels.10/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.10/@designmodel/@host.0/@node.0" namedport="//@interimmodels.10/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.10/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.10/@designmodel/@host.1/@node.0" namedport="//@interimmodels.10/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.10/@designmodel/@component.2 //@interimmodels.10/@designmodel/@component.3 //@interimmodels.10/@designmodel/@component.5 //@interimmodels.10/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.10/@designmodel/@host.2/@node.0" namedport="//@interimmodels.10/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.10/@designmodel/@host.2/@node.0" namedport="//@interimmodels.10/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.10/@designmodel/@host.2/@node.0" namedport="//@interimmodels.10/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.10/@designmodel/@component.10 //@interimmodels.10/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.10/@designmodel/@host.2/@node.1" namedport="//@interimmodels.10/@designmodel/@component.10/@port.0 //@interimmodels.10/@designmodel/@component.10/@port.1 //@interimmodels.10/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.10/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.10/@designmodel/@host.3/@node.0" namedport="//@interimmodels.10/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.10/@designmodel/@host.3/@node.0" namedport="//@interimmodels.10/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.10/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.10/@designmodel/@host.4/@node.0" namedport="//@interimmodels.10/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.10/@designmodel/@host.4/@node.0" namedport="//@interimmodels.10/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.10/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.10/@designmodel/@host.4/@node.1" namedport="//@interimmodels.10/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.10/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.10/@designmodel/@host.5/@node.0" namedport="//@interimmodels.10/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.10/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.10/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.10/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.10/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.10/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.10/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.10/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.10/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.10/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.10/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.10/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
</arch:MigrationModel>
