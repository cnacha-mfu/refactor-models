<?xml version="1.0" encoding="ASCII"?>
<arch:MigrationModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arch="http://www.example.org/arch">
  <source href="current.arch#/"/>
  <interimmodels description="payment - setup-component" nextModel="//@interimmodels.1">
    <designmodel name="interimpayment0">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.0/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.0/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.0/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.0/@designmodel/@connector.0/@role.0 //@interimmodels.0/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.0/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.0/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.0/@designmodel/@connector.0/@role.1 //@interimmodels.0/@designmodel/@connector.1/@role.0 //@interimmodels.0/@designmodel/@connector.2/@role.0 //@interimmodels.0/@designmodel/@connector.3/@role.0" type="response,broadcast,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.0/@designmodel/@connector.1/@role.1 //@interimmodels.0/@designmodel/@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.0/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.0/@designmodel/@connector.1/@role.1 //@interimmodels.0/@designmodel/@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository,datastore" deploymentnode="//@interimmodels.0/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.0/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.0/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="repository,datastore" deploymentnode="//@interimmodels.0/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.0/@designmodel/@connector.2/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.0/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading,datastore" deploymentnode="//@interimmodels.0/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.0/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.0/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.0/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.0/@designmodel/@connector.5/@role.0 //@interimmodels.0/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.0/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.0/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="lifefriendref">
        <port name="payref">
          <events name="preprocess"/>
        </port>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.2/@role.0" connector="//@interimmodels.0/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.4/@role.0" connector="//@interimmodels.0/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.3/@role.0" connector="//@interimmodels.0/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.3/@role.0" connector="//@interimmodels.0/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.1/@role.0" connector="//@interimmodels.0/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="REConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="reader" roletype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.6/@role.0" connector="//@interimmodels.0/@designmodel/@connector.5"/>
        <role name="writestorage" roletype="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.5"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.6"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.0/@role.0" connector="//@interimmodels.0/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.8"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.0/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.0/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.0/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.0/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.0/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.0/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.0/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.0/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.0/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.0/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.0/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.0/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.0/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.0/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.0/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.0/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.0/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.0/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.0824704" testport="//@interimmodels.0/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!58 -> soswire_req?58 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!58 -> dispatchwire_req?58 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!58 -> emwire_req?58 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!58 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?58 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!58 -> dispatchwire_res?58 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!58 -> soswire_res?58" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.0833419" testport="//@interimmodels.0/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!33 -> soswire_req?33 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!33 -> dispatchwire_req?33 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!33 -> emwire_req?33 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!33 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?33 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!33 -> dispatchwire_res?33 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!33 -> soswire_res?33" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.090904" testport="//@interimmodels.0/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!82 -> soswire_req?82 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!82 -> dispatchwire_req?82 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!82 -> emwire_req?82 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!82 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?82 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!82 -> dispatchwire_res?82 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!82 -> soswire_res?82" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1183433" testport="//@interimmodels.0/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!37 -> soswire_req?37 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!37 -> dispatchwire_req?37 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!37 -> emwire_req?37 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!37 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?37 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!37 -> dispatchwire_res?37 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!37 -> soswire_res?37" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.11590579999999999" testport="//@interimmodels.0/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!70 -> soswire_req?70 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!70 -> dispatchwire_req?70 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!70 -> emwire_req?70 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!70 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?70 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!70 -> dispatchwire_res?70 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!70 -> soswire_res?70" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="read-repository" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="447" verifyTime="0.0136294" testport="//@interimmodels.0/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!76 -> soswire_req?76 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!76 -> dispatchwire_req?76 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!76 -> emwire_req?76 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_emwire_readstorage_process -> emwire_res!76 -> emwire_res?76 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!76 -> pgwire_req?76 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!76 -> pgwire_res?76 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!76 -> guardnoti_pub?76 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!76 -> ptwire_req?76 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!76 -> ptwire_res?76 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!76 -> dispatchwire_res?76 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!76 -> soswire_res?76" exprText="[] (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emwire.readstorage.process)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="write-repository" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0048632" testport="//@interimmodels.0/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_emupwire_writer_request -> emupwire_req!10 -> emupwire_req?10 -> EmCenter_emupwire_writestorage_invoke -> EmCenter_emupdate_updated -> EmCenter_emupwire_writestorage_process -> emupwire_res!10 -> emupwire_res?10 -> BackOffice_pgupwire_writer_request -> pgupwire_req!10 -> pgupwire_req?10 -> Practitioner_pgupwire_writestorage_invoke -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_writestorage_process -> pgupwire_res!10 -> pgupwire_res?10 -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_writer_process -> BackOffice_pgupwire_writer_Skip -> BackOffice_emupwire_writer_process" exprText="[] (EmCenter.emupwire.writestorage.process -> &lt;> BackOffice.updateprofile.issueupdate )"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.0/@designmodel/@component.10/@port.0" exprText="[]  (lifefriendref.payref.preprocess -> &lt;> paymentgatewayref.commitref.checked)"/>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.0/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.0/@designmodel/@host.0/@node.0" namedport="//@interimmodels.0/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.0/@designmodel/@host.0/@node.0" namedport="//@interimmodels.0/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.0/@designmodel/@component.2 //@interimmodels.0/@designmodel/@component.6 //@interimmodels.0/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.0/@designmodel/@host.1/@node.0" namedport="//@interimmodels.0/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.0/@designmodel/@host.1/@node.0" namedport="//@interimmodels.0/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.0/@designmodel/@host.1/@node.0" namedport="//@interimmodels.0/@designmodel/@component.6/@port.1 //@interimmodels.0/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.0/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.0/@designmodel/@host.2/@node.0" namedport="//@interimmodels.0/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.0/@designmodel/@host.2/@node.0" namedport="//@interimmodels.0/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.0/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.0/@designmodel/@host.3/@node.0" namedport="//@interimmodels.0/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.0/@designmodel/@host.3/@node.0" namedport="//@interimmodels.0/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.0/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.0/@designmodel/@host.4/@node.0" namedport="//@interimmodels.0/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.0/@designmodel/@component.7 //@interimmodels.0/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.0/@designmodel/@host.5/@node.0" namedport="//@interimmodels.0/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.0/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.0/@designmodel/@host.6/@node.0" namedport="//@interimmodels.0/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.0/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.0/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.0/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.0/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.0/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.0/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.0/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="1" description="payment - setup-connector" nextModel="//@interimmodels.2">
    <designmodel name="interimpayment1">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.1/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.1/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.1/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.1/@designmodel/@connector.0/@role.0 //@interimmodels.1/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.1/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.1/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.1/@designmodel/@connector.0/@role.1 //@interimmodels.1/@designmodel/@connector.1/@role.0 //@interimmodels.1/@designmodel/@connector.2/@role.0 //@interimmodels.1/@designmodel/@connector.3/@role.0" type="response,broadcast,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.1/@designmodel/@connector.1/@role.1 //@interimmodels.1/@designmodel/@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.1/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.1/@designmodel/@connector.1/@role.1 //@interimmodels.1/@designmodel/@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository,datastore" deploymentnode="//@interimmodels.1/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.1/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.1/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="repository,datastore" deploymentnode="//@interimmodels.1/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.1/@designmodel/@connector.2/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.1/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading,datastore" deploymentnode="//@interimmodels.1/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.1/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.1/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.1/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.1/@designmodel/@connector.5/@role.0 //@interimmodels.1/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.1/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.1/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="lifefriendref">
        <port name="payref">
          <events name="preprocess"/>
        </port>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.2/@role.0" connector="//@interimmodels.1/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.4/@role.0" connector="//@interimmodels.1/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.3/@role.0" connector="//@interimmodels.1/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.3/@role.0" connector="//@interimmodels.1/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.1/@role.0" connector="//@interimmodels.1/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="REConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="reader" roletype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.6/@role.0" connector="//@interimmodels.1/@designmodel/@connector.5"/>
        <role name="writestorage" roletype="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.5"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.6"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.0/@role.0" connector="//@interimmodels.1/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.8"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="out" connector="//@interimmodels.1/@designmodel/@connector.9">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="in" connector="//@interimmodels.1/@designmodel/@connector.9">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.1/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.1/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.1/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.1/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.1/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.1/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.1/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.1/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.1/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.1/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.1/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.1/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.1/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.1/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.1/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.1/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.1/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.1/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.0824704" testport="//@interimmodels.1/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!58 -> soswire_req?58 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!58 -> dispatchwire_req?58 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!58 -> emwire_req?58 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!58 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?58 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!58 -> dispatchwire_res?58 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!58 -> soswire_res?58" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.0833419" testport="//@interimmodels.1/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!33 -> soswire_req?33 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!33 -> dispatchwire_req?33 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!33 -> emwire_req?33 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!33 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?33 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!33 -> dispatchwire_res?33 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!33 -> soswire_res?33" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.090904" testport="//@interimmodels.1/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!82 -> soswire_req?82 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!82 -> dispatchwire_req?82 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!82 -> emwire_req?82 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!82 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?82 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!82 -> dispatchwire_res?82 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!82 -> soswire_res?82" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1183433" testport="//@interimmodels.1/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!37 -> soswire_req?37 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!37 -> dispatchwire_req?37 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!37 -> emwire_req?37 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!37 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?37 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!37 -> dispatchwire_res?37 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!37 -> soswire_res?37" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.11590579999999999" testport="//@interimmodels.1/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!70 -> soswire_req?70 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!70 -> dispatchwire_req?70 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!70 -> emwire_req?70 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!70 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?70 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!70 -> dispatchwire_res?70 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!70 -> soswire_res?70" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="read-repository" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="447" verifyTime="0.0136294" testport="//@interimmodels.1/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!76 -> soswire_req?76 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!76 -> dispatchwire_req?76 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!76 -> emwire_req?76 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_emwire_readstorage_process -> emwire_res!76 -> emwire_res?76 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!76 -> pgwire_req?76 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!76 -> pgwire_res?76 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!76 -> guardnoti_pub?76 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!76 -> ptwire_req?76 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!76 -> ptwire_res?76 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!76 -> dispatchwire_res?76 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!76 -> soswire_res?76" exprText="[] (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emwire.readstorage.process)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="write-repository" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0048632" testport="//@interimmodels.1/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_emupwire_writer_request -> emupwire_req!10 -> emupwire_req?10 -> EmCenter_emupwire_writestorage_invoke -> EmCenter_emupdate_updated -> EmCenter_emupwire_writestorage_process -> emupwire_res!10 -> emupwire_res?10 -> BackOffice_pgupwire_writer_request -> pgupwire_req!10 -> pgupwire_req?10 -> Practitioner_pgupwire_writestorage_invoke -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_writestorage_process -> pgupwire_res!10 -> pgupwire_res?10 -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_writer_process -> BackOffice_pgupwire_writer_Skip -> BackOffice_emupwire_writer_process" exprText="[] (EmCenter.emupwire.writestorage.process -> &lt;> BackOffice.updateprofile.issueupdate )"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.1/@designmodel/@component.10/@port.0" exprText="[]  (lifefriendref.payref.preprocess -> &lt;> paymentgatewayref.commitref.checked)"/>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.1/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.1/@designmodel/@host.0/@node.0" namedport="//@interimmodels.1/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.1/@designmodel/@host.0/@node.0" namedport="//@interimmodels.1/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.1/@designmodel/@component.2 //@interimmodels.1/@designmodel/@component.6 //@interimmodels.1/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.1/@designmodel/@host.1/@node.0" namedport="//@interimmodels.1/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.1/@designmodel/@host.1/@node.0" namedport="//@interimmodels.1/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.1/@designmodel/@host.1/@node.0" namedport="//@interimmodels.1/@designmodel/@component.6/@port.1 //@interimmodels.1/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.1/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.1/@designmodel/@host.2/@node.0" namedport="//@interimmodels.1/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.1/@designmodel/@host.2/@node.0" namedport="//@interimmodels.1/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.1/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.1/@designmodel/@host.3/@node.0" namedport="//@interimmodels.1/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.1/@designmodel/@host.3/@node.0" namedport="//@interimmodels.1/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.1/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.1/@designmodel/@host.4/@node.0" namedport="//@interimmodels.1/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.1/@designmodel/@component.7 //@interimmodels.1/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.1/@designmodel/@host.5/@node.0" namedport="//@interimmodels.1/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.1/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.1/@designmodel/@host.6/@node.0" namedport="//@interimmodels.1/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.1/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.1/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.1/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.1/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.1/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.1/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.1/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="2" description="payment - establish-link" nextModel="//@interimmodels.3">
    <designmodel name="interimpayment2">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.2/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.2/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.2/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.2/@designmodel/@connector.0/@role.0 //@interimmodels.2/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.2/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.2/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.2/@designmodel/@connector.0/@role.1 //@interimmodels.2/@designmodel/@connector.1/@role.0 //@interimmodels.2/@designmodel/@connector.2/@role.0 //@interimmodels.2/@designmodel/@connector.3/@role.0" type="response,broadcast,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.2/@designmodel/@connector.1/@role.1 //@interimmodels.2/@designmodel/@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.2/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.2/@designmodel/@connector.1/@role.1 //@interimmodels.2/@designmodel/@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository,datastore" deploymentnode="//@interimmodels.2/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.2/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.2/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="repository,datastore" deploymentnode="//@interimmodels.2/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.2/@designmodel/@connector.2/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.2/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading,datastore" deploymentnode="//@interimmodels.2/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.2/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.2/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.2/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.2/@designmodel/@connector.5/@role.0 //@interimmodels.2/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.2/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.2/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="lifefriendref">
        <port name="payref" role="//@interimmodels.2/@designmodel/@connector.9/@role.0">
          <events name="preprocess"/>
        </port>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.2/@role.0" connector="//@interimmodels.2/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.4/@role.0" connector="//@interimmodels.2/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.3/@role.0" connector="//@interimmodels.2/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.3/@role.0" connector="//@interimmodels.2/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.1/@role.0" connector="//@interimmodels.2/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="REConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="reader" roletype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.6/@role.0" connector="//@interimmodels.2/@designmodel/@connector.5"/>
        <role name="writestorage" roletype="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.5"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.6"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.0/@role.0" connector="//@interimmodels.2/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.8"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" connector="//@interimmodels.2/@designmodel/@connector.9">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="in" connector="//@interimmodels.2/@designmodel/@connector.9">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.2/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.2/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.2/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.2/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.2/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.2/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.2/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.2/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.2/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.2/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.2/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.2/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.2/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.2/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.2/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.2/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.2/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.2/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.0824704" testport="//@interimmodels.2/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!58 -> soswire_req?58 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!58 -> dispatchwire_req?58 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!58 -> emwire_req?58 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!58 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?58 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!58 -> dispatchwire_res?58 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!58 -> soswire_res?58" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.0833419" testport="//@interimmodels.2/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!33 -> soswire_req?33 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!33 -> dispatchwire_req?33 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!33 -> emwire_req?33 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!33 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?33 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!33 -> dispatchwire_res?33 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!33 -> soswire_res?33" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.090904" testport="//@interimmodels.2/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!82 -> soswire_req?82 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!82 -> dispatchwire_req?82 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!82 -> emwire_req?82 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!82 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?82 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!82 -> dispatchwire_res?82 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!82 -> soswire_res?82" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1183433" testport="//@interimmodels.2/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!37 -> soswire_req?37 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!37 -> dispatchwire_req?37 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!37 -> emwire_req?37 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!37 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?37 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!37 -> dispatchwire_res?37 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!37 -> soswire_res?37" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.11590579999999999" testport="//@interimmodels.2/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!70 -> soswire_req?70 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!70 -> dispatchwire_req?70 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!70 -> emwire_req?70 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!70 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?70 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!70 -> dispatchwire_res?70 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!70 -> soswire_res?70" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="read-repository" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="447" verifyTime="0.0136294" testport="//@interimmodels.2/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!76 -> soswire_req?76 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!76 -> dispatchwire_req?76 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!76 -> emwire_req?76 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_emwire_readstorage_process -> emwire_res!76 -> emwire_res?76 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!76 -> pgwire_req?76 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!76 -> pgwire_res?76 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!76 -> guardnoti_pub?76 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!76 -> ptwire_req?76 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!76 -> ptwire_res?76 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!76 -> dispatchwire_res?76 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!76 -> soswire_res?76" exprText="[] (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emwire.readstorage.process)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="write-repository" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0048632" testport="//@interimmodels.2/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_emupwire_writer_request -> emupwire_req!10 -> emupwire_req?10 -> EmCenter_emupwire_writestorage_invoke -> EmCenter_emupdate_updated -> EmCenter_emupwire_writestorage_process -> emupwire_res!10 -> emupwire_res?10 -> BackOffice_pgupwire_writer_request -> pgupwire_req!10 -> pgupwire_req?10 -> Practitioner_pgupwire_writestorage_invoke -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_writestorage_process -> pgupwire_res!10 -> pgupwire_res?10 -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_writer_process -> BackOffice_pgupwire_writer_Skip -> BackOffice_emupwire_writer_process" exprText="[] (EmCenter.emupwire.writestorage.process -> &lt;> BackOffice.updateprofile.issueupdate )"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.2/@designmodel/@component.10/@port.0" exprText="[]  (lifefriendref.payref.preprocess -> &lt;> paymentgatewayref.commitref.checked)"/>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.2/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.2/@designmodel/@host.0/@node.0" namedport="//@interimmodels.2/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.2/@designmodel/@host.0/@node.0" namedport="//@interimmodels.2/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.2/@designmodel/@component.2 //@interimmodels.2/@designmodel/@component.6 //@interimmodels.2/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.2/@designmodel/@host.1/@node.0" namedport="//@interimmodels.2/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.2/@designmodel/@host.1/@node.0" namedport="//@interimmodels.2/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.2/@designmodel/@host.1/@node.0" namedport="//@interimmodels.2/@designmodel/@component.6/@port.1 //@interimmodels.2/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.2/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.2/@designmodel/@host.2/@node.0" namedport="//@interimmodels.2/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.2/@designmodel/@host.2/@node.0" namedport="//@interimmodels.2/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.2/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.2/@designmodel/@host.3/@node.0" namedport="//@interimmodels.2/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.2/@designmodel/@host.3/@node.0" namedport="//@interimmodels.2/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.2/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.2/@designmodel/@host.4/@node.0" namedport="//@interimmodels.2/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.2/@designmodel/@component.7 //@interimmodels.2/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.2/@designmodel/@host.5/@node.0" namedport="//@interimmodels.2/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.2/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.2/@designmodel/@host.6/@node.0" namedport="//@interimmodels.2/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.2/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.2/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.2/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.2/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.2/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.2/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.2/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="3" description="payment - setup-component" nextModel="//@interimmodels.4">
    <designmodel name="interimpayment3">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.3/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.3/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.3/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.3/@designmodel/@connector.0/@role.0 //@interimmodels.3/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.3/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.3/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.3/@designmodel/@connector.0/@role.1 //@interimmodels.3/@designmodel/@connector.1/@role.0 //@interimmodels.3/@designmodel/@connector.2/@role.0 //@interimmodels.3/@designmodel/@connector.3/@role.0" type="response,broadcast,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.3/@designmodel/@connector.1/@role.1 //@interimmodels.3/@designmodel/@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.3/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.3/@designmodel/@connector.1/@role.1 //@interimmodels.3/@designmodel/@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository,datastore" deploymentnode="//@interimmodels.3/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.3/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.3/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="repository,datastore" deploymentnode="//@interimmodels.3/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.3/@designmodel/@connector.2/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.3/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading,datastore" deploymentnode="//@interimmodels.3/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.3/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.3/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.3/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.3/@designmodel/@connector.5/@role.0 //@interimmodels.3/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.3/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.3/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="lifefriendref">
        <port name="payref" role="//@interimmodels.3/@designmodel/@connector.9/@role.0">
          <events name="preprocess"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref">
          <events name="checked"/>
        </port>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.2/@role.0" connector="//@interimmodels.3/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.4/@role.0" connector="//@interimmodels.3/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.3/@role.0" connector="//@interimmodels.3/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.3/@role.0" connector="//@interimmodels.3/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.1/@role.0" connector="//@interimmodels.3/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="REConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="reader" roletype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.6/@role.0" connector="//@interimmodels.3/@designmodel/@connector.5"/>
        <role name="writestorage" roletype="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.5"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.6"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.0/@role.0" connector="//@interimmodels.3/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.8"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" connector="//@interimmodels.3/@designmodel/@connector.9">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="in" connector="//@interimmodels.3/@designmodel/@connector.9">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.3/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.3/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.3/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.3/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.3/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.3/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.3/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.3/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.3/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.3/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.3/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.3/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.3/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.3/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.3/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.3/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.3/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.3/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.0824704" testport="//@interimmodels.3/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!58 -> soswire_req?58 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!58 -> dispatchwire_req?58 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!58 -> emwire_req?58 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!58 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?58 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!58 -> dispatchwire_res?58 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!58 -> soswire_res?58" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.0833419" testport="//@interimmodels.3/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!33 -> soswire_req?33 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!33 -> dispatchwire_req?33 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!33 -> emwire_req?33 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!33 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?33 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!33 -> dispatchwire_res?33 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!33 -> soswire_res?33" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.090904" testport="//@interimmodels.3/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!82 -> soswire_req?82 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!82 -> dispatchwire_req?82 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!82 -> emwire_req?82 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!82 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?82 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!82 -> dispatchwire_res?82 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!82 -> soswire_res?82" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1183433" testport="//@interimmodels.3/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!37 -> soswire_req?37 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!37 -> dispatchwire_req?37 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!37 -> emwire_req?37 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!37 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?37 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!37 -> dispatchwire_res?37 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!37 -> soswire_res?37" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.11590579999999999" testport="//@interimmodels.3/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!70 -> soswire_req?70 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!70 -> dispatchwire_req?70 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!70 -> emwire_req?70 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!70 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?70 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!70 -> dispatchwire_res?70 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!70 -> soswire_res?70" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="read-repository" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="447" verifyTime="0.0136294" testport="//@interimmodels.3/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!76 -> soswire_req?76 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!76 -> dispatchwire_req?76 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!76 -> emwire_req?76 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_emwire_readstorage_process -> emwire_res!76 -> emwire_res?76 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!76 -> pgwire_req?76 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!76 -> pgwire_res?76 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!76 -> guardnoti_pub?76 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!76 -> ptwire_req?76 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!76 -> ptwire_res?76 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!76 -> dispatchwire_res?76 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!76 -> soswire_res?76" exprText="[] (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emwire.readstorage.process)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="write-repository" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0048632" testport="//@interimmodels.3/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_emupwire_writer_request -> emupwire_req!10 -> emupwire_req?10 -> EmCenter_emupwire_writestorage_invoke -> EmCenter_emupdate_updated -> EmCenter_emupwire_writestorage_process -> emupwire_res!10 -> emupwire_res?10 -> BackOffice_pgupwire_writer_request -> pgupwire_req!10 -> pgupwire_req?10 -> Practitioner_pgupwire_writestorage_invoke -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_writestorage_process -> pgupwire_res!10 -> pgupwire_res?10 -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_writer_process -> BackOffice_pgupwire_writer_Skip -> BackOffice_emupwire_writer_process" exprText="[] (EmCenter.emupwire.writestorage.process -> &lt;> BackOffice.updateprofile.issueupdate )"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.3/@designmodel/@component.10/@port.0" exprText="[]  (lifefriendref.payref.preprocess -> &lt;> paymentgatewayref.commitref.checked)"/>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.3/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.3/@designmodel/@host.0/@node.0" namedport="//@interimmodels.3/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.3/@designmodel/@host.0/@node.0" namedport="//@interimmodels.3/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.3/@designmodel/@component.2 //@interimmodels.3/@designmodel/@component.6 //@interimmodels.3/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.3/@designmodel/@host.1/@node.0" namedport="//@interimmodels.3/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.3/@designmodel/@host.1/@node.0" namedport="//@interimmodels.3/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.3/@designmodel/@host.1/@node.0" namedport="//@interimmodels.3/@designmodel/@component.6/@port.1 //@interimmodels.3/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.3/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.3/@designmodel/@host.2/@node.0" namedport="//@interimmodels.3/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.3/@designmodel/@host.2/@node.0" namedport="//@interimmodels.3/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.3/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.3/@designmodel/@host.3/@node.0" namedport="//@interimmodels.3/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.3/@designmodel/@host.3/@node.0" namedport="//@interimmodels.3/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.3/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.3/@designmodel/@host.4/@node.0" namedport="//@interimmodels.3/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.3/@designmodel/@component.7 //@interimmodels.3/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.3/@designmodel/@host.5/@node.0" namedport="//@interimmodels.3/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.3/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.3/@designmodel/@host.6/@node.0" namedport="//@interimmodels.3/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.3/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.3/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.3/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.3/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.3/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.3/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.3/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="4" description="payment - establish-link" nextModel="//@interimmodels.5">
    <designmodel name="interimpayment4">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.4/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.4/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.4/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.4/@designmodel/@connector.0/@role.0 //@interimmodels.4/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.4/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.4/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.4/@designmodel/@connector.0/@role.1 //@interimmodels.4/@designmodel/@connector.1/@role.0 //@interimmodels.4/@designmodel/@connector.2/@role.0 //@interimmodels.4/@designmodel/@connector.3/@role.0" type="response,broadcast,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.4/@designmodel/@connector.1/@role.1 //@interimmodels.4/@designmodel/@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.4/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.4/@designmodel/@connector.1/@role.1 //@interimmodels.4/@designmodel/@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository,datastore" deploymentnode="//@interimmodels.4/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.4/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.4/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="repository,datastore" deploymentnode="//@interimmodels.4/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.4/@designmodel/@connector.2/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.4/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading,datastore" deploymentnode="//@interimmodels.4/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.4/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.4/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.4/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.4/@designmodel/@connector.5/@role.0 //@interimmodels.4/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.4/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.4/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="lifefriendref">
        <port name="payref" role="//@interimmodels.4/@designmodel/@connector.9/@role.0">
          <events name="preprocess"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref" role="//@interimmodels.4/@designmodel/@connector.9/@role.1">
          <events name="checked"/>
        </port>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.2/@role.0" connector="//@interimmodels.4/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.4/@role.0" connector="//@interimmodels.4/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.3/@role.0" connector="//@interimmodels.4/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.3/@role.0" connector="//@interimmodels.4/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.1/@role.0" connector="//@interimmodels.4/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="REConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="reader" roletype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.6/@role.0" connector="//@interimmodels.4/@designmodel/@connector.5"/>
        <role name="writestorage" roletype="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.5"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.6"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.0/@role.0" connector="//@interimmodels.4/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.8"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" connector="//@interimmodels.4/@designmodel/@connector.9">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.4/@designmodel/@connector.9">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.4/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.4/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.4/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.4/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.4/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.4/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.4/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.4/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.4/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.4/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.4/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.4/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.4/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.4/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.4/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.4/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.4/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.4/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.0824704" testport="//@interimmodels.4/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!58 -> soswire_req?58 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!58 -> dispatchwire_req?58 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!58 -> emwire_req?58 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!58 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?58 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!58 -> dispatchwire_res?58 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!58 -> soswire_res?58" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.0833419" testport="//@interimmodels.4/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!33 -> soswire_req?33 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!33 -> dispatchwire_req?33 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!33 -> emwire_req?33 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!33 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?33 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!33 -> dispatchwire_res?33 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!33 -> soswire_res?33" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.090904" testport="//@interimmodels.4/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!82 -> soswire_req?82 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!82 -> dispatchwire_req?82 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!82 -> emwire_req?82 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!82 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?82 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!82 -> dispatchwire_res?82 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!82 -> soswire_res?82" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1183433" testport="//@interimmodels.4/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!37 -> soswire_req?37 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!37 -> dispatchwire_req?37 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!37 -> emwire_req?37 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!37 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?37 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!37 -> dispatchwire_res?37 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!37 -> soswire_res?37" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.11590579999999999" testport="//@interimmodels.4/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!70 -> soswire_req?70 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!70 -> dispatchwire_req?70 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!70 -> emwire_req?70 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!70 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?70 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!70 -> dispatchwire_res?70 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!70 -> soswire_res?70" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="read-repository" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="447" verifyTime="0.0136294" testport="//@interimmodels.4/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!76 -> soswire_req?76 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!76 -> dispatchwire_req?76 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!76 -> emwire_req?76 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_emwire_readstorage_process -> emwire_res!76 -> emwire_res?76 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!76 -> pgwire_req?76 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!76 -> pgwire_res?76 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!76 -> guardnoti_pub?76 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!76 -> ptwire_req?76 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!76 -> ptwire_res?76 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!76 -> dispatchwire_res?76 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!76 -> soswire_res?76" exprText="[] (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emwire.readstorage.process)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="write-repository" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0048632" testport="//@interimmodels.4/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_emupwire_writer_request -> emupwire_req!10 -> emupwire_req?10 -> EmCenter_emupwire_writestorage_invoke -> EmCenter_emupdate_updated -> EmCenter_emupwire_writestorage_process -> emupwire_res!10 -> emupwire_res?10 -> BackOffice_pgupwire_writer_request -> pgupwire_req!10 -> pgupwire_req?10 -> Practitioner_pgupwire_writestorage_invoke -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_writestorage_process -> pgupwire_res!10 -> pgupwire_res?10 -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_writer_process -> BackOffice_pgupwire_writer_Skip -> BackOffice_emupwire_writer_process" exprText="[] (EmCenter.emupwire.writestorage.process -> &lt;> BackOffice.updateprofile.issueupdate )"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.4/@designmodel/@component.10/@port.0" exprText="[]  (lifefriendref.payref.preprocess -> &lt;> paymentgatewayref.commitref.checked)"/>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.4/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.4/@designmodel/@host.0/@node.0" namedport="//@interimmodels.4/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.4/@designmodel/@host.0/@node.0" namedport="//@interimmodels.4/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.4/@designmodel/@component.2 //@interimmodels.4/@designmodel/@component.6 //@interimmodels.4/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.4/@designmodel/@host.1/@node.0" namedport="//@interimmodels.4/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.4/@designmodel/@host.1/@node.0" namedport="//@interimmodels.4/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.4/@designmodel/@host.1/@node.0" namedport="//@interimmodels.4/@designmodel/@component.6/@port.1 //@interimmodels.4/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.4/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.4/@designmodel/@host.2/@node.0" namedport="//@interimmodels.4/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.4/@designmodel/@host.2/@node.0" namedport="//@interimmodels.4/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.4/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.4/@designmodel/@host.3/@node.0" namedport="//@interimmodels.4/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.4/@designmodel/@host.3/@node.0" namedport="//@interimmodels.4/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.4/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.4/@designmodel/@host.4/@node.0" namedport="//@interimmodels.4/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.4/@designmodel/@component.7 //@interimmodels.4/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.4/@designmodel/@host.5/@node.0" namedport="//@interimmodels.4/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.4/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.4/@designmodel/@host.6/@node.0" namedport="//@interimmodels.4/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.4/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.4/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.4/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.4/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.4/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.4/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.4/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels description="lifefriend - setup-component" nextModel="//@interimmodels.6">
    <designmodel name="interimlifefriend0">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.5/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.5/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.5/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.5/@designmodel/@connector.0/@role.0 //@interimmodels.5/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.5/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.5/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.5/@designmodel/@connector.0/@role.1 //@interimmodels.5/@designmodel/@connector.1/@role.0 //@interimmodels.5/@designmodel/@connector.2/@role.0 //@interimmodels.5/@designmodel/@connector.3/@role.0" type="response,broadcast,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.5/@designmodel/@connector.1/@role.1 //@interimmodels.5/@designmodel/@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.5/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.5/@designmodel/@connector.1/@role.1 //@interimmodels.5/@designmodel/@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository,datastore" deploymentnode="//@interimmodels.5/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.5/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.5/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="repository,datastore" deploymentnode="//@interimmodels.5/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.5/@designmodel/@connector.2/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.5/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading,datastore" deploymentnode="//@interimmodels.5/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.5/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.5/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.5/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.5/@designmodel/@connector.5/@role.0 //@interimmodels.5/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.5/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.5/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="lifefriendref">
        <port name="payref" role="//@interimmodels.5/@designmodel/@connector.9/@role.0">
          <events name="preprocess"/>
        </port>
        <port name="cnotifyref">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref" role="//@interimmodels.5/@designmodel/@connector.9/@role.1">
          <events name="checked"/>
        </port>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.2/@role.0" connector="//@interimmodels.5/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.4/@role.0" connector="//@interimmodels.5/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.3/@role.0" connector="//@interimmodels.5/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.3/@role.0" connector="//@interimmodels.5/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.1/@role.0" connector="//@interimmodels.5/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="REConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="reader" roletype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.6/@role.0" connector="//@interimmodels.5/@designmodel/@connector.5"/>
        <role name="writestorage" roletype="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.5"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.6"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.0/@role.0" connector="//@interimmodels.5/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.8"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" connector="//@interimmodels.5/@designmodel/@connector.9">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.5/@designmodel/@connector.9">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.5/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.5/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.5/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.5/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.5/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.5/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.5/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.5/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.5/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.5/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.5/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.5/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.5/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.5/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.5/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.5/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.5/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.5/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.0824704" testport="//@interimmodels.5/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!58 -> soswire_req?58 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!58 -> dispatchwire_req?58 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!58 -> emwire_req?58 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!58 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?58 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!58 -> dispatchwire_res?58 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!58 -> soswire_res?58" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.0833419" testport="//@interimmodels.5/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!33 -> soswire_req?33 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!33 -> dispatchwire_req?33 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!33 -> emwire_req?33 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!33 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?33 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!33 -> dispatchwire_res?33 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!33 -> soswire_res?33" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.090904" testport="//@interimmodels.5/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!82 -> soswire_req?82 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!82 -> dispatchwire_req?82 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!82 -> emwire_req?82 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!82 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?82 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!82 -> dispatchwire_res?82 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!82 -> soswire_res?82" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1183433" testport="//@interimmodels.5/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!37 -> soswire_req?37 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!37 -> dispatchwire_req?37 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!37 -> emwire_req?37 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!37 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?37 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!37 -> dispatchwire_res?37 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!37 -> soswire_res?37" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.11590579999999999" testport="//@interimmodels.5/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!70 -> soswire_req?70 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!70 -> dispatchwire_req?70 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!70 -> emwire_req?70 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!70 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?70 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!70 -> dispatchwire_res?70 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!70 -> soswire_res?70" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="read-repository" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="447" verifyTime="0.0136294" testport="//@interimmodels.5/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!76 -> soswire_req?76 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!76 -> dispatchwire_req?76 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!76 -> emwire_req?76 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_emwire_readstorage_process -> emwire_res!76 -> emwire_res?76 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!76 -> pgwire_req?76 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!76 -> pgwire_res?76 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!76 -> guardnoti_pub?76 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!76 -> ptwire_req?76 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!76 -> ptwire_res?76 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!76 -> dispatchwire_res?76 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!76 -> soswire_res?76" exprText="[] (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emwire.readstorage.process)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="write-repository" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0048632" testport="//@interimmodels.5/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_emupwire_writer_request -> emupwire_req!10 -> emupwire_req?10 -> EmCenter_emupwire_writestorage_invoke -> EmCenter_emupdate_updated -> EmCenter_emupwire_writestorage_process -> emupwire_res!10 -> emupwire_res?10 -> BackOffice_pgupwire_writer_request -> pgupwire_req!10 -> pgupwire_req?10 -> Practitioner_pgupwire_writestorage_invoke -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_writestorage_process -> pgupwire_res!10 -> pgupwire_res?10 -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_writer_process -> BackOffice_pgupwire_writer_Skip -> BackOffice_emupwire_writer_process" exprText="[] (EmCenter.emupwire.writestorage.process -> &lt;> BackOffice.updateprofile.issueupdate )"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.5/@designmodel/@component.10/@port.0" exprText="[]  (lifefriendref.payref.preprocess -> &lt;> paymentgatewayref.commitref.checked)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="lifefriend1" testport="//@interimmodels.5/@designmodel/@component.10/@port.1" exprText="[]  (lifefriendref.cnotifyref.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);"/>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.5/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.5/@designmodel/@host.0/@node.0" namedport="//@interimmodels.5/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.5/@designmodel/@host.0/@node.0" namedport="//@interimmodels.5/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.5/@designmodel/@component.2 //@interimmodels.5/@designmodel/@component.6 //@interimmodels.5/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.5/@designmodel/@host.1/@node.0" namedport="//@interimmodels.5/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.5/@designmodel/@host.1/@node.0" namedport="//@interimmodels.5/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.5/@designmodel/@host.1/@node.0" namedport="//@interimmodels.5/@designmodel/@component.6/@port.1 //@interimmodels.5/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.5/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.5/@designmodel/@host.2/@node.0" namedport="//@interimmodels.5/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.5/@designmodel/@host.2/@node.0" namedport="//@interimmodels.5/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.5/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.5/@designmodel/@host.3/@node.0" namedport="//@interimmodels.5/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.5/@designmodel/@host.3/@node.0" namedport="//@interimmodels.5/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.5/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.5/@designmodel/@host.4/@node.0" namedport="//@interimmodels.5/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.5/@designmodel/@component.7 //@interimmodels.5/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.5/@designmodel/@host.5/@node.0" namedport="//@interimmodels.5/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.5/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.5/@designmodel/@host.6/@node.0" namedport="//@interimmodels.5/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.5/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.5/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.5/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.5/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.5/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.5/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.5/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="1" description="lifefriend - establish-link" nextModel="//@interimmodels.7">
    <designmodel name="interimlifefriend1">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.6/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.6/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.6/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.6/@designmodel/@connector.0/@role.0 //@interimmodels.6/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.6/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.6/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.6/@designmodel/@connector.0/@role.1 //@interimmodels.6/@designmodel/@connector.1/@role.0 //@interimmodels.6/@designmodel/@connector.2/@role.0 //@interimmodels.6/@designmodel/@connector.3/@role.0" type="response,broadcast,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.6/@designmodel/@connector.1/@role.1 //@interimmodels.6/@designmodel/@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.6/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.6/@designmodel/@connector.1/@role.1 //@interimmodels.6/@designmodel/@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository,datastore" deploymentnode="//@interimmodels.6/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.6/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.6/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="repository,datastore" deploymentnode="//@interimmodels.6/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.6/@designmodel/@connector.2/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.6/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading,datastore" deploymentnode="//@interimmodels.6/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.6/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.6/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.6/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.6/@designmodel/@connector.5/@role.0 //@interimmodels.6/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.6/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.6/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="lifefriendref">
        <port name="payref" role="//@interimmodels.6/@designmodel/@connector.9/@role.0">
          <events name="preprocess"/>
        </port>
        <port name="cnotifyref" role="//@interimmodels.6/@designmodel/@connector.4/@role.0">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref" role="//@interimmodels.6/@designmodel/@connector.9/@role.1">
          <events name="checked"/>
        </port>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.2/@role.0" connector="//@interimmodels.6/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.4/@role.0" connector="//@interimmodels.6/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.3/@role.0" connector="//@interimmodels.6/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.3/@role.0" connector="//@interimmodels.6/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.1/@role.0" connector="//@interimmodels.6/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="REConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="reader" roletype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="tolink" connector="//@interimmodels.6/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.6/@role.0" connector="//@interimmodels.6/@designmodel/@connector.5"/>
        <role name="writestorage" roletype="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.5"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.6"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.0/@role.0" connector="//@interimmodels.6/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.8"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" connector="//@interimmodels.6/@designmodel/@connector.9">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.6/@designmodel/@connector.9">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.6/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.6/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.6/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.6/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.6/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.6/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.6/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.6/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.6/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.6/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.6/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.6/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.6/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.6/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.6/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.6/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.6/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.6/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.0824704" testport="//@interimmodels.6/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!58 -> soswire_req?58 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!58 -> dispatchwire_req?58 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!58 -> emwire_req?58 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!58 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?58 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!58 -> dispatchwire_res?58 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!58 -> soswire_res?58" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.0833419" testport="//@interimmodels.6/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!33 -> soswire_req?33 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!33 -> dispatchwire_req?33 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!33 -> emwire_req?33 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!33 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?33 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!33 -> dispatchwire_res?33 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!33 -> soswire_res?33" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.090904" testport="//@interimmodels.6/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!82 -> soswire_req?82 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!82 -> dispatchwire_req?82 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!82 -> emwire_req?82 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!82 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?82 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!82 -> dispatchwire_res?82 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!82 -> soswire_res?82" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1183433" testport="//@interimmodels.6/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!37 -> soswire_req?37 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!37 -> dispatchwire_req?37 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!37 -> emwire_req?37 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!37 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?37 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!37 -> dispatchwire_res?37 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!37 -> soswire_res?37" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.11590579999999999" testport="//@interimmodels.6/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!70 -> soswire_req?70 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!70 -> dispatchwire_req?70 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!70 -> emwire_req?70 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!70 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?70 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!70 -> dispatchwire_res?70 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!70 -> soswire_res?70" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="read-repository" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="447" verifyTime="0.0136294" testport="//@interimmodels.6/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!76 -> soswire_req?76 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!76 -> dispatchwire_req?76 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!76 -> emwire_req?76 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_emwire_readstorage_process -> emwire_res!76 -> emwire_res?76 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!76 -> pgwire_req?76 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!76 -> pgwire_res?76 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!76 -> guardnoti_pub?76 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!76 -> ptwire_req?76 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!76 -> ptwire_res?76 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!76 -> dispatchwire_res?76 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!76 -> soswire_res?76" exprText="[] (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emwire.readstorage.process)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="write-repository" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0048632" testport="//@interimmodels.6/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_emupwire_writer_request -> emupwire_req!10 -> emupwire_req?10 -> EmCenter_emupwire_writestorage_invoke -> EmCenter_emupdate_updated -> EmCenter_emupwire_writestorage_process -> emupwire_res!10 -> emupwire_res?10 -> BackOffice_pgupwire_writer_request -> pgupwire_req!10 -> pgupwire_req?10 -> Practitioner_pgupwire_writestorage_invoke -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_writestorage_process -> pgupwire_res!10 -> pgupwire_res?10 -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_writer_process -> BackOffice_pgupwire_writer_Skip -> BackOffice_emupwire_writer_process" exprText="[] (EmCenter.emupwire.writestorage.process -> &lt;> BackOffice.updateprofile.issueupdate )"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.6/@designmodel/@component.10/@port.0" exprText="[]  (lifefriendref.payref.preprocess -> &lt;> paymentgatewayref.commitref.checked)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="lifefriend1" testport="//@interimmodels.6/@designmodel/@component.10/@port.1" exprText="[]  (lifefriendref.cnotifyref.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);"/>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.6/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.6/@designmodel/@host.0/@node.0" namedport="//@interimmodels.6/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.6/@designmodel/@host.0/@node.0" namedport="//@interimmodels.6/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.6/@designmodel/@component.2 //@interimmodels.6/@designmodel/@component.6 //@interimmodels.6/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.6/@designmodel/@host.1/@node.0" namedport="//@interimmodels.6/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.6/@designmodel/@host.1/@node.0" namedport="//@interimmodels.6/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.6/@designmodel/@host.1/@node.0" namedport="//@interimmodels.6/@designmodel/@component.6/@port.1 //@interimmodels.6/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.6/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.6/@designmodel/@host.2/@node.0" namedport="//@interimmodels.6/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.6/@designmodel/@host.2/@node.0" namedport="//@interimmodels.6/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.6/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.6/@designmodel/@host.3/@node.0" namedport="//@interimmodels.6/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.6/@designmodel/@host.3/@node.0" namedport="//@interimmodels.6/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.6/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.6/@designmodel/@host.4/@node.0" namedport="//@interimmodels.6/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.6/@designmodel/@component.7 //@interimmodels.6/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.6/@designmodel/@host.5/@node.0" namedport="//@interimmodels.6/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.6/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.6/@designmodel/@host.6/@node.0" namedport="//@interimmodels.6/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.6/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.6/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.6/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.6/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.6/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.6/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.6/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels description="lifegrid - setup-connector" nextModel="//@interimmodels.8">
    <designmodel name="interimlifegrid0">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.7/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.7/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.7/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.7/@designmodel/@connector.0/@role.0 //@interimmodels.7/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.7/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.7/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.7/@designmodel/@connector.0/@role.1 //@interimmodels.7/@designmodel/@connector.1/@role.0 //@interimmodels.7/@designmodel/@connector.2/@role.0 //@interimmodels.7/@designmodel/@connector.3/@role.0" type="response,broadcast,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.7/@designmodel/@connector.1/@role.1 //@interimmodels.7/@designmodel/@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.7/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.7/@designmodel/@connector.1/@role.1 //@interimmodels.7/@designmodel/@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository,datastore" deploymentnode="//@interimmodels.7/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.7/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.7/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="repository,datastore" deploymentnode="//@interimmodels.7/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.7/@designmodel/@connector.2/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.7/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading,datastore" deploymentnode="//@interimmodels.7/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.7/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.7/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.7/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.7/@designmodel/@connector.5/@role.0 //@interimmodels.7/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.7/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.7/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="lifefriendref">
        <port name="payref" role="//@interimmodels.7/@designmodel/@connector.9/@role.0">
          <events name="preprocess"/>
        </port>
        <port name="cnotifyref" role="//@interimmodels.7/@designmodel/@connector.4/@role.0">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref" role="//@interimmodels.7/@designmodel/@connector.9/@role.1">
          <events name="checked"/>
        </port>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.2/@role.0" connector="//@interimmodels.7/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.4/@role.0" connector="//@interimmodels.7/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.3/@role.0" connector="//@interimmodels.7/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.3/@role.0" connector="//@interimmodels.7/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.1/@role.0" connector="//@interimmodels.7/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="REConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="reader" roletype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="tolink" connector="//@interimmodels.7/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.6/@role.0" connector="//@interimmodels.7/@designmodel/@connector.5"/>
        <role name="writestorage" roletype="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.5"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.6"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.0/@role.0" connector="//@interimmodels.7/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.8"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" connector="//@interimmodels.7/@designmodel/@connector.9">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.7/@designmodel/@connector.9">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <connector name="emwireref">
        <role name="reader" type="out" connector="//@interimmodels.7/@designmodel/@connector.10">
          <roletype href="lifegrid.arch#//@archstyle.5/@connectortype.0/@roletype.0"/>
        </role>
        <role name="readstorage" type="in" connector="//@interimmodels.7/@designmodel/@connector.10">
          <roletype href="lifegrid.arch#//@archstyle.5/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.7/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.7/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.7/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.7/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.7/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.7/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.7/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.7/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.7/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.7/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.7/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.7/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.7/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.7/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.7/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.7/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.7/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.7/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.0824704" testport="//@interimmodels.7/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!58 -> soswire_req?58 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!58 -> dispatchwire_req?58 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!58 -> emwire_req?58 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!58 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?58 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!58 -> dispatchwire_res?58 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!58 -> soswire_res?58" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.0833419" testport="//@interimmodels.7/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!33 -> soswire_req?33 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!33 -> dispatchwire_req?33 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!33 -> emwire_req?33 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!33 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?33 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!33 -> dispatchwire_res?33 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!33 -> soswire_res?33" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.090904" testport="//@interimmodels.7/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!82 -> soswire_req?82 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!82 -> dispatchwire_req?82 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!82 -> emwire_req?82 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!82 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?82 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!82 -> dispatchwire_res?82 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!82 -> soswire_res?82" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1183433" testport="//@interimmodels.7/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!37 -> soswire_req?37 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!37 -> dispatchwire_req?37 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!37 -> emwire_req?37 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!37 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?37 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!37 -> dispatchwire_res?37 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!37 -> soswire_res?37" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.11590579999999999" testport="//@interimmodels.7/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!70 -> soswire_req?70 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!70 -> dispatchwire_req?70 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!70 -> emwire_req?70 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!70 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?70 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!70 -> dispatchwire_res?70 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!70 -> soswire_res?70" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="read-repository" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="447" verifyTime="0.0136294" testport="//@interimmodels.7/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!76 -> soswire_req?76 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!76 -> dispatchwire_req?76 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!76 -> emwire_req?76 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_emwire_readstorage_process -> emwire_res!76 -> emwire_res?76 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!76 -> pgwire_req?76 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!76 -> pgwire_res?76 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!76 -> guardnoti_pub?76 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!76 -> ptwire_req?76 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!76 -> ptwire_res?76 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!76 -> dispatchwire_res?76 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!76 -> soswire_res?76" exprText="[] (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emwire.readstorage.process)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="write-repository" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0048632" testport="//@interimmodels.7/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_emupwire_writer_request -> emupwire_req!10 -> emupwire_req?10 -> EmCenter_emupwire_writestorage_invoke -> EmCenter_emupdate_updated -> EmCenter_emupwire_writestorage_process -> emupwire_res!10 -> emupwire_res?10 -> BackOffice_pgupwire_writer_request -> pgupwire_req!10 -> pgupwire_req?10 -> Practitioner_pgupwire_writestorage_invoke -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_writestorage_process -> pgupwire_res!10 -> pgupwire_res?10 -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_writer_process -> BackOffice_pgupwire_writer_Skip -> BackOffice_emupwire_writer_process" exprText="[] (EmCenter.emupwire.writestorage.process -> &lt;> BackOffice.updateprofile.issueupdate )"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.7/@designmodel/@component.10/@port.0" exprText="[]  (lifefriendref.payref.preprocess -> &lt;> paymentgatewayref.commitref.checked)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="lifefriend1" testport="//@interimmodels.7/@designmodel/@component.10/@port.1" exprText="[]  (lifefriendref.cnotifyref.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="lifegrid1" testport="//@interimmodels.7/@designmodel/@component.2/@port.0" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> lifegridref.lookupref.returned)"/>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.7/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.7/@designmodel/@host.0/@node.0" namedport="//@interimmodels.7/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.7/@designmodel/@host.0/@node.0" namedport="//@interimmodels.7/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.7/@designmodel/@component.2 //@interimmodels.7/@designmodel/@component.6 //@interimmodels.7/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.7/@designmodel/@host.1/@node.0" namedport="//@interimmodels.7/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.7/@designmodel/@host.1/@node.0" namedport="//@interimmodels.7/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.7/@designmodel/@host.1/@node.0" namedport="//@interimmodels.7/@designmodel/@component.6/@port.1 //@interimmodels.7/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.7/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.7/@designmodel/@host.2/@node.0" namedport="//@interimmodels.7/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.7/@designmodel/@host.2/@node.0" namedport="//@interimmodels.7/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.7/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.7/@designmodel/@host.3/@node.0" namedport="//@interimmodels.7/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.7/@designmodel/@host.3/@node.0" namedport="//@interimmodels.7/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.7/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.7/@designmodel/@host.4/@node.0" namedport="//@interimmodels.7/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.7/@designmodel/@component.7 //@interimmodels.7/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.7/@designmodel/@host.5/@node.0" namedport="//@interimmodels.7/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.7/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.7/@designmodel/@host.6/@node.0" namedport="//@interimmodels.7/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.7/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.7/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.7/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.7/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.7/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.7/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.7/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="1" description="lifegrid - establish-link" nextModel="//@interimmodels.9">
    <designmodel name="interimlifegrid1">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.8/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.8/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.8/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.8/@designmodel/@connector.0/@role.0 //@interimmodels.8/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.8/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.8/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.8/@designmodel/@connector.0/@role.1 //@interimmodels.8/@designmodel/@connector.1/@role.0 //@interimmodels.8/@designmodel/@connector.2/@role.0 //@interimmodels.8/@designmodel/@connector.3/@role.0 //@interimmodels.8/@designmodel/@connector.10/@role.0" type="response,broadcast,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.8/@designmodel/@connector.1/@role.1 //@interimmodels.8/@designmodel/@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.8/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.8/@designmodel/@connector.1/@role.1 //@interimmodels.8/@designmodel/@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository,datastore" deploymentnode="//@interimmodels.8/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.8/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.8/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="repository,datastore" deploymentnode="//@interimmodels.8/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.8/@designmodel/@connector.2/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.8/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading,datastore" deploymentnode="//@interimmodels.8/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.8/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.8/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.8/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.8/@designmodel/@connector.5/@role.0 //@interimmodels.8/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.8/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.8/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="lifefriendref">
        <port name="payref" role="//@interimmodels.8/@designmodel/@connector.9/@role.0">
          <events name="preprocess"/>
        </port>
        <port name="cnotifyref" role="//@interimmodels.8/@designmodel/@connector.4/@role.0">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref" role="//@interimmodels.8/@designmodel/@connector.9/@role.1">
          <events name="checked"/>
        </port>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.2/@role.0" connector="//@interimmodels.8/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.4/@role.0" connector="//@interimmodels.8/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.3/@role.0" connector="//@interimmodels.8/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.3/@role.0" connector="//@interimmodels.8/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.1/@role.0" connector="//@interimmodels.8/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="REConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="reader" roletype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="tolink" connector="//@interimmodels.8/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.6/@role.0" connector="//@interimmodels.8/@designmodel/@connector.5"/>
        <role name="writestorage" roletype="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.5"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.6"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.0/@role.0" connector="//@interimmodels.8/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.8"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" connector="//@interimmodels.8/@designmodel/@connector.9">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.8/@designmodel/@connector.9">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <connector name="emwireref">
        <role name="reader" type="tolink" connector="//@interimmodels.8/@designmodel/@connector.10">
          <roletype href="lifegrid.arch#//@archstyle.5/@connectortype.0/@roletype.0"/>
        </role>
        <role name="readstorage" type="in" connector="//@interimmodels.8/@designmodel/@connector.10">
          <roletype href="lifegrid.arch#//@archstyle.5/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.8/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.8/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.8/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.8/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.8/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.8/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.8/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.8/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.8/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.8/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.8/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.8/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.8/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.8/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.8/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.8/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.8/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.8/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.0824704" testport="//@interimmodels.8/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!58 -> soswire_req?58 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!58 -> dispatchwire_req?58 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!58 -> emwire_req?58 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!58 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?58 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!58 -> dispatchwire_res?58 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!58 -> soswire_res?58" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.0833419" testport="//@interimmodels.8/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!33 -> soswire_req?33 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!33 -> dispatchwire_req?33 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!33 -> emwire_req?33 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!33 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?33 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!33 -> dispatchwire_res?33 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!33 -> soswire_res?33" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.090904" testport="//@interimmodels.8/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!82 -> soswire_req?82 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!82 -> dispatchwire_req?82 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!82 -> emwire_req?82 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!82 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?82 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!82 -> dispatchwire_res?82 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!82 -> soswire_res?82" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1183433" testport="//@interimmodels.8/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!37 -> soswire_req?37 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!37 -> dispatchwire_req?37 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!37 -> emwire_req?37 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!37 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?37 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!37 -> dispatchwire_res?37 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!37 -> soswire_res?37" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.11590579999999999" testport="//@interimmodels.8/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!70 -> soswire_req?70 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!70 -> dispatchwire_req?70 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!70 -> emwire_req?70 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!70 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?70 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!70 -> dispatchwire_res?70 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!70 -> soswire_res?70" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="read-repository" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="447" verifyTime="0.0136294" testport="//@interimmodels.8/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!76 -> soswire_req?76 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!76 -> dispatchwire_req?76 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!76 -> emwire_req?76 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_emwire_readstorage_process -> emwire_res!76 -> emwire_res?76 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!76 -> pgwire_req?76 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!76 -> pgwire_res?76 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!76 -> guardnoti_pub?76 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!76 -> ptwire_req?76 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!76 -> ptwire_res?76 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!76 -> dispatchwire_res?76 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!76 -> soswire_res?76" exprText="[] (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emwire.readstorage.process)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="write-repository" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0048632" testport="//@interimmodels.8/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_emupwire_writer_request -> emupwire_req!10 -> emupwire_req?10 -> EmCenter_emupwire_writestorage_invoke -> EmCenter_emupdate_updated -> EmCenter_emupwire_writestorage_process -> emupwire_res!10 -> emupwire_res?10 -> BackOffice_pgupwire_writer_request -> pgupwire_req!10 -> pgupwire_req?10 -> Practitioner_pgupwire_writestorage_invoke -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_writestorage_process -> pgupwire_res!10 -> pgupwire_res?10 -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_writer_process -> BackOffice_pgupwire_writer_Skip -> BackOffice_emupwire_writer_process" exprText="[] (EmCenter.emupwire.writestorage.process -> &lt;> BackOffice.updateprofile.issueupdate )"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.8/@designmodel/@component.10/@port.0" exprText="[]  (lifefriendref.payref.preprocess -> &lt;> paymentgatewayref.commitref.checked)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="lifefriend1" testport="//@interimmodels.8/@designmodel/@component.10/@port.1" exprText="[]  (lifefriendref.cnotifyref.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="lifegrid1" testport="//@interimmodels.8/@designmodel/@component.2/@port.0" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> lifegridref.lookupref.returned)"/>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.8/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.8/@designmodel/@host.0/@node.0" namedport="//@interimmodels.8/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.8/@designmodel/@host.0/@node.0" namedport="//@interimmodels.8/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.8/@designmodel/@component.2 //@interimmodels.8/@designmodel/@component.6 //@interimmodels.8/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.8/@designmodel/@host.1/@node.0" namedport="//@interimmodels.8/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.8/@designmodel/@host.1/@node.0" namedport="//@interimmodels.8/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.8/@designmodel/@host.1/@node.0" namedport="//@interimmodels.8/@designmodel/@component.6/@port.1 //@interimmodels.8/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.8/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.8/@designmodel/@host.2/@node.0" namedport="//@interimmodels.8/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.8/@designmodel/@host.2/@node.0" namedport="//@interimmodels.8/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.8/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.8/@designmodel/@host.3/@node.0" namedport="//@interimmodels.8/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.8/@designmodel/@host.3/@node.0" namedport="//@interimmodels.8/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.8/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.8/@designmodel/@host.4/@node.0" namedport="//@interimmodels.8/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.8/@designmodel/@component.7 //@interimmodels.8/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.8/@designmodel/@host.5/@node.0" namedport="//@interimmodels.8/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.8/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.8/@designmodel/@host.6/@node.0" namedport="//@interimmodels.8/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.8/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.8/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.8/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.8/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.8/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.8/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.8/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="2" description="lifegrid - setup-component" nextModel="//@interimmodels.10">
    <designmodel name="interimlifegrid2">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.9/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.9/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.9/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.9/@designmodel/@connector.0/@role.0 //@interimmodels.9/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.9/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.9/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.9/@designmodel/@connector.0/@role.1 //@interimmodels.9/@designmodel/@connector.1/@role.0 //@interimmodels.9/@designmodel/@connector.2/@role.0 //@interimmodels.9/@designmodel/@connector.3/@role.0 //@interimmodels.9/@designmodel/@connector.10/@role.0" type="response,broadcast,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.9/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.9/@designmodel/@connector.1/@role.1 //@interimmodels.9/@designmodel/@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.9/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.9/@designmodel/@connector.1/@role.1 //@interimmodels.9/@designmodel/@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository,datastore" deploymentnode="//@interimmodels.9/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.9/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.9/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="repository,datastore" deploymentnode="//@interimmodels.9/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.9/@designmodel/@connector.2/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.9/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading,datastore" deploymentnode="//@interimmodels.9/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.9/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.9/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.9/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.9/@designmodel/@connector.5/@role.0 //@interimmodels.9/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.9/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.9/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="lifefriendref">
        <port name="payref" role="//@interimmodels.9/@designmodel/@connector.9/@role.0">
          <events name="preprocess"/>
        </port>
        <port name="cnotifyref" role="//@interimmodels.9/@designmodel/@connector.4/@role.0">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref" role="//@interimmodels.9/@designmodel/@connector.9/@role.1">
          <events name="checked"/>
        </port>
      </component>
      <component name="lifegridref">
        <port name="lookupref">
          <events name="returned"/>
        </port>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.2/@role.0" connector="//@interimmodels.9/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.4/@role.0" connector="//@interimmodels.9/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.3/@role.0" connector="//@interimmodels.9/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.3/@role.0" connector="//@interimmodels.9/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.1/@role.0" connector="//@interimmodels.9/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="REConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="reader" roletype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="tolink" connector="//@interimmodels.9/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.6/@role.0" connector="//@interimmodels.9/@designmodel/@connector.5"/>
        <role name="writestorage" roletype="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.5"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.6"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.0/@role.0" connector="//@interimmodels.9/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.8"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" connector="//@interimmodels.9/@designmodel/@connector.9">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.9/@designmodel/@connector.9">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <connector name="emwireref">
        <role name="reader" type="tolink" connector="//@interimmodels.9/@designmodel/@connector.10">
          <roletype href="lifegrid.arch#//@archstyle.5/@connectortype.0/@roletype.0"/>
        </role>
        <role name="readstorage" type="in" connector="//@interimmodels.9/@designmodel/@connector.10">
          <roletype href="lifegrid.arch#//@archstyle.5/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.9/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.9/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.9/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.9/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.9/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.9/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.9/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.9/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.9/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.9/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.9/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.9/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.9/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.9/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.9/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.9/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.9/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.9/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.9/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.9/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.9/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.0824704" testport="//@interimmodels.9/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!58 -> soswire_req?58 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!58 -> dispatchwire_req?58 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!58 -> emwire_req?58 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!58 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?58 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!58 -> dispatchwire_res?58 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!58 -> soswire_res?58" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.9/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.0833419" testport="//@interimmodels.9/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!33 -> soswire_req?33 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!33 -> dispatchwire_req?33 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!33 -> emwire_req?33 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!33 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?33 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!33 -> dispatchwire_res?33 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!33 -> soswire_res?33" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.9/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.090904" testport="//@interimmodels.9/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!82 -> soswire_req?82 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!82 -> dispatchwire_req?82 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!82 -> emwire_req?82 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!82 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?82 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!82 -> dispatchwire_res?82 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!82 -> soswire_res?82" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.9/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1183433" testport="//@interimmodels.9/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!37 -> soswire_req?37 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!37 -> dispatchwire_req?37 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!37 -> emwire_req?37 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!37 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?37 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!37 -> dispatchwire_res?37 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!37 -> soswire_res?37" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.9/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.11590579999999999" testport="//@interimmodels.9/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!70 -> soswire_req?70 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!70 -> dispatchwire_req?70 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!70 -> emwire_req?70 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!70 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?70 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!70 -> dispatchwire_res?70 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!70 -> soswire_res?70" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="read-repository" model="//@interimmodels.9/@designmodel" counterExample="" visitedStates="447" verifyTime="0.0136294" testport="//@interimmodels.9/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!76 -> soswire_req?76 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!76 -> dispatchwire_req?76 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!76 -> emwire_req?76 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_emwire_readstorage_process -> emwire_res!76 -> emwire_res?76 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!76 -> pgwire_req?76 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!76 -> pgwire_res?76 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!76 -> guardnoti_pub?76 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!76 -> ptwire_req?76 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!76 -> ptwire_res?76 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!76 -> dispatchwire_res?76 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!76 -> soswire_res?76" exprText="[] (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emwire.readstorage.process)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="write-repository" model="//@interimmodels.9/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0048632" testport="//@interimmodels.9/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_emupwire_writer_request -> emupwire_req!10 -> emupwire_req?10 -> EmCenter_emupwire_writestorage_invoke -> EmCenter_emupdate_updated -> EmCenter_emupwire_writestorage_process -> emupwire_res!10 -> emupwire_res?10 -> BackOffice_pgupwire_writer_request -> pgupwire_req!10 -> pgupwire_req?10 -> Practitioner_pgupwire_writestorage_invoke -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_writestorage_process -> pgupwire_res!10 -> pgupwire_res?10 -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_writer_process -> BackOffice_pgupwire_writer_Skip -> BackOffice_emupwire_writer_process" exprText="[] (EmCenter.emupwire.writestorage.process -> &lt;> BackOffice.updateprofile.issueupdate )"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.9/@designmodel/@component.10/@port.0" exprText="[]  (lifefriendref.payref.preprocess -> &lt;> paymentgatewayref.commitref.checked)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="lifefriend1" testport="//@interimmodels.9/@designmodel/@component.10/@port.1" exprText="[]  (lifefriendref.cnotifyref.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="lifegrid1" testport="//@interimmodels.9/@designmodel/@component.2/@port.0" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> lifegridref.lookupref.returned)"/>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.9/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.9/@designmodel/@host.0/@node.0" namedport="//@interimmodels.9/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.9/@designmodel/@host.0/@node.0" namedport="//@interimmodels.9/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.9/@designmodel/@component.2 //@interimmodels.9/@designmodel/@component.6 //@interimmodels.9/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.9/@designmodel/@host.1/@node.0" namedport="//@interimmodels.9/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.9/@designmodel/@host.1/@node.0" namedport="//@interimmodels.9/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.9/@designmodel/@host.1/@node.0" namedport="//@interimmodels.9/@designmodel/@component.6/@port.1 //@interimmodels.9/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.9/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.9/@designmodel/@host.2/@node.0" namedport="//@interimmodels.9/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.9/@designmodel/@host.2/@node.0" namedport="//@interimmodels.9/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.9/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.9/@designmodel/@host.3/@node.0" namedport="//@interimmodels.9/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.9/@designmodel/@host.3/@node.0" namedport="//@interimmodels.9/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.9/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.9/@designmodel/@host.4/@node.0" namedport="//@interimmodels.9/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.9/@designmodel/@component.7 //@interimmodels.9/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.9/@designmodel/@host.5/@node.0" namedport="//@interimmodels.9/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.9/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.9/@designmodel/@host.6/@node.0" namedport="//@interimmodels.9/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.9/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.9/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.9/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.9/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.9/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.9/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.9/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="3" description="lifegrid - remove-connector" nextModel="//@interimmodels.11">
    <designmodel name="interimlifegrid3">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.10/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.10/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.10/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.10/@designmodel/@connector.0/@role.0 //@interimmodels.10/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.10/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.10/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.10/@designmodel/@connector.0/@role.1 //@interimmodels.10/@designmodel/@connector.1/@role.0 //@interimmodels.10/@designmodel/@connector.3/@role.0 //@interimmodels.10/@designmodel/@connector.10/@role.0" type="response,broadcast,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.10/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.10/@designmodel/@connector.1/@role.1 //@interimmodels.10/@designmodel/@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.10/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.10/@designmodel/@connector.1/@role.1 //@interimmodels.10/@designmodel/@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository,datastore" deploymentnode="//@interimmodels.10/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.10/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.10/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="repository,datastore" deploymentnode="//@interimmodels.10/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" type="access,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.10/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading,datastore" deploymentnode="//@interimmodels.10/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.10/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.10/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.10/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.10/@designmodel/@connector.5/@role.0 //@interimmodels.10/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.10/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.10/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="lifefriendref">
        <port name="payref" role="//@interimmodels.10/@designmodel/@connector.9/@role.0">
          <events name="preprocess"/>
        </port>
        <port name="cnotifyref" role="//@interimmodels.10/@designmodel/@connector.4/@role.0">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref" role="//@interimmodels.10/@designmodel/@connector.9/@role.1">
          <events name="checked"/>
        </port>
      </component>
      <component name="lifegridref">
        <port name="lookupref">
          <events name="returned"/>
        </port>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.10/@role.0" connector="//@interimmodels.10/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.4/@role.0" connector="//@interimmodels.10/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwiretoremove" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0">
        <role name="readertoremove" roletype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.2"/>
        <role name="readstoragetoremove" roletype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.3/@role.0" connector="//@interimmodels.10/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.1/@role.0" connector="//@interimmodels.10/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="REConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="reader" roletype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="tolink" connector="//@interimmodels.10/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.6/@role.0" connector="//@interimmodels.10/@designmodel/@connector.5"/>
        <role name="writestorage" roletype="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.5"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.6"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.0/@role.0" connector="//@interimmodels.10/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.8"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" connector="//@interimmodels.10/@designmodel/@connector.9">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.10/@designmodel/@connector.9">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <connector name="emwireref">
        <role name="reader" type="tolink" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.3/@role.0" connector="//@interimmodels.10/@designmodel/@connector.10">
          <roletype href="lifegrid.arch#//@archstyle.5/@connectortype.0/@roletype.0"/>
        </role>
        <role name="readstorage" type="in" connector="//@interimmodels.10/@designmodel/@connector.10">
          <roletype href="lifegrid.arch#//@archstyle.5/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.10/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.10/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.10/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.10/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.10/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.10/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.10/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.10/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.10/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.10/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.10/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.10/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.10/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.10/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.10/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.10/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.10/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.10/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.10/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.10/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.10/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.0824704" testport="//@interimmodels.10/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!58 -> soswire_req?58 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!58 -> dispatchwire_req?58 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!58 -> emwire_req?58 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!58 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?58 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!58 -> dispatchwire_res?58 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!58 -> soswire_res?58" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.10/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.0833419" testport="//@interimmodels.10/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!33 -> soswire_req?33 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!33 -> dispatchwire_req?33 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!33 -> emwire_req?33 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!33 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?33 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!33 -> dispatchwire_res?33 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!33 -> soswire_res?33" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.10/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.090904" testport="//@interimmodels.10/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!82 -> soswire_req?82 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!82 -> dispatchwire_req?82 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!82 -> emwire_req?82 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!82 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?82 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!82 -> dispatchwire_res?82 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!82 -> soswire_res?82" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.10/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1183433" testport="//@interimmodels.10/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!37 -> soswire_req?37 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!37 -> dispatchwire_req?37 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!37 -> emwire_req?37 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!37 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?37 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!37 -> dispatchwire_res?37 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!37 -> soswire_res?37" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.10/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.11590579999999999" testport="//@interimmodels.10/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!70 -> soswire_req?70 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!70 -> dispatchwire_req?70 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!70 -> emwire_req?70 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!70 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?70 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!70 -> dispatchwire_res?70 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!70 -> soswire_res?70" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="read-repository" model="//@interimmodels.10/@designmodel" counterExample="" visitedStates="447" verifyTime="0.0136294" testport="//@interimmodels.10/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!76 -> soswire_req?76 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!76 -> dispatchwire_req?76 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!76 -> emwire_req?76 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_emwire_readstorage_process -> emwire_res!76 -> emwire_res?76 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!76 -> pgwire_req?76 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!76 -> pgwire_res?76 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!76 -> guardnoti_pub?76 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!76 -> ptwire_req?76 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!76 -> ptwire_res?76 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!76 -> dispatchwire_res?76 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!76 -> soswire_res?76" exprText="[] (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emwire.readstorage.process)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="write-repository" model="//@interimmodels.10/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0048632" testport="//@interimmodels.10/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_emupwire_writer_request -> emupwire_req!10 -> emupwire_req?10 -> EmCenter_emupwire_writestorage_invoke -> EmCenter_emupdate_updated -> EmCenter_emupwire_writestorage_process -> emupwire_res!10 -> emupwire_res?10 -> BackOffice_pgupwire_writer_request -> pgupwire_req!10 -> pgupwire_req?10 -> Practitioner_pgupwire_writestorage_invoke -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_writestorage_process -> pgupwire_res!10 -> pgupwire_res?10 -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_writer_process -> BackOffice_pgupwire_writer_Skip -> BackOffice_emupwire_writer_process" exprText="[] (EmCenter.emupwire.writestorage.process -> &lt;> BackOffice.updateprofile.issueupdate )"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.10/@designmodel/@component.10/@port.0" exprText="[]  (lifefriendref.payref.preprocess -> &lt;> paymentgatewayref.commitref.checked)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="lifefriend1" testport="//@interimmodels.10/@designmodel/@component.10/@port.1" exprText="[]  (lifefriendref.cnotifyref.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="lifegrid1" testport="//@interimmodels.10/@designmodel/@component.2/@port.0" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> lifegridref.lookupref.returned)"/>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.10/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.10/@designmodel/@host.0/@node.0" namedport="//@interimmodels.10/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.10/@designmodel/@host.0/@node.0" namedport="//@interimmodels.10/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.10/@designmodel/@component.2 //@interimmodels.10/@designmodel/@component.6 //@interimmodels.10/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.10/@designmodel/@host.1/@node.0" namedport="//@interimmodels.10/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.10/@designmodel/@host.1/@node.0" namedport="//@interimmodels.10/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.10/@designmodel/@host.1/@node.0" namedport="//@interimmodels.10/@designmodel/@component.6/@port.1 //@interimmodels.10/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.10/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.10/@designmodel/@host.2/@node.0" namedport="//@interimmodels.10/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.10/@designmodel/@host.2/@node.0" namedport="//@interimmodels.10/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.10/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.10/@designmodel/@host.3/@node.0" namedport="//@interimmodels.10/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.10/@designmodel/@host.3/@node.0" namedport="//@interimmodels.10/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.10/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.10/@designmodel/@host.4/@node.0" namedport="//@interimmodels.10/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.10/@designmodel/@component.7 //@interimmodels.10/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.10/@designmodel/@host.5/@node.0" namedport="//@interimmodels.10/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.10/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.10/@designmodel/@host.6/@node.0" namedport="//@interimmodels.10/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.10/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.10/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.10/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.10/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.10/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.10/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.10/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="4" description="lifegrid - establish-link">
    <designmodel name="interimlifegrid4">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.11/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.11/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.11/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.11/@designmodel/@connector.0/@role.0 //@interimmodels.11/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.11/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.11/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.11/@designmodel/@connector.0/@role.1 //@interimmodels.11/@designmodel/@connector.1/@role.0 //@interimmodels.11/@designmodel/@connector.3/@role.0 //@interimmodels.11/@designmodel/@connector.10/@role.0" type="response,broadcast,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.11/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.11/@designmodel/@connector.1/@role.1 //@interimmodels.11/@designmodel/@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.11/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.11/@designmodel/@connector.1/@role.1 //@interimmodels.11/@designmodel/@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository,datastore" deploymentnode="//@interimmodels.11/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.11/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.11/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="repository,datastore" deploymentnode="//@interimmodels.11/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" type="EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.11/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading,datastore" deploymentnode="//@interimmodels.11/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.11/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.11/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.11/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.11/@designmodel/@connector.5/@role.0 //@interimmodels.11/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.11/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.11/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="lifefriendref" type="client,readendpoint,datareader">
        <port name="payref" role="//@interimmodels.11/@designmodel/@connector.9/@role.0" type="request,OutboundPort">
          <events name="preprocess"/>
        </port>
        <port name="cnotifyref" role="//@interimmodels.11/@designmodel/@connector.4/@role.0" type="read,OutboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="paymentgatewayref" type="server">
        <port name="commitref" role="//@interimmodels.11/@designmodel/@connector.9/@role.1" type="response,InboundPort">
          <events name="checked"/>
        </port>
      </component>
      <component name="lifegridref" type="repository,datastore">
        <port name="lookupref" role="//@interimmodels.11/@designmodel/@connector.10/@role.1" type="access,InboundPort">
          <events name="returned"/>
        </port>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.11/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.10/@role.0" connector="//@interimmodels.11/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.11/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.4/@role.0" connector="//@interimmodels.11/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwiretoremove" connectortype="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0">
        <role name="readertoremove" roletype="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="" connector="//@interimmodels.11/@designmodel/@connector.2"/>
        <role name="readstoragetoremove" roletype="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.3/@role.0" connector="//@interimmodels.11/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.1/@role.0" connector="//@interimmodels.11/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.11/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="REConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="reader" roletype="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.11/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.11/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.6/@role.0" connector="//@interimmodels.11/@designmodel/@connector.5"/>
        <role name="writestorage" roletype="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.11/@designmodel/@connector.5"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.11/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.11/@designmodel/@connector.6"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.11/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.0/@role.0" connector="//@interimmodels.11/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.11/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.11/@designmodel/@connector.8"/>
      </connector>
      <connector name="paywireref" type="CSConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" type="out" connector="//@interimmodels.11/@designmodel/@connector.9">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="in" connector="//@interimmodels.11/@designmodel/@connector.9">
          <roletype href="payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <connector name="emwireref" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" type="out" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.3/@role.0" connector="//@interimmodels.11/@designmodel/@connector.10">
          <roletype href="lifegrid.arch#//@archstyle.5/@connectortype.0/@roletype.0"/>
        </role>
        <role name="readstorage" type="in" connector="//@interimmodels.11/@designmodel/@connector.10">
          <roletype href="lifegrid.arch#//@archstyle.5/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.11/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.11/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.11/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.11/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.11/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.11/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.11/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.11/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.11/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.11/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.11/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.11/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.11/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.11/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.11/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.11/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.11/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.11/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.11/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.11/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.11/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.11/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.0824704" testport="//@interimmodels.11/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!58 -> soswire_req?58 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!58 -> dispatchwire_req?58 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!58 -> emwire_req?58 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!58 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?58 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!58 -> dispatchwire_res?58 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!58 -> soswire_res?58" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.11/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.11/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.11/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.0833419" testport="//@interimmodels.11/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!33 -> soswire_req?33 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!33 -> dispatchwire_req?33 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!33 -> emwire_req?33 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!33 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?33 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!33 -> dispatchwire_res?33 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!33 -> soswire_res?33" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.11/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.11/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.11/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.090904" testport="//@interimmodels.11/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!82 -> soswire_req?82 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!82 -> dispatchwire_req?82 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!82 -> emwire_req?82 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!82 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?82 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!82 -> dispatchwire_res?82 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!82 -> soswire_res?82" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.11/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.11/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.11/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1183433" testport="//@interimmodels.11/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!37 -> soswire_req?37 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!37 -> dispatchwire_req?37 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!37 -> emwire_req?37 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!37 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?37 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!37 -> dispatchwire_res?37 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!37 -> soswire_res?37" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.11/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.11/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.11/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.11590579999999999" testport="//@interimmodels.11/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!70 -> soswire_req?70 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!70 -> dispatchwire_req?70 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!70 -> emwire_req?70 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!70 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?70 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!70 -> dispatchwire_res?70 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!70 -> soswire_res?70" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.11/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.11/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="read-repository" model="//@interimmodels.11/@designmodel" counterExample="" visitedStates="447" verifyTime="0.0136294" testport="//@interimmodels.11/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!76 -> soswire_req?76 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!76 -> dispatchwire_req?76 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!76 -> emwire_req?76 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_emwire_readstorage_process -> emwire_res!76 -> emwire_res?76 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!76 -> pgwire_req?76 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!76 -> pgwire_res?76 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!76 -> guardnoti_pub?76 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!76 -> ptwire_req?76 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!76 -> ptwire_res?76 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!76 -> dispatchwire_res?76 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!76 -> soswire_res?76" exprText="[] (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emwire.readstorage.process)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="write-repository" model="//@interimmodels.11/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0048632" testport="//@interimmodels.11/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_emupwire_writer_request -> emupwire_req!10 -> emupwire_req?10 -> EmCenter_emupwire_writestorage_invoke -> EmCenter_emupdate_updated -> EmCenter_emupwire_writestorage_process -> emupwire_res!10 -> emupwire_res?10 -> BackOffice_pgupwire_writer_request -> pgupwire_req!10 -> pgupwire_req?10 -> Practitioner_pgupwire_writestorage_invoke -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_writestorage_process -> pgupwire_res!10 -> pgupwire_res?10 -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_writer_process -> BackOffice_pgupwire_writer_Skip -> BackOffice_emupwire_writer_process" exprText="[] (EmCenter.emupwire.writestorage.process -> &lt;> BackOffice.updateprofile.issueupdate )"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" visitedStates="10549" verifyTime="0.2089246" testport="//@interimmodels.11/@designmodel/@component.10/@port.0" traceExample="init -> lifefriendref_payref_preprocess -> lifefriendref_paywireref_requester_process -> paywireref_req!28 -> paywireref_req?28 -> paymentgatewayref_paywireref_responder_invoke -> paymentgatewayref_commitref_checked -> paymentgatewayref_paywireref_responder_process -> paywireref_res!28 -> paywireref_res?28 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_reader_process -> pgwire_req!32 -> pgwire_req?32 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!32 -> pgwire_res?32 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!32 -> guardnoti_pub?32 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!32 -> ptwire_req?32 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!32 -> ptwire_res?32 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_emwireref_reader_process -> emwireref_req!32 -> emwireref_req?32 -> lifegridref_emwireref_readstorage_invoke -> lifegridref_lookupref_returned -> lifegridref_emwireref_readstorage_process -> emwireref_res!32 -> emwireref_res?32" exprText="[]  (lifefriendref.payref.preprocess -> &lt;> paymentgatewayref.commitref.checked)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="lifefriend1" visitedStates="8603" verifyTime="0.1578509" testport="//@interimmodels.11/@designmodel/@component.10/@port.1" traceExample="init -> lifefriendref_cnotifyref_acknowlege -> lifefriendref_ptwire_reader_process -> ptwire_req!75 -> ptwire_req?75 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!75 -> ptwire_res?75 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_reader_process -> pgwire_req!11 -> pgwire_req?11 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!11 -> pgwire_res?11 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!11 -> guardnoti_pub?11 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!11 -> ptwire_req?11 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!11 -> ptwire_res?11 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_emwireref_reader_process -> emwireref_req!11 -> emwireref_req?11 -> lifegridref_emwireref_readstorage_invoke -> lifegridref_lookupref_returned -> lifegridref_emwireref_readstorage_process -> emwireref_res!11 -> emwireref_res?11" exprText="[]  (lifefriendref.cnotifyref.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="lifegrid1" visitedStates="745" verifyTime="0.013674299999999999" testport="//@interimmodels.11/@designmodel/@component.2/@port.0" traceExample="init -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_reader_process -> pgwire_req!92 -> pgwire_req?92 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!92 -> pgwire_res?92 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!92 -> guardnoti_pub?92 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!92 -> ptwire_req?92 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!92 -> ptwire_res?92 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_emwireref_reader_process -> emwireref_req!92 -> emwireref_req?92 -> lifegridref_emwireref_readstorage_invoke -> lifegridref_lookupref_returned -> lifegridref_emwireref_readstorage_process -> emwireref_res!92 -> emwireref_res?92" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> lifegridref.lookupref.returned)"/>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.11/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.11/@designmodel/@host.0/@node.0" namedport="//@interimmodels.11/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.11/@designmodel/@host.0/@node.0" namedport="//@interimmodels.11/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.11/@designmodel/@component.2 //@interimmodels.11/@designmodel/@component.6 //@interimmodels.11/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.11/@designmodel/@host.1/@node.0" namedport="//@interimmodels.11/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.11/@designmodel/@host.1/@node.0" namedport="//@interimmodels.11/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.11/@designmodel/@host.1/@node.0" namedport="//@interimmodels.11/@designmodel/@component.6/@port.1 //@interimmodels.11/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.11/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.11/@designmodel/@host.2/@node.0" namedport="//@interimmodels.11/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.11/@designmodel/@host.2/@node.0" namedport="//@interimmodels.11/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.11/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.11/@designmodel/@host.3/@node.0" namedport="//@interimmodels.11/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.11/@designmodel/@host.3/@node.0" namedport="//@interimmodels.11/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.11/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.11/@designmodel/@host.4/@node.0" namedport="//@interimmodels.11/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.11/@designmodel/@component.7 //@interimmodels.11/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.11/@designmodel/@host.5/@node.0" namedport="//@interimmodels.11/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.11/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.11/@designmodel/@host.6/@node.0" namedport="//@interimmodels.11/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.11/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.11/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.11/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.11/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.11/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.11/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.11/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
</arch:MigrationModel>
