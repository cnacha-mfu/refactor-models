<?xml version="1.0" encoding="ASCII"?>
<arch:MigrationModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arch="http://www.example.org/arch">
  <source href="platform:/resource/nz.auckland.arch.testrefactor.eshop/current.arch#/"/>
  <interimmodels description="payment - setup-connector" nextModel="//@interimmodels.1">
    <designmodel name="interimpayment0">
      <component name="ShopFrontend" type="client,broadcaster" deploymentnode="//@interimmodels.0/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,LeastPriviledge">
        <port name="login" role="//@interimmodels.0/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="submit"/>
        </port>
        <port name="browse" role="//@interimmodels.0/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="read"/>
        </port>
        <port name="order" role="//@interimmodels.0/@designmodel/@connector.9/@role.0" type="broadcast,OutboundPort">
          <events name="purchased"/>
        </port>
        <port name="shop" role="//@interimmodels.0/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="itemadded"/>
        </port>
      </component>
      <component name="CateloqueService" type="server" deploymentnode="//@interimmodels.0/@designmodel/@host.0/@node.1" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="list" role="//@interimmodels.0/@designmodel/@connector.1/@role.1" type="response,InboundPort">
          <events name="query"/>
        </port>
      </component>
      <component name="UserService" type="server" deploymentnode="//@interimmodels.0/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DefenseInDepth,DenialOfService">
        <port name="auth" role="//@interimmodels.0/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="checked"/>
        </port>
      </component>
      <component name="OrdersService" type="client,server,listener,eventconsumer,readendpoint,datawriter,datareader" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization,DenialOfService,DataTampering">
        <port name="postorder" role="//@interimmodels.0/@designmodel/@connector.4/@role.0 //@interimmodels.0/@designmodel/@connector.7/@role.0 //@interimmodels.0/@designmodel/@connector.9/@role.1 //@interimmodels.0/@designmodel/@connector.10/@role.0" type="request,listen,write,OutboundPort,InboundPort,EventProcessorPort">
          <events name="check" next="//@interimmodels.0/@designmodel/@component.3/@port.0/@events.1"/>
          <events name="save"/>
        </port>
        <port name="get" role="//@interimmodels.0/@designmodel/@connector.2/@role.1 //@interimmodels.0/@designmodel/@connector.8/@role.0" type="response,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="ack"/>
        </port>
      </component>
      <component name="OrdersDB" type="repository,datastore" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.1">
        <port name="writeorder" role="//@interimmodels.0/@designmodel/@connector.7/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="orderwritten"/>
        </port>
        <port name="queryorder" role="//@interimmodels.0/@designmodel/@connector.8/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="orderreaded"/>
        </port>
      </component>
      <component name="CartsService" type="server" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="manage" role="//@interimmodels.0/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="saveitem"/>
        </port>
      </component>
      <component name="Payment" type="repository,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.0/@designmodel/@host.1/@node.1" criticalLevel="High" securityCharacters="DefenseInDepth,Compartmentalization">
        <port name="pay" role="//@interimmodels.0/@designmodel/@connector.10/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="paid"/>
        </port>
      </component>
      <component name="ShippingService" type="server,datawriter" deploymentnode="//@interimmodels.0/@designmodel/@host.3/@node.0" securityCharacters="Compartmentalization">
        <port name="postshipping" role="//@interimmodels.0/@designmodel/@connector.4/@role.1 //@interimmodels.0/@designmodel/@connector.6/@role.0" type="response,write,OutboundPort,InboundPort,EventProcessorPort">
          <events name="posted"/>
        </port>
      </component>
      <component name="ShippingWorker" type="readendpoint,datareader" deploymentnode="//@interimmodels.0/@designmodel/@host.3/@node.0">
        <port name="listqueue" role="//@interimmodels.0/@designmodel/@connector.5/@role.0" type="read,OutboundPort,EventProcessorPort">
          <events name="renderqueue"/>
        </port>
      </component>
      <component name="QueueDB" type="repository,datastore" deploymentnode="//@interimmodels.0/@designmodel/@host.3/@node.1">
        <port name="writequeue" role="//@interimmodels.0/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="queuewritten"/>
        </port>
        <port name="readqueue" role="//@interimmodels.0/@designmodel/@connector.5/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="queuereaded"/>
        </port>
      </component>
      <component name="ShopBackend" type="client" deploymentnode="//@interimmodels.0/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface">
        <port name="listorder" role="//@interimmodels.0/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <connector name="userwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.0"/>
      </connector>
      <connector name="cateloquewire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.1"/>
      </connector>
      <connector name="orderquerywire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.8/@role.0" connector="//@interimmodels.0/@designmodel/@connector.2"/>
      </connector>
      <connector name="cartwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.3"/>
      </connector>
      <connector name="shippingwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.6/@role.0" connector="//@interimmodels.0/@designmodel/@connector.4"/>
      </connector>
      <connector name="queuereadwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.5"/>
        <role name="readstorage" roletype="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.5"/>
      </connector>
      <connector name="shippinglogwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.6"/>
      </connector>
      <connector name="orderlogwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.10/@role.0" connector="//@interimmodels.0/@designmodel/@connector.7"/>
        <role name="writestorage" roletype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.7"/>
      </connector>
      <connector name="orderreadwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.8"/>
        <role name="readstorage" roletype="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.8"/>
      </connector>
      <connector name="orderwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.9"/>
        <role name="subscriber" roletype="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.7/@role.0" connector="//@interimmodels.0/@designmodel/@connector.9"/>
      </connector>
      <connector name="paywire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.4/@role.0" connector="//@interimmodels.0/@designmodel/@connector.10"/>
        <role name="writestorage" roletype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.10"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="out" connector="//@interimmodels.0/@designmodel/@connector.11">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="in" connector="//@interimmodels.0/@designmodel/@connector.11">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.0/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.0/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.0/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.0/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.4" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.0/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.0/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.0/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.0/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.0/@designmodel/@archstyle.4/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.0/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.0/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.0/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.0/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.0/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.0/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.0/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.0/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="15" verifyTime="0.0056955" testport="//@interimmodels.0/@designmodel/@component.0/@port.3" traceExample="init -> ShopFrontend_shop_itemadded -> ShopFrontend_cartwire_requester_process -> cartwire_req!48 -> cartwire_req?48 -> CartsService_cartwire_responder_invoke -> CartsService_manage_saveitem -> CartsService_cartwire_responder_process -> cartwire_res!48 -> cartwire_res?48" exprText="[]  (ShopFrontend.shop.itemadded -> &lt;> CartsService.manage.saveitem)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.0/@port.3/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="63" verifyTime="0.0112015" testport="//@interimmodels.0/@designmodel/@component.0/@port.2" traceExample="init -> ShopFrontend_order_purchased -> ShopFrontend_orderwire_publisher_process -> orderwire_pub!79 -> orderwire_pub?79 -> OrdersService_orderlogwire_writer_request -> orderlogwire_req!79 -> orderlogwire_req?79 -> OrdersDB_orderlogwire_writestorage_invoke -> OrdersDB_writeorder_orderwritten -> OrdersDB_orderlogwire_writestorage_process -> orderlogwire_res!79 -> orderlogwire_res?79 -> OrdersService_postorder_check -> OrdersService_postorder_save -> OrdersService_orderlogwire_writer_process -> OrdersService_orderlogwire_writer_Skip -> OrdersService_paywire_requester_process -> paywire_req!79 -> paywire_req?79 -> Payment_paywire_responder_invoke -> Payment_pay_paid -> Payment_paywire_responder_process -> paywire_res!79 -> paywire_res?79 -> OrdersService_paywire_requester_Skip -> OrdersService_shippingwire_requester_process -> shippingwire_req!79 -> shippingwire_req?79 -> ShippingService_shippingwire_responder_invoke -> ShippingService_shippinglogwire_writer_request -> shippinglogwire_req!79 -> shippinglogwire_req?79 -> QueueDB_shippinglogwire_writestorage_invoke -> QueueDB_writequeue_queuewritten -> QueueDB_shippinglogwire_writestorage_process -> shippinglogwire_res!79 -> shippinglogwire_res?79 -> ShippingService_postshipping_posted -> ShippingService_shippinglogwire_writer_process -> ShippingService_shippinglogwire_writer_Skip -> ShippingService_shippingwire_responder_process -> shippingwire_res!79 -> shippingwire_res?79 -> OrdersService_shippingwire_requester_Skip -> OrdersService_orderwire_subscriber_process" exprText="[]  (Payment.pay.paid -> &lt;> ShippingService.postshipping.posted)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.0/@designmodel" visitedStates="10" verifyTime="0.005912" testport="//@interimmodels.0/@designmodel/@component.0/@port.3" traceExample="init -> ShopFrontend_shop_itemadded -> ShopFrontend_cartwire_requester_process -> cartwire_req!51 -> cartwire_req?51 -> CartsService_cartwire_responder_invoke -> CartsService_manage_saveitem -> CartsService_cartwire_responder_process -> cartwire_res!51 -> cartwire_res?51" exprText="[]  (OrdersService.postorder.save -> &lt;> Payment.pay.paid)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.3/@port.0/@events.1" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="15" verifyTime="0.0511383" testport="//@interimmodels.0/@designmodel/@component.0/@port.0" traceExample="init -> ShopFrontend_login_submit -> ShopFrontend_userwire_requester_process -> userwire_req!38 -> userwire_req?38 -> UserService_userwire_responder_invoke -> UserService_auth_checked -> UserService_userwire_responder_process -> userwire_res!38 -> userwire_res?38" exprText="[]  (ShopFrontend.login.submit -> &lt;> UserService.auth.checked)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.0/@designmodel" counterExample="init -> ShopFrontend_browse_read -> ShopFrontend_cateloquewire_requester_process -> cateloquewire_req!62 -> cateloquewire_req?62 -> CateloqueService_cateloquewire_responder_invoke -> CateloqueService_list_query -> CateloqueService_cateloquewire_responder_process -> cateloquewire_res!62 -> cateloquewire_res?62" visitedStates="24" verifyTime="0.005226199999999999" testport="//@interimmodels.0/@designmodel/@component.0/@port.1" traceExample="init -> ShopFrontend_browse_read -> ShopFrontend_cateloquewire_requester_process -> cateloquewire_req!91 -> cateloquewire_req?91 -> CateloqueService_cateloquewire_responder_invoke -> CateloqueService_list_query -> CateloqueService_cateloquewire_responder_process -> cateloquewire_res!91 -> cateloquewire_res?91" exprText="[]  (&lt;> ShopFrontend.browse.read -> &lt;> CateloqueService.list.query)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop6" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0045632" testport="//@interimmodels.0/@designmodel/@component.10/@port.0" traceExample="init -> ShopBackend_listorder_renderlist -> ShopBackend_orderquerywire_requester_process -> orderquerywire_req!39 -> orderquerywire_req?39 -> OrdersService_orderquerywire_responder_invoke -> OrdersService_get_ack -> OrdersService_orderreadwire_reader_process -> orderreadwire_req!39 -> orderreadwire_req?39 -> OrdersDB_orderreadwire_readstorage_invoke -> OrdersDB_queryorder_orderreaded -> OrdersDB_orderreadwire_readstorage_process -> orderreadwire_res!39 -> orderreadwire_res?39 -> OrdersService_orderreadwire_reader_Skip -> OrdersService_orderquerywire_responder_process -> orderquerywire_res!39 -> orderquerywire_res?39" exprText="[]  (ShopBackend.listorder.renderlist -> &lt;> OrdersService.get.ack)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.5">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.10/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.5/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.3/@port.1/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop7" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="59" verifyTime="0.0096414" testport="//@interimmodels.0/@designmodel/@component.0/@port.2" traceExample="init -> ShopFrontend_order_purchased -> ShopFrontend_orderwire_publisher_process -> orderwire_pub!93 -> orderwire_pub?93 -> OrdersService_orderlogwire_writer_request -> orderlogwire_req!93 -> orderlogwire_req?93 -> OrdersDB_orderlogwire_writestorage_invoke -> OrdersDB_writeorder_orderwritten -> OrdersDB_orderlogwire_writestorage_process -> orderlogwire_res!93 -> orderlogwire_res?93 -> OrdersService_postorder_check -> OrdersService_postorder_save -> OrdersService_orderlogwire_writer_process -> OrdersService_orderlogwire_writer_Skip -> OrdersService_paywire_requester_process -> paywire_req!93 -> paywire_req?93 -> Payment_paywire_responder_invoke -> Payment_pay_paid -> Payment_paywire_responder_process -> paywire_res!93 -> paywire_res?93 -> OrdersService_paywire_requester_Skip -> OrdersService_shippingwire_requester_process -> shippingwire_req!93 -> shippingwire_req?93 -> ShippingService_shippingwire_responder_invoke -> ShippingService_shippinglogwire_writer_request -> shippinglogwire_req!93 -> shippinglogwire_req?93 -> QueueDB_shippinglogwire_writestorage_invoke -> QueueDB_writequeue_queuewritten -> QueueDB_shippinglogwire_writestorage_process -> shippinglogwire_res!93 -> shippinglogwire_res?93 -> ShippingService_postshipping_posted -> ShippingService_shippinglogwire_writer_process -> ShippingService_shippinglogwire_writer_Skip -> ShippingService_shippingwire_responder_process -> shippingwire_res!93 -> shippingwire_res?93 -> OrdersService_shippingwire_requester_Skip -> OrdersService_orderwire_subscriber_process" exprText="[]  (ShopFrontend.order.purchased -> &lt;> OrdersService.postorder.save)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.6">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.3/@port.0/@events.1" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.0/@port.2/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.6/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.0/@designmodel/@component.3/@port.0" exprText="[]  (OrdersService.postorder.save-> &lt;> paymentgatewayref.commitref.checked)"/>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="NodeJSContainer1" component="//@interimmodels.0/@designmodel/@component.0 //@interimmodels.0/@designmodel/@component.10">
          <port name="port" portNumber="15551" node="//@interimmodels.0/@designmodel/@host.0/@node.0" namedport="//@interimmodels.0/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="15552" node="//@interimmodels.0/@designmodel/@host.0/@node.0" namedport="//@interimmodels.0/@designmodel/@component.0/@port.2"/>
          <port name="port" portNumber="15553" node="//@interimmodels.0/@designmodel/@host.0/@node.0" namedport="//@interimmodels.0/@designmodel/@component.10/@port.0"/>
          <port name="port" portNumber="15554" node="//@interimmodels.0/@designmodel/@host.0/@node.0" namedport="//@interimmodels.0/@designmodel/@component.0/@port.3"/>
          <port name="port" portNumber="15555" node="//@interimmodels.0/@designmodel/@host.0/@node.0" namedport="//@interimmodels.0/@designmodel/@component.0/@port.1"/>
        </node>
        <node name="GoContainer3" component="//@interimmodels.0/@designmodel/@component.1">
          <port name="port" portNumber="80" node="//@interimmodels.0/@designmodel/@host.0/@node.1" namedport="//@interimmodels.0/@designmodel/@component.1/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="SecureServer">
        <node name="GoContainer1" component="//@interimmodels.0/@designmodel/@component.2">
          <port name="port" portNumber="80" node="//@interimmodels.0/@designmodel/@host.1/@node.0" namedport="//@interimmodels.0/@designmodel/@component.2/@port.0" hasFirewall="true"/>
        </node>
        <node name="GoContainer2" component="//@interimmodels.0/@designmodel/@component.6">
          <port name="port" portNumber="80" node="//@interimmodels.0/@designmodel/@host.1/@node.1" namedport="//@interimmodels.0/@designmodel/@component.6/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="LocalServer">
        <node name="JEEContainer1" component="//@interimmodels.0/@designmodel/@component.3 //@interimmodels.0/@designmodel/@component.5">
          <port name="port" portNumber="80" namedport="//@interimmodels.0/@designmodel/@component.3/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true"/>
          <port name="port" portNumber="15561" node="//@interimmodels.0/@designmodel/@host.2/@node.0" namedport="//@interimmodels.0/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15562" node="//@interimmodels.0/@designmodel/@host.2/@node.0" namedport="//@interimmodels.0/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15563" node="//@interimmodels.0/@designmodel/@host.2/@node.0" namedport="//@interimmodels.0/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15564" node="//@interimmodels.0/@designmodel/@host.2/@node.0" namedport="//@interimmodels.0/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15566" node="//@interimmodels.0/@designmodel/@host.2/@node.0" namedport="//@interimmodels.0/@designmodel/@component.3/@port.1"/>
          <port name="port" portNumber="81" node="//@interimmodels.0/@designmodel/@host.2/@node.0" namedport="//@interimmodels.0/@designmodel/@component.3/@port.1"/>
        </node>
        <node name="MySQL1" component="//@interimmodels.0/@designmodel/@component.4">
          <port name="port" portNumber="3306" node="//@interimmodels.0/@designmodel/@host.2/@node.1" namedport="//@interimmodels.0/@designmodel/@component.4/@port.0 //@interimmodels.0/@designmodel/@component.4/@port.1"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node name="JEEContainer4" component="//@interimmodels.0/@designmodel/@component.7 //@interimmodels.0/@designmodel/@component.8">
          <port name="port" portNumber="80" node="//@interimmodels.0/@designmodel/@host.3/@node.0" namedport="//@interimmodels.0/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
          <port name="port" portNumber="15571" node="//@interimmodels.0/@designmodel/@host.3/@node.0" namedport="//@interimmodels.0/@designmodel/@component.7/@port.0"/>
          <port name="port" portNumber="15572" node="//@interimmodels.0/@designmodel/@host.3/@node.0" namedport="//@interimmodels.0/@designmodel/@component.7/@port.0"/>
        </node>
        <node name="MySQL2" component="//@interimmodels.0/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.0/@designmodel/@host.3/@node.1" namedport="//@interimmodels.0/@designmodel/@component.9/@port.0 //@interimmodels.0/@designmodel/@component.9/@port.1"/>
        </node>
      </host>
      <link name="link2" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.0/@node.0/@port.1" target="//@interimmodels.0/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link3" source="//@interimmodels.0/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link4" source="//@interimmodels.0/@designmodel/@host.2/@node.0/@port.2"/>
      <link name="link5" target="//@interimmodels.0/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.0/@node.0/@port.3"/>
      <link name="link9" source="//@interimmodels.0/@designmodel/@host.0/@node.0/@port.4" target="//@interimmodels.0/@designmodel/@host.0/@node.1/@port.0"/>
      <link name="link11" source="//@interimmodels.0/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link12" source="//@interimmodels.0/@designmodel/@host.3/@node.0/@port.2"/>
      <link name="link13" target="//@interimmodels.0/@designmodel/@host.3/@node.1/@port.0"/>
      <link name="link14" target="//@interimmodels.0/@designmodel/@host.3/@node.1/@port.0"/>
      <link name="link16" source="//@interimmodels.0/@designmodel/@host.2/@node.0/@port.5" target="//@interimmodels.0/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.0/@node.0/@port.2" target="//@interimmodels.0/@designmodel/@host.2/@node.0/@port.6"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="1" description="payment - establish-link" nextModel="//@interimmodels.2">
    <designmodel name="interimpayment1">
      <component name="ShopFrontend" type="client,broadcaster" deploymentnode="//@interimmodels.1/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,LeastPriviledge">
        <port name="login" role="//@interimmodels.1/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="submit"/>
        </port>
        <port name="browse" role="//@interimmodels.1/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="read"/>
        </port>
        <port name="order" role="//@interimmodels.1/@designmodel/@connector.9/@role.0" type="broadcast,OutboundPort">
          <events name="purchased"/>
        </port>
        <port name="shop" role="//@interimmodels.1/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="itemadded"/>
        </port>
      </component>
      <component name="CateloqueService" type="server" deploymentnode="//@interimmodels.1/@designmodel/@host.0/@node.1" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="list" role="//@interimmodels.1/@designmodel/@connector.1/@role.1" type="response,InboundPort">
          <events name="query"/>
        </port>
      </component>
      <component name="UserService" type="server" deploymentnode="//@interimmodels.1/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DefenseInDepth,DenialOfService">
        <port name="auth" role="//@interimmodels.1/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="checked"/>
        </port>
      </component>
      <component name="OrdersService" type="client,server,listener,eventconsumer,readendpoint,datawriter,datareader" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization,DenialOfService,DataTampering">
        <port name="postorder" role="//@interimmodels.1/@designmodel/@connector.4/@role.0 //@interimmodels.1/@designmodel/@connector.7/@role.0 //@interimmodels.1/@designmodel/@connector.9/@role.1 //@interimmodels.1/@designmodel/@connector.10/@role.0 //@interimmodels.1/@designmodel/@connector.11/@role.0" type="request,listen,write,OutboundPort,InboundPort,EventProcessorPort">
          <events name="check" next="//@interimmodels.1/@designmodel/@component.3/@port.0/@events.1"/>
          <events name="save"/>
        </port>
        <port name="get" role="//@interimmodels.1/@designmodel/@connector.2/@role.1 //@interimmodels.1/@designmodel/@connector.8/@role.0" type="response,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="ack"/>
        </port>
      </component>
      <component name="OrdersDB" type="repository,datastore" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.1">
        <port name="writeorder" role="//@interimmodels.1/@designmodel/@connector.7/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="orderwritten"/>
        </port>
        <port name="queryorder" role="//@interimmodels.1/@designmodel/@connector.8/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="orderreaded"/>
        </port>
      </component>
      <component name="CartsService" type="server" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="manage" role="//@interimmodels.1/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="saveitem"/>
        </port>
      </component>
      <component name="Payment" type="repository,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.1/@designmodel/@host.1/@node.1" criticalLevel="High" securityCharacters="DefenseInDepth,Compartmentalization">
        <port name="pay" role="//@interimmodels.1/@designmodel/@connector.10/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="paid"/>
        </port>
      </component>
      <component name="ShippingService" type="server,datawriter" deploymentnode="//@interimmodels.1/@designmodel/@host.3/@node.0" securityCharacters="Compartmentalization">
        <port name="postshipping" role="//@interimmodels.1/@designmodel/@connector.4/@role.1 //@interimmodels.1/@designmodel/@connector.6/@role.0" type="response,write,OutboundPort,InboundPort,EventProcessorPort">
          <events name="posted"/>
        </port>
      </component>
      <component name="ShippingWorker" type="readendpoint,datareader" deploymentnode="//@interimmodels.1/@designmodel/@host.3/@node.0">
        <port name="listqueue" role="//@interimmodels.1/@designmodel/@connector.5/@role.0" type="read,OutboundPort,EventProcessorPort">
          <events name="renderqueue"/>
        </port>
      </component>
      <component name="QueueDB" type="repository,datastore" deploymentnode="//@interimmodels.1/@designmodel/@host.3/@node.1">
        <port name="writequeue" role="//@interimmodels.1/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="queuewritten"/>
        </port>
        <port name="readqueue" role="//@interimmodels.1/@designmodel/@connector.5/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="queuereaded"/>
        </port>
      </component>
      <component name="ShopBackend" type="client" deploymentnode="//@interimmodels.1/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface">
        <port name="listorder" role="//@interimmodels.1/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <connector name="userwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.0"/>
      </connector>
      <connector name="cateloquewire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.1"/>
      </connector>
      <connector name="orderquerywire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.8/@role.0" connector="//@interimmodels.1/@designmodel/@connector.2"/>
      </connector>
      <connector name="cartwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.3"/>
      </connector>
      <connector name="shippingwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.6/@role.0" connector="//@interimmodels.1/@designmodel/@connector.4"/>
      </connector>
      <connector name="queuereadwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.5"/>
        <role name="readstorage" roletype="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.5"/>
      </connector>
      <connector name="shippinglogwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.6"/>
      </connector>
      <connector name="orderlogwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.10/@role.0" connector="//@interimmodels.1/@designmodel/@connector.7"/>
        <role name="writestorage" roletype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.7"/>
      </connector>
      <connector name="orderreadwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.8"/>
        <role name="readstorage" roletype="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.8"/>
      </connector>
      <connector name="orderwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.9"/>
        <role name="subscriber" roletype="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.7/@role.0" connector="//@interimmodels.1/@designmodel/@connector.9"/>
      </connector>
      <connector name="paywire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.4/@role.0" connector="//@interimmodels.1/@designmodel/@connector.10"/>
        <role name="writestorage" roletype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.10"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" connector="//@interimmodels.1/@designmodel/@connector.11">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="in" connector="//@interimmodels.1/@designmodel/@connector.11">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.1/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.1/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.1/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.1/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.4" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.1/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.1/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.1/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.1/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.1/@designmodel/@archstyle.4/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.1/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.1/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.1/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.1/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.1/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.1/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.1/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.1/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="15" verifyTime="0.0056955" testport="//@interimmodels.1/@designmodel/@component.0/@port.3" traceExample="init -> ShopFrontend_shop_itemadded -> ShopFrontend_cartwire_requester_process -> cartwire_req!48 -> cartwire_req?48 -> CartsService_cartwire_responder_invoke -> CartsService_manage_saveitem -> CartsService_cartwire_responder_process -> cartwire_res!48 -> cartwire_res?48" exprText="[]  (ShopFrontend.shop.itemadded -> &lt;> CartsService.manage.saveitem)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.0/@port.3/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="63" verifyTime="0.0112015" testport="//@interimmodels.1/@designmodel/@component.0/@port.2" traceExample="init -> ShopFrontend_order_purchased -> ShopFrontend_orderwire_publisher_process -> orderwire_pub!79 -> orderwire_pub?79 -> OrdersService_orderlogwire_writer_request -> orderlogwire_req!79 -> orderlogwire_req?79 -> OrdersDB_orderlogwire_writestorage_invoke -> OrdersDB_writeorder_orderwritten -> OrdersDB_orderlogwire_writestorage_process -> orderlogwire_res!79 -> orderlogwire_res?79 -> OrdersService_postorder_check -> OrdersService_postorder_save -> OrdersService_orderlogwire_writer_process -> OrdersService_orderlogwire_writer_Skip -> OrdersService_paywire_requester_process -> paywire_req!79 -> paywire_req?79 -> Payment_paywire_responder_invoke -> Payment_pay_paid -> Payment_paywire_responder_process -> paywire_res!79 -> paywire_res?79 -> OrdersService_paywire_requester_Skip -> OrdersService_shippingwire_requester_process -> shippingwire_req!79 -> shippingwire_req?79 -> ShippingService_shippingwire_responder_invoke -> ShippingService_shippinglogwire_writer_request -> shippinglogwire_req!79 -> shippinglogwire_req?79 -> QueueDB_shippinglogwire_writestorage_invoke -> QueueDB_writequeue_queuewritten -> QueueDB_shippinglogwire_writestorage_process -> shippinglogwire_res!79 -> shippinglogwire_res?79 -> ShippingService_postshipping_posted -> ShippingService_shippinglogwire_writer_process -> ShippingService_shippinglogwire_writer_Skip -> ShippingService_shippingwire_responder_process -> shippingwire_res!79 -> shippingwire_res?79 -> OrdersService_shippingwire_requester_Skip -> OrdersService_orderwire_subscriber_process" exprText="[]  (Payment.pay.paid -> &lt;> ShippingService.postshipping.posted)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.1/@designmodel" visitedStates="10" verifyTime="0.005912" testport="//@interimmodels.1/@designmodel/@component.0/@port.3" traceExample="init -> ShopFrontend_shop_itemadded -> ShopFrontend_cartwire_requester_process -> cartwire_req!51 -> cartwire_req?51 -> CartsService_cartwire_responder_invoke -> CartsService_manage_saveitem -> CartsService_cartwire_responder_process -> cartwire_res!51 -> cartwire_res?51" exprText="[]  (OrdersService.postorder.save -> &lt;> Payment.pay.paid)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.3/@port.0/@events.1" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="15" verifyTime="0.0511383" testport="//@interimmodels.1/@designmodel/@component.0/@port.0" traceExample="init -> ShopFrontend_login_submit -> ShopFrontend_userwire_requester_process -> userwire_req!38 -> userwire_req?38 -> UserService_userwire_responder_invoke -> UserService_auth_checked -> UserService_userwire_responder_process -> userwire_res!38 -> userwire_res?38" exprText="[]  (ShopFrontend.login.submit -> &lt;> UserService.auth.checked)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.1/@designmodel" counterExample="init -> ShopFrontend_browse_read -> ShopFrontend_cateloquewire_requester_process -> cateloquewire_req!62 -> cateloquewire_req?62 -> CateloqueService_cateloquewire_responder_invoke -> CateloqueService_list_query -> CateloqueService_cateloquewire_responder_process -> cateloquewire_res!62 -> cateloquewire_res?62" visitedStates="24" verifyTime="0.005226199999999999" testport="//@interimmodels.1/@designmodel/@component.0/@port.1" traceExample="init -> ShopFrontend_browse_read -> ShopFrontend_cateloquewire_requester_process -> cateloquewire_req!91 -> cateloquewire_req?91 -> CateloqueService_cateloquewire_responder_invoke -> CateloqueService_list_query -> CateloqueService_cateloquewire_responder_process -> cateloquewire_res!91 -> cateloquewire_res?91" exprText="[]  (&lt;> ShopFrontend.browse.read -> &lt;> CateloqueService.list.query)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop6" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0045632" testport="//@interimmodels.1/@designmodel/@component.10/@port.0" traceExample="init -> ShopBackend_listorder_renderlist -> ShopBackend_orderquerywire_requester_process -> orderquerywire_req!39 -> orderquerywire_req?39 -> OrdersService_orderquerywire_responder_invoke -> OrdersService_get_ack -> OrdersService_orderreadwire_reader_process -> orderreadwire_req!39 -> orderreadwire_req?39 -> OrdersDB_orderreadwire_readstorage_invoke -> OrdersDB_queryorder_orderreaded -> OrdersDB_orderreadwire_readstorage_process -> orderreadwire_res!39 -> orderreadwire_res?39 -> OrdersService_orderreadwire_reader_Skip -> OrdersService_orderquerywire_responder_process -> orderquerywire_res!39 -> orderquerywire_res?39" exprText="[]  (ShopBackend.listorder.renderlist -> &lt;> OrdersService.get.ack)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.5">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.10/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.5/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.3/@port.1/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop7" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="59" verifyTime="0.0096414" testport="//@interimmodels.1/@designmodel/@component.0/@port.2" traceExample="init -> ShopFrontend_order_purchased -> ShopFrontend_orderwire_publisher_process -> orderwire_pub!93 -> orderwire_pub?93 -> OrdersService_orderlogwire_writer_request -> orderlogwire_req!93 -> orderlogwire_req?93 -> OrdersDB_orderlogwire_writestorage_invoke -> OrdersDB_writeorder_orderwritten -> OrdersDB_orderlogwire_writestorage_process -> orderlogwire_res!93 -> orderlogwire_res?93 -> OrdersService_postorder_check -> OrdersService_postorder_save -> OrdersService_orderlogwire_writer_process -> OrdersService_orderlogwire_writer_Skip -> OrdersService_paywire_requester_process -> paywire_req!93 -> paywire_req?93 -> Payment_paywire_responder_invoke -> Payment_pay_paid -> Payment_paywire_responder_process -> paywire_res!93 -> paywire_res?93 -> OrdersService_paywire_requester_Skip -> OrdersService_shippingwire_requester_process -> shippingwire_req!93 -> shippingwire_req?93 -> ShippingService_shippingwire_responder_invoke -> ShippingService_shippinglogwire_writer_request -> shippinglogwire_req!93 -> shippinglogwire_req?93 -> QueueDB_shippinglogwire_writestorage_invoke -> QueueDB_writequeue_queuewritten -> QueueDB_shippinglogwire_writestorage_process -> shippinglogwire_res!93 -> shippinglogwire_res?93 -> ShippingService_postshipping_posted -> ShippingService_shippinglogwire_writer_process -> ShippingService_shippinglogwire_writer_Skip -> ShippingService_shippingwire_responder_process -> shippingwire_res!93 -> shippingwire_res?93 -> OrdersService_shippingwire_requester_Skip -> OrdersService_orderwire_subscriber_process" exprText="[]  (ShopFrontend.order.purchased -> &lt;> OrdersService.postorder.save)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.6">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.3/@port.0/@events.1" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.0/@port.2/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.6/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.1/@designmodel/@component.3/@port.0" exprText="[]  (OrdersService.postorder.save-> &lt;> paymentgatewayref.commitref.checked)"/>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="NodeJSContainer1" component="//@interimmodels.1/@designmodel/@component.0 //@interimmodels.1/@designmodel/@component.10">
          <port name="port" portNumber="15551" node="//@interimmodels.1/@designmodel/@host.0/@node.0" namedport="//@interimmodels.1/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="15552" node="//@interimmodels.1/@designmodel/@host.0/@node.0" namedport="//@interimmodels.1/@designmodel/@component.0/@port.2"/>
          <port name="port" portNumber="15553" node="//@interimmodels.1/@designmodel/@host.0/@node.0" namedport="//@interimmodels.1/@designmodel/@component.10/@port.0"/>
          <port name="port" portNumber="15554" node="//@interimmodels.1/@designmodel/@host.0/@node.0" namedport="//@interimmodels.1/@designmodel/@component.0/@port.3"/>
          <port name="port" portNumber="15555" node="//@interimmodels.1/@designmodel/@host.0/@node.0" namedport="//@interimmodels.1/@designmodel/@component.0/@port.1"/>
        </node>
        <node name="GoContainer3" component="//@interimmodels.1/@designmodel/@component.1">
          <port name="port" portNumber="80" node="//@interimmodels.1/@designmodel/@host.0/@node.1" namedport="//@interimmodels.1/@designmodel/@component.1/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="SecureServer">
        <node name="GoContainer1" component="//@interimmodels.1/@designmodel/@component.2">
          <port name="port" portNumber="80" node="//@interimmodels.1/@designmodel/@host.1/@node.0" namedport="//@interimmodels.1/@designmodel/@component.2/@port.0" hasFirewall="true"/>
        </node>
        <node name="GoContainer2" component="//@interimmodels.1/@designmodel/@component.6">
          <port name="port" portNumber="80" node="//@interimmodels.1/@designmodel/@host.1/@node.1" namedport="//@interimmodels.1/@designmodel/@component.6/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="LocalServer">
        <node name="JEEContainer1" component="//@interimmodels.1/@designmodel/@component.3 //@interimmodels.1/@designmodel/@component.5">
          <port name="port" portNumber="80" namedport="//@interimmodels.1/@designmodel/@component.3/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true"/>
          <port name="port" portNumber="15561" node="//@interimmodels.1/@designmodel/@host.2/@node.0" namedport="//@interimmodels.1/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15562" node="//@interimmodels.1/@designmodel/@host.2/@node.0" namedport="//@interimmodels.1/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15563" node="//@interimmodels.1/@designmodel/@host.2/@node.0" namedport="//@interimmodels.1/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15564" node="//@interimmodels.1/@designmodel/@host.2/@node.0" namedport="//@interimmodels.1/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15566" node="//@interimmodels.1/@designmodel/@host.2/@node.0" namedport="//@interimmodels.1/@designmodel/@component.3/@port.1"/>
          <port name="port" portNumber="81" node="//@interimmodels.1/@designmodel/@host.2/@node.0" namedport="//@interimmodels.1/@designmodel/@component.3/@port.1"/>
        </node>
        <node name="MySQL1" component="//@interimmodels.1/@designmodel/@component.4">
          <port name="port" portNumber="3306" node="//@interimmodels.1/@designmodel/@host.2/@node.1" namedport="//@interimmodels.1/@designmodel/@component.4/@port.0 //@interimmodels.1/@designmodel/@component.4/@port.1"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node name="JEEContainer4" component="//@interimmodels.1/@designmodel/@component.7 //@interimmodels.1/@designmodel/@component.8">
          <port name="port" portNumber="80" node="//@interimmodels.1/@designmodel/@host.3/@node.0" namedport="//@interimmodels.1/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
          <port name="port" portNumber="15571" node="//@interimmodels.1/@designmodel/@host.3/@node.0" namedport="//@interimmodels.1/@designmodel/@component.7/@port.0"/>
          <port name="port" portNumber="15572" node="//@interimmodels.1/@designmodel/@host.3/@node.0" namedport="//@interimmodels.1/@designmodel/@component.7/@port.0"/>
        </node>
        <node name="MySQL2" component="//@interimmodels.1/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.1/@designmodel/@host.3/@node.1" namedport="//@interimmodels.1/@designmodel/@component.9/@port.0 //@interimmodels.1/@designmodel/@component.9/@port.1"/>
        </node>
      </host>
      <link name="link2" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.0/@node.0/@port.1" target="//@interimmodels.1/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link3" source="//@interimmodels.1/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link4" source="//@interimmodels.1/@designmodel/@host.2/@node.0/@port.2"/>
      <link name="link5" target="//@interimmodels.1/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.0/@node.0/@port.3"/>
      <link name="link9" source="//@interimmodels.1/@designmodel/@host.0/@node.0/@port.4" target="//@interimmodels.1/@designmodel/@host.0/@node.1/@port.0"/>
      <link name="link11" source="//@interimmodels.1/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link12" source="//@interimmodels.1/@designmodel/@host.3/@node.0/@port.2"/>
      <link name="link13" target="//@interimmodels.1/@designmodel/@host.3/@node.1/@port.0"/>
      <link name="link14" target="//@interimmodels.1/@designmodel/@host.3/@node.1/@port.0"/>
      <link name="link16" source="//@interimmodels.1/@designmodel/@host.2/@node.0/@port.5" target="//@interimmodels.1/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.0/@node.0/@port.2" target="//@interimmodels.1/@designmodel/@host.2/@node.0/@port.6"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="2" description="payment - setup-component" nextModel="//@interimmodels.3">
    <designmodel name="interimpayment2">
      <component name="ShopFrontend" type="client,broadcaster" deploymentnode="//@interimmodels.2/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,LeastPriviledge">
        <port name="login" role="//@interimmodels.2/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="submit"/>
        </port>
        <port name="browse" role="//@interimmodels.2/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="read"/>
        </port>
        <port name="order" role="//@interimmodels.2/@designmodel/@connector.9/@role.0" type="broadcast,OutboundPort">
          <events name="purchased"/>
        </port>
        <port name="shop" role="//@interimmodels.2/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="itemadded"/>
        </port>
      </component>
      <component name="CateloqueService" type="server" deploymentnode="//@interimmodels.2/@designmodel/@host.0/@node.1" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="list" role="//@interimmodels.2/@designmodel/@connector.1/@role.1" type="response,InboundPort">
          <events name="query"/>
        </port>
      </component>
      <component name="UserService" type="server" deploymentnode="//@interimmodels.2/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DefenseInDepth,DenialOfService">
        <port name="auth" role="//@interimmodels.2/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="checked"/>
        </port>
      </component>
      <component name="OrdersService" type="client,server,listener,eventconsumer,readendpoint,datawriter,datareader" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization,DenialOfService,DataTampering">
        <port name="postorder" role="//@interimmodels.2/@designmodel/@connector.4/@role.0 //@interimmodels.2/@designmodel/@connector.7/@role.0 //@interimmodels.2/@designmodel/@connector.9/@role.1 //@interimmodels.2/@designmodel/@connector.10/@role.0 //@interimmodels.2/@designmodel/@connector.11/@role.0" type="request,listen,write,OutboundPort,InboundPort,EventProcessorPort">
          <events name="check" next="//@interimmodels.2/@designmodel/@component.3/@port.0/@events.1"/>
          <events name="save"/>
        </port>
        <port name="get" role="//@interimmodels.2/@designmodel/@connector.2/@role.1 //@interimmodels.2/@designmodel/@connector.8/@role.0" type="response,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="ack"/>
        </port>
      </component>
      <component name="OrdersDB" type="repository,datastore" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.1">
        <port name="writeorder" role="//@interimmodels.2/@designmodel/@connector.7/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="orderwritten"/>
        </port>
        <port name="queryorder" role="//@interimmodels.2/@designmodel/@connector.8/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="orderreaded"/>
        </port>
      </component>
      <component name="CartsService" type="server" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="manage" role="//@interimmodels.2/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="saveitem"/>
        </port>
      </component>
      <component name="Payment" type="repository,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.2/@designmodel/@host.1/@node.1" criticalLevel="High" securityCharacters="DefenseInDepth,Compartmentalization">
        <port name="pay" role="//@interimmodels.2/@designmodel/@connector.10/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="paid"/>
        </port>
      </component>
      <component name="ShippingService" type="server,datawriter" deploymentnode="//@interimmodels.2/@designmodel/@host.3/@node.0" securityCharacters="Compartmentalization">
        <port name="postshipping" role="//@interimmodels.2/@designmodel/@connector.4/@role.1 //@interimmodels.2/@designmodel/@connector.6/@role.0" type="response,write,OutboundPort,InboundPort,EventProcessorPort">
          <events name="posted"/>
        </port>
      </component>
      <component name="ShippingWorker" type="readendpoint,datareader" deploymentnode="//@interimmodels.2/@designmodel/@host.3/@node.0">
        <port name="listqueue" role="//@interimmodels.2/@designmodel/@connector.5/@role.0" type="read,OutboundPort,EventProcessorPort">
          <events name="renderqueue"/>
        </port>
      </component>
      <component name="QueueDB" type="repository,datastore" deploymentnode="//@interimmodels.2/@designmodel/@host.3/@node.1">
        <port name="writequeue" role="//@interimmodels.2/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="queuewritten"/>
        </port>
        <port name="readqueue" role="//@interimmodels.2/@designmodel/@connector.5/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="queuereaded"/>
        </port>
      </component>
      <component name="ShopBackend" type="client" deploymentnode="//@interimmodels.2/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface">
        <port name="listorder" role="//@interimmodels.2/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref">
          <events name="checked"/>
        </port>
      </component>
      <connector name="userwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.0"/>
      </connector>
      <connector name="cateloquewire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.1"/>
      </connector>
      <connector name="orderquerywire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.8/@role.0" connector="//@interimmodels.2/@designmodel/@connector.2"/>
      </connector>
      <connector name="cartwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.3"/>
      </connector>
      <connector name="shippingwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.6/@role.0" connector="//@interimmodels.2/@designmodel/@connector.4"/>
      </connector>
      <connector name="queuereadwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.5"/>
        <role name="readstorage" roletype="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.5"/>
      </connector>
      <connector name="shippinglogwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.6"/>
      </connector>
      <connector name="orderlogwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.10/@role.0" connector="//@interimmodels.2/@designmodel/@connector.7"/>
        <role name="writestorage" roletype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.7"/>
      </connector>
      <connector name="orderreadwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.8"/>
        <role name="readstorage" roletype="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.8"/>
      </connector>
      <connector name="orderwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.9"/>
        <role name="subscriber" roletype="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.7/@role.0" connector="//@interimmodels.2/@designmodel/@connector.9"/>
      </connector>
      <connector name="paywire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.4/@role.0" connector="//@interimmodels.2/@designmodel/@connector.10"/>
        <role name="writestorage" roletype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.10"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" connector="//@interimmodels.2/@designmodel/@connector.11">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="in" connector="//@interimmodels.2/@designmodel/@connector.11">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.2/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.2/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.2/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.2/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.4" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.2/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.2/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.2/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.2/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.2/@designmodel/@archstyle.4/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.2/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.2/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.2/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.2/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.2/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.2/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.2/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.2/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="15" verifyTime="0.0056955" testport="//@interimmodels.2/@designmodel/@component.0/@port.3" traceExample="init -> ShopFrontend_shop_itemadded -> ShopFrontend_cartwire_requester_process -> cartwire_req!48 -> cartwire_req?48 -> CartsService_cartwire_responder_invoke -> CartsService_manage_saveitem -> CartsService_cartwire_responder_process -> cartwire_res!48 -> cartwire_res?48" exprText="[]  (ShopFrontend.shop.itemadded -> &lt;> CartsService.manage.saveitem)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.0/@port.3/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="63" verifyTime="0.0112015" testport="//@interimmodels.2/@designmodel/@component.0/@port.2" traceExample="init -> ShopFrontend_order_purchased -> ShopFrontend_orderwire_publisher_process -> orderwire_pub!79 -> orderwire_pub?79 -> OrdersService_orderlogwire_writer_request -> orderlogwire_req!79 -> orderlogwire_req?79 -> OrdersDB_orderlogwire_writestorage_invoke -> OrdersDB_writeorder_orderwritten -> OrdersDB_orderlogwire_writestorage_process -> orderlogwire_res!79 -> orderlogwire_res?79 -> OrdersService_postorder_check -> OrdersService_postorder_save -> OrdersService_orderlogwire_writer_process -> OrdersService_orderlogwire_writer_Skip -> OrdersService_paywire_requester_process -> paywire_req!79 -> paywire_req?79 -> Payment_paywire_responder_invoke -> Payment_pay_paid -> Payment_paywire_responder_process -> paywire_res!79 -> paywire_res?79 -> OrdersService_paywire_requester_Skip -> OrdersService_shippingwire_requester_process -> shippingwire_req!79 -> shippingwire_req?79 -> ShippingService_shippingwire_responder_invoke -> ShippingService_shippinglogwire_writer_request -> shippinglogwire_req!79 -> shippinglogwire_req?79 -> QueueDB_shippinglogwire_writestorage_invoke -> QueueDB_writequeue_queuewritten -> QueueDB_shippinglogwire_writestorage_process -> shippinglogwire_res!79 -> shippinglogwire_res?79 -> ShippingService_postshipping_posted -> ShippingService_shippinglogwire_writer_process -> ShippingService_shippinglogwire_writer_Skip -> ShippingService_shippingwire_responder_process -> shippingwire_res!79 -> shippingwire_res?79 -> OrdersService_shippingwire_requester_Skip -> OrdersService_orderwire_subscriber_process" exprText="[]  (Payment.pay.paid -> &lt;> ShippingService.postshipping.posted)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.2/@designmodel" visitedStates="10" verifyTime="0.005912" testport="//@interimmodels.2/@designmodel/@component.0/@port.3" traceExample="init -> ShopFrontend_shop_itemadded -> ShopFrontend_cartwire_requester_process -> cartwire_req!51 -> cartwire_req?51 -> CartsService_cartwire_responder_invoke -> CartsService_manage_saveitem -> CartsService_cartwire_responder_process -> cartwire_res!51 -> cartwire_res?51" exprText="[]  (OrdersService.postorder.save -> &lt;> Payment.pay.paid)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.3/@port.0/@events.1" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="15" verifyTime="0.0511383" testport="//@interimmodels.2/@designmodel/@component.0/@port.0" traceExample="init -> ShopFrontend_login_submit -> ShopFrontend_userwire_requester_process -> userwire_req!38 -> userwire_req?38 -> UserService_userwire_responder_invoke -> UserService_auth_checked -> UserService_userwire_responder_process -> userwire_res!38 -> userwire_res?38" exprText="[]  (ShopFrontend.login.submit -> &lt;> UserService.auth.checked)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.2/@designmodel" counterExample="init -> ShopFrontend_browse_read -> ShopFrontend_cateloquewire_requester_process -> cateloquewire_req!62 -> cateloquewire_req?62 -> CateloqueService_cateloquewire_responder_invoke -> CateloqueService_list_query -> CateloqueService_cateloquewire_responder_process -> cateloquewire_res!62 -> cateloquewire_res?62" visitedStates="24" verifyTime="0.005226199999999999" testport="//@interimmodels.2/@designmodel/@component.0/@port.1" traceExample="init -> ShopFrontend_browse_read -> ShopFrontend_cateloquewire_requester_process -> cateloquewire_req!91 -> cateloquewire_req?91 -> CateloqueService_cateloquewire_responder_invoke -> CateloqueService_list_query -> CateloqueService_cateloquewire_responder_process -> cateloquewire_res!91 -> cateloquewire_res?91" exprText="[]  (&lt;> ShopFrontend.browse.read -> &lt;> CateloqueService.list.query)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop6" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0045632" testport="//@interimmodels.2/@designmodel/@component.10/@port.0" traceExample="init -> ShopBackend_listorder_renderlist -> ShopBackend_orderquerywire_requester_process -> orderquerywire_req!39 -> orderquerywire_req?39 -> OrdersService_orderquerywire_responder_invoke -> OrdersService_get_ack -> OrdersService_orderreadwire_reader_process -> orderreadwire_req!39 -> orderreadwire_req?39 -> OrdersDB_orderreadwire_readstorage_invoke -> OrdersDB_queryorder_orderreaded -> OrdersDB_orderreadwire_readstorage_process -> orderreadwire_res!39 -> orderreadwire_res?39 -> OrdersService_orderreadwire_reader_Skip -> OrdersService_orderquerywire_responder_process -> orderquerywire_res!39 -> orderquerywire_res?39" exprText="[]  (ShopBackend.listorder.renderlist -> &lt;> OrdersService.get.ack)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.5">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.10/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.5/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.3/@port.1/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop7" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="59" verifyTime="0.0096414" testport="//@interimmodels.2/@designmodel/@component.0/@port.2" traceExample="init -> ShopFrontend_order_purchased -> ShopFrontend_orderwire_publisher_process -> orderwire_pub!93 -> orderwire_pub?93 -> OrdersService_orderlogwire_writer_request -> orderlogwire_req!93 -> orderlogwire_req?93 -> OrdersDB_orderlogwire_writestorage_invoke -> OrdersDB_writeorder_orderwritten -> OrdersDB_orderlogwire_writestorage_process -> orderlogwire_res!93 -> orderlogwire_res?93 -> OrdersService_postorder_check -> OrdersService_postorder_save -> OrdersService_orderlogwire_writer_process -> OrdersService_orderlogwire_writer_Skip -> OrdersService_paywire_requester_process -> paywire_req!93 -> paywire_req?93 -> Payment_paywire_responder_invoke -> Payment_pay_paid -> Payment_paywire_responder_process -> paywire_res!93 -> paywire_res?93 -> OrdersService_paywire_requester_Skip -> OrdersService_shippingwire_requester_process -> shippingwire_req!93 -> shippingwire_req?93 -> ShippingService_shippingwire_responder_invoke -> ShippingService_shippinglogwire_writer_request -> shippinglogwire_req!93 -> shippinglogwire_req?93 -> QueueDB_shippinglogwire_writestorage_invoke -> QueueDB_writequeue_queuewritten -> QueueDB_shippinglogwire_writestorage_process -> shippinglogwire_res!93 -> shippinglogwire_res?93 -> ShippingService_postshipping_posted -> ShippingService_shippinglogwire_writer_process -> ShippingService_shippinglogwire_writer_Skip -> ShippingService_shippingwire_responder_process -> shippingwire_res!93 -> shippingwire_res?93 -> OrdersService_shippingwire_requester_Skip -> OrdersService_orderwire_subscriber_process" exprText="[]  (ShopFrontend.order.purchased -> &lt;> OrdersService.postorder.save)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.6">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.3/@port.0/@events.1" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.0/@port.2/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.6/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.2/@designmodel/@component.3/@port.0" exprText="[]  (OrdersService.postorder.save-> &lt;> paymentgatewayref.commitref.checked)"/>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="NodeJSContainer1" component="//@interimmodels.2/@designmodel/@component.0 //@interimmodels.2/@designmodel/@component.10">
          <port name="port" portNumber="15551" node="//@interimmodels.2/@designmodel/@host.0/@node.0" namedport="//@interimmodels.2/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="15552" node="//@interimmodels.2/@designmodel/@host.0/@node.0" namedport="//@interimmodels.2/@designmodel/@component.0/@port.2"/>
          <port name="port" portNumber="15553" node="//@interimmodels.2/@designmodel/@host.0/@node.0" namedport="//@interimmodels.2/@designmodel/@component.10/@port.0"/>
          <port name="port" portNumber="15554" node="//@interimmodels.2/@designmodel/@host.0/@node.0" namedport="//@interimmodels.2/@designmodel/@component.0/@port.3"/>
          <port name="port" portNumber="15555" node="//@interimmodels.2/@designmodel/@host.0/@node.0" namedport="//@interimmodels.2/@designmodel/@component.0/@port.1"/>
        </node>
        <node name="GoContainer3" component="//@interimmodels.2/@designmodel/@component.1">
          <port name="port" portNumber="80" node="//@interimmodels.2/@designmodel/@host.0/@node.1" namedport="//@interimmodels.2/@designmodel/@component.1/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="SecureServer">
        <node name="GoContainer1" component="//@interimmodels.2/@designmodel/@component.2">
          <port name="port" portNumber="80" node="//@interimmodels.2/@designmodel/@host.1/@node.0" namedport="//@interimmodels.2/@designmodel/@component.2/@port.0" hasFirewall="true"/>
        </node>
        <node name="GoContainer2" component="//@interimmodels.2/@designmodel/@component.6">
          <port name="port" portNumber="80" node="//@interimmodels.2/@designmodel/@host.1/@node.1" namedport="//@interimmodels.2/@designmodel/@component.6/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="LocalServer">
        <node name="JEEContainer1" component="//@interimmodels.2/@designmodel/@component.3 //@interimmodels.2/@designmodel/@component.5">
          <port name="port" portNumber="80" namedport="//@interimmodels.2/@designmodel/@component.3/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true"/>
          <port name="port" portNumber="15561" node="//@interimmodels.2/@designmodel/@host.2/@node.0" namedport="//@interimmodels.2/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15562" node="//@interimmodels.2/@designmodel/@host.2/@node.0" namedport="//@interimmodels.2/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15563" node="//@interimmodels.2/@designmodel/@host.2/@node.0" namedport="//@interimmodels.2/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15564" node="//@interimmodels.2/@designmodel/@host.2/@node.0" namedport="//@interimmodels.2/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15566" node="//@interimmodels.2/@designmodel/@host.2/@node.0" namedport="//@interimmodels.2/@designmodel/@component.3/@port.1"/>
          <port name="port" portNumber="81" node="//@interimmodels.2/@designmodel/@host.2/@node.0" namedport="//@interimmodels.2/@designmodel/@component.3/@port.1"/>
        </node>
        <node name="MySQL1" component="//@interimmodels.2/@designmodel/@component.4">
          <port name="port" portNumber="3306" node="//@interimmodels.2/@designmodel/@host.2/@node.1" namedport="//@interimmodels.2/@designmodel/@component.4/@port.0 //@interimmodels.2/@designmodel/@component.4/@port.1"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node name="JEEContainer4" component="//@interimmodels.2/@designmodel/@component.7 //@interimmodels.2/@designmodel/@component.8">
          <port name="port" portNumber="80" node="//@interimmodels.2/@designmodel/@host.3/@node.0" namedport="//@interimmodels.2/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
          <port name="port" portNumber="15571" node="//@interimmodels.2/@designmodel/@host.3/@node.0" namedport="//@interimmodels.2/@designmodel/@component.7/@port.0"/>
          <port name="port" portNumber="15572" node="//@interimmodels.2/@designmodel/@host.3/@node.0" namedport="//@interimmodels.2/@designmodel/@component.7/@port.0"/>
        </node>
        <node name="MySQL2" component="//@interimmodels.2/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.2/@designmodel/@host.3/@node.1" namedport="//@interimmodels.2/@designmodel/@component.9/@port.0 //@interimmodels.2/@designmodel/@component.9/@port.1"/>
        </node>
      </host>
      <link name="link2" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.0/@node.0/@port.1" target="//@interimmodels.2/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link3" source="//@interimmodels.2/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link4" source="//@interimmodels.2/@designmodel/@host.2/@node.0/@port.2"/>
      <link name="link5" target="//@interimmodels.2/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.0/@node.0/@port.3"/>
      <link name="link9" source="//@interimmodels.2/@designmodel/@host.0/@node.0/@port.4" target="//@interimmodels.2/@designmodel/@host.0/@node.1/@port.0"/>
      <link name="link11" source="//@interimmodels.2/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link12" source="//@interimmodels.2/@designmodel/@host.3/@node.0/@port.2"/>
      <link name="link13" target="//@interimmodels.2/@designmodel/@host.3/@node.1/@port.0"/>
      <link name="link14" target="//@interimmodels.2/@designmodel/@host.3/@node.1/@port.0"/>
      <link name="link16" source="//@interimmodels.2/@designmodel/@host.2/@node.0/@port.5" target="//@interimmodels.2/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.0/@node.0/@port.2" target="//@interimmodels.2/@designmodel/@host.2/@node.0/@port.6"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="3" description="payment - remove-connector" nextModel="//@interimmodels.4">
    <designmodel name="interimpayment3">
      <component name="ShopFrontend" type="client,broadcaster" deploymentnode="//@interimmodels.3/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,LeastPriviledge">
        <port name="login" role="//@interimmodels.3/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="submit"/>
        </port>
        <port name="browse" role="//@interimmodels.3/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="read"/>
        </port>
        <port name="order" role="//@interimmodels.3/@designmodel/@connector.9/@role.0" type="broadcast,OutboundPort">
          <events name="purchased"/>
        </port>
        <port name="shop" role="//@interimmodels.3/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="itemadded"/>
        </port>
      </component>
      <component name="CateloqueService" type="server" deploymentnode="//@interimmodels.3/@designmodel/@host.0/@node.1" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="list" role="//@interimmodels.3/@designmodel/@connector.1/@role.1" type="response,InboundPort">
          <events name="query"/>
        </port>
      </component>
      <component name="UserService" type="server" deploymentnode="//@interimmodels.3/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DefenseInDepth,DenialOfService">
        <port name="auth" role="//@interimmodels.3/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="checked"/>
        </port>
      </component>
      <component name="OrdersService" type="client,server,listener,eventconsumer,readendpoint,datawriter,datareader" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization,DenialOfService,DataTampering">
        <port name="postorder" role="//@interimmodels.3/@designmodel/@connector.4/@role.0 //@interimmodels.3/@designmodel/@connector.7/@role.0 //@interimmodels.3/@designmodel/@connector.9/@role.1 //@interimmodels.3/@designmodel/@connector.11/@role.0" type="request,listen,write,OutboundPort,InboundPort,EventProcessorPort">
          <events name="check" next="//@interimmodels.3/@designmodel/@component.3/@port.0/@events.1"/>
          <events name="save"/>
        </port>
        <port name="get" role="//@interimmodels.3/@designmodel/@connector.2/@role.1 //@interimmodels.3/@designmodel/@connector.8/@role.0" type="response,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="ack"/>
        </port>
      </component>
      <component name="OrdersDB" type="repository,datastore" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.1">
        <port name="writeorder" role="//@interimmodels.3/@designmodel/@connector.7/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="orderwritten"/>
        </port>
        <port name="queryorder" role="//@interimmodels.3/@designmodel/@connector.8/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="orderreaded"/>
        </port>
      </component>
      <component name="CartsService" type="server" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="manage" role="//@interimmodels.3/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="saveitem"/>
        </port>
      </component>
      <component name="Payment" type="repository,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.3/@designmodel/@host.1/@node.1" criticalLevel="High" securityCharacters="DefenseInDepth,Compartmentalization">
        <port name="pay" type="store,InboundPort,TamperingProofPort">
          <events name="paid"/>
        </port>
      </component>
      <component name="ShippingService" type="server,datawriter" deploymentnode="//@interimmodels.3/@designmodel/@host.3/@node.0" securityCharacters="Compartmentalization">
        <port name="postshipping" role="//@interimmodels.3/@designmodel/@connector.4/@role.1 //@interimmodels.3/@designmodel/@connector.6/@role.0" type="response,write,OutboundPort,InboundPort,EventProcessorPort">
          <events name="posted"/>
        </port>
      </component>
      <component name="ShippingWorker" type="readendpoint,datareader" deploymentnode="//@interimmodels.3/@designmodel/@host.3/@node.0">
        <port name="listqueue" role="//@interimmodels.3/@designmodel/@connector.5/@role.0" type="read,OutboundPort,EventProcessorPort">
          <events name="renderqueue"/>
        </port>
      </component>
      <component name="QueueDB" type="repository,datastore" deploymentnode="//@interimmodels.3/@designmodel/@host.3/@node.1">
        <port name="writequeue" role="//@interimmodels.3/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="queuewritten"/>
        </port>
        <port name="readqueue" role="//@interimmodels.3/@designmodel/@connector.5/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="queuereaded"/>
        </port>
      </component>
      <component name="ShopBackend" type="client" deploymentnode="//@interimmodels.3/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface">
        <port name="listorder" role="//@interimmodels.3/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref">
          <events name="checked"/>
        </port>
      </component>
      <connector name="userwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.0"/>
      </connector>
      <connector name="cateloquewire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.1"/>
      </connector>
      <connector name="orderquerywire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.8/@role.0" connector="//@interimmodels.3/@designmodel/@connector.2"/>
      </connector>
      <connector name="cartwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.3"/>
      </connector>
      <connector name="shippingwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.6/@role.0" connector="//@interimmodels.3/@designmodel/@connector.4"/>
      </connector>
      <connector name="queuereadwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.5"/>
        <role name="readstorage" roletype="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.5"/>
      </connector>
      <connector name="shippinglogwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.6"/>
      </connector>
      <connector name="orderlogwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.11/@role.0" connector="//@interimmodels.3/@designmodel/@connector.7"/>
        <role name="writestorage" roletype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.7"/>
      </connector>
      <connector name="orderreadwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.8"/>
        <role name="readstorage" roletype="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.8"/>
      </connector>
      <connector name="orderwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.9"/>
        <role name="subscriber" roletype="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.7/@role.0" connector="//@interimmodels.3/@designmodel/@connector.9"/>
      </connector>
      <connector name="paywiretoremove" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writertoremove" roletype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.10"/>
        <role name="writestoragetoremove" roletype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.10"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.4/@role.0" connector="//@interimmodels.3/@designmodel/@connector.11">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="in" connector="//@interimmodels.3/@designmodel/@connector.11">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.3/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.3/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.3/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.3/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.4" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.3/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.3/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.3/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.3/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.3/@designmodel/@archstyle.4/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.3/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.3/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.3/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.3/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.3/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.3/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.3/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.3/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="15" verifyTime="0.0056955" testport="//@interimmodels.3/@designmodel/@component.0/@port.3" traceExample="init -> ShopFrontend_shop_itemadded -> ShopFrontend_cartwire_requester_process -> cartwire_req!48 -> cartwire_req?48 -> CartsService_cartwire_responder_invoke -> CartsService_manage_saveitem -> CartsService_cartwire_responder_process -> cartwire_res!48 -> cartwire_res?48" exprText="[]  (ShopFrontend.shop.itemadded -> &lt;> CartsService.manage.saveitem)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.0/@port.3/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="63" verifyTime="0.0112015" testport="//@interimmodels.3/@designmodel/@component.0/@port.2" traceExample="init -> ShopFrontend_order_purchased -> ShopFrontend_orderwire_publisher_process -> orderwire_pub!79 -> orderwire_pub?79 -> OrdersService_orderlogwire_writer_request -> orderlogwire_req!79 -> orderlogwire_req?79 -> OrdersDB_orderlogwire_writestorage_invoke -> OrdersDB_writeorder_orderwritten -> OrdersDB_orderlogwire_writestorage_process -> orderlogwire_res!79 -> orderlogwire_res?79 -> OrdersService_postorder_check -> OrdersService_postorder_save -> OrdersService_orderlogwire_writer_process -> OrdersService_orderlogwire_writer_Skip -> OrdersService_paywire_requester_process -> paywire_req!79 -> paywire_req?79 -> Payment_paywire_responder_invoke -> Payment_pay_paid -> Payment_paywire_responder_process -> paywire_res!79 -> paywire_res?79 -> OrdersService_paywire_requester_Skip -> OrdersService_shippingwire_requester_process -> shippingwire_req!79 -> shippingwire_req?79 -> ShippingService_shippingwire_responder_invoke -> ShippingService_shippinglogwire_writer_request -> shippinglogwire_req!79 -> shippinglogwire_req?79 -> QueueDB_shippinglogwire_writestorage_invoke -> QueueDB_writequeue_queuewritten -> QueueDB_shippinglogwire_writestorage_process -> shippinglogwire_res!79 -> shippinglogwire_res?79 -> ShippingService_postshipping_posted -> ShippingService_shippinglogwire_writer_process -> ShippingService_shippinglogwire_writer_Skip -> ShippingService_shippingwire_responder_process -> shippingwire_res!79 -> shippingwire_res?79 -> OrdersService_shippingwire_requester_Skip -> OrdersService_orderwire_subscriber_process" exprText="[]  (Payment.pay.paid -> &lt;> ShippingService.postshipping.posted)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.3/@designmodel" visitedStates="10" verifyTime="0.005912" testport="//@interimmodels.3/@designmodel/@component.0/@port.3" traceExample="init -> ShopFrontend_shop_itemadded -> ShopFrontend_cartwire_requester_process -> cartwire_req!51 -> cartwire_req?51 -> CartsService_cartwire_responder_invoke -> CartsService_manage_saveitem -> CartsService_cartwire_responder_process -> cartwire_res!51 -> cartwire_res?51" exprText="[]  (OrdersService.postorder.save -> &lt;> Payment.pay.paid)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.3/@port.0/@events.1" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="15" verifyTime="0.0511383" testport="//@interimmodels.3/@designmodel/@component.0/@port.0" traceExample="init -> ShopFrontend_login_submit -> ShopFrontend_userwire_requester_process -> userwire_req!38 -> userwire_req?38 -> UserService_userwire_responder_invoke -> UserService_auth_checked -> UserService_userwire_responder_process -> userwire_res!38 -> userwire_res?38" exprText="[]  (ShopFrontend.login.submit -> &lt;> UserService.auth.checked)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.3/@designmodel" counterExample="init -> ShopFrontend_browse_read -> ShopFrontend_cateloquewire_requester_process -> cateloquewire_req!62 -> cateloquewire_req?62 -> CateloqueService_cateloquewire_responder_invoke -> CateloqueService_list_query -> CateloqueService_cateloquewire_responder_process -> cateloquewire_res!62 -> cateloquewire_res?62" visitedStates="24" verifyTime="0.005226199999999999" testport="//@interimmodels.3/@designmodel/@component.0/@port.1" traceExample="init -> ShopFrontend_browse_read -> ShopFrontend_cateloquewire_requester_process -> cateloquewire_req!91 -> cateloquewire_req?91 -> CateloqueService_cateloquewire_responder_invoke -> CateloqueService_list_query -> CateloqueService_cateloquewire_responder_process -> cateloquewire_res!91 -> cateloquewire_res?91" exprText="[]  (&lt;> ShopFrontend.browse.read -> &lt;> CateloqueService.list.query)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop6" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0045632" testport="//@interimmodels.3/@designmodel/@component.10/@port.0" traceExample="init -> ShopBackend_listorder_renderlist -> ShopBackend_orderquerywire_requester_process -> orderquerywire_req!39 -> orderquerywire_req?39 -> OrdersService_orderquerywire_responder_invoke -> OrdersService_get_ack -> OrdersService_orderreadwire_reader_process -> orderreadwire_req!39 -> orderreadwire_req?39 -> OrdersDB_orderreadwire_readstorage_invoke -> OrdersDB_queryorder_orderreaded -> OrdersDB_orderreadwire_readstorage_process -> orderreadwire_res!39 -> orderreadwire_res?39 -> OrdersService_orderreadwire_reader_Skip -> OrdersService_orderquerywire_responder_process -> orderquerywire_res!39 -> orderquerywire_res?39" exprText="[]  (ShopBackend.listorder.renderlist -> &lt;> OrdersService.get.ack)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.5">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.10/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.5/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.3/@port.1/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop7" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="59" verifyTime="0.0096414" testport="//@interimmodels.3/@designmodel/@component.0/@port.2" traceExample="init -> ShopFrontend_order_purchased -> ShopFrontend_orderwire_publisher_process -> orderwire_pub!93 -> orderwire_pub?93 -> OrdersService_orderlogwire_writer_request -> orderlogwire_req!93 -> orderlogwire_req?93 -> OrdersDB_orderlogwire_writestorage_invoke -> OrdersDB_writeorder_orderwritten -> OrdersDB_orderlogwire_writestorage_process -> orderlogwire_res!93 -> orderlogwire_res?93 -> OrdersService_postorder_check -> OrdersService_postorder_save -> OrdersService_orderlogwire_writer_process -> OrdersService_orderlogwire_writer_Skip -> OrdersService_paywire_requester_process -> paywire_req!93 -> paywire_req?93 -> Payment_paywire_responder_invoke -> Payment_pay_paid -> Payment_paywire_responder_process -> paywire_res!93 -> paywire_res?93 -> OrdersService_paywire_requester_Skip -> OrdersService_shippingwire_requester_process -> shippingwire_req!93 -> shippingwire_req?93 -> ShippingService_shippingwire_responder_invoke -> ShippingService_shippinglogwire_writer_request -> shippinglogwire_req!93 -> shippinglogwire_req?93 -> QueueDB_shippinglogwire_writestorage_invoke -> QueueDB_writequeue_queuewritten -> QueueDB_shippinglogwire_writestorage_process -> shippinglogwire_res!93 -> shippinglogwire_res?93 -> ShippingService_postshipping_posted -> ShippingService_shippinglogwire_writer_process -> ShippingService_shippinglogwire_writer_Skip -> ShippingService_shippingwire_responder_process -> shippingwire_res!93 -> shippingwire_res?93 -> OrdersService_shippingwire_requester_Skip -> OrdersService_orderwire_subscriber_process" exprText="[]  (ShopFrontend.order.purchased -> &lt;> OrdersService.postorder.save)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.6">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.3/@port.0/@events.1" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.0/@port.2/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.6/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.3/@designmodel/@component.3/@port.0" exprText="[]  (OrdersService.postorder.save-> &lt;> paymentgatewayref.commitref.checked)"/>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="NodeJSContainer1" component="//@interimmodels.3/@designmodel/@component.0 //@interimmodels.3/@designmodel/@component.10">
          <port name="port" portNumber="15551" node="//@interimmodels.3/@designmodel/@host.0/@node.0" namedport="//@interimmodels.3/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="15552" node="//@interimmodels.3/@designmodel/@host.0/@node.0" namedport="//@interimmodels.3/@designmodel/@component.0/@port.2"/>
          <port name="port" portNumber="15553" node="//@interimmodels.3/@designmodel/@host.0/@node.0" namedport="//@interimmodels.3/@designmodel/@component.10/@port.0"/>
          <port name="port" portNumber="15554" node="//@interimmodels.3/@designmodel/@host.0/@node.0" namedport="//@interimmodels.3/@designmodel/@component.0/@port.3"/>
          <port name="port" portNumber="15555" node="//@interimmodels.3/@designmodel/@host.0/@node.0" namedport="//@interimmodels.3/@designmodel/@component.0/@port.1"/>
        </node>
        <node name="GoContainer3" component="//@interimmodels.3/@designmodel/@component.1">
          <port name="port" portNumber="80" node="//@interimmodels.3/@designmodel/@host.0/@node.1" namedport="//@interimmodels.3/@designmodel/@component.1/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="SecureServer">
        <node name="GoContainer1" component="//@interimmodels.3/@designmodel/@component.2">
          <port name="port" portNumber="80" node="//@interimmodels.3/@designmodel/@host.1/@node.0" namedport="//@interimmodels.3/@designmodel/@component.2/@port.0" hasFirewall="true"/>
        </node>
        <node name="GoContainer2" component="//@interimmodels.3/@designmodel/@component.6">
          <port name="port" portNumber="80" node="//@interimmodels.3/@designmodel/@host.1/@node.1" namedport="//@interimmodels.3/@designmodel/@component.6/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="LocalServer">
        <node name="JEEContainer1" component="//@interimmodels.3/@designmodel/@component.3 //@interimmodels.3/@designmodel/@component.5">
          <port name="port" portNumber="80" namedport="//@interimmodels.3/@designmodel/@component.3/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true"/>
          <port name="port" portNumber="15561" node="//@interimmodels.3/@designmodel/@host.2/@node.0" namedport="//@interimmodels.3/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15562" node="//@interimmodels.3/@designmodel/@host.2/@node.0" namedport="//@interimmodels.3/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15563" node="//@interimmodels.3/@designmodel/@host.2/@node.0" namedport="//@interimmodels.3/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15564" node="//@interimmodels.3/@designmodel/@host.2/@node.0" namedport="//@interimmodels.3/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15566" node="//@interimmodels.3/@designmodel/@host.2/@node.0" namedport="//@interimmodels.3/@designmodel/@component.3/@port.1"/>
          <port name="port" portNumber="81" node="//@interimmodels.3/@designmodel/@host.2/@node.0" namedport="//@interimmodels.3/@designmodel/@component.3/@port.1"/>
        </node>
        <node name="MySQL1" component="//@interimmodels.3/@designmodel/@component.4">
          <port name="port" portNumber="3306" node="//@interimmodels.3/@designmodel/@host.2/@node.1" namedport="//@interimmodels.3/@designmodel/@component.4/@port.0 //@interimmodels.3/@designmodel/@component.4/@port.1"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node name="JEEContainer4" component="//@interimmodels.3/@designmodel/@component.7 //@interimmodels.3/@designmodel/@component.8">
          <port name="port" portNumber="80" node="//@interimmodels.3/@designmodel/@host.3/@node.0" namedport="//@interimmodels.3/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
          <port name="port" portNumber="15571" node="//@interimmodels.3/@designmodel/@host.3/@node.0" namedport="//@interimmodels.3/@designmodel/@component.7/@port.0"/>
          <port name="port" portNumber="15572" node="//@interimmodels.3/@designmodel/@host.3/@node.0" namedport="//@interimmodels.3/@designmodel/@component.7/@port.0"/>
        </node>
        <node name="MySQL2" component="//@interimmodels.3/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.3/@designmodel/@host.3/@node.1" namedport="//@interimmodels.3/@designmodel/@component.9/@port.0 //@interimmodels.3/@designmodel/@component.9/@port.1"/>
        </node>
      </host>
      <link name="link2" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.0/@node.0/@port.1" target="//@interimmodels.3/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link3" source="//@interimmodels.3/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link4" source="//@interimmodels.3/@designmodel/@host.2/@node.0/@port.2"/>
      <link name="link5" target="//@interimmodels.3/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.0/@node.0/@port.3"/>
      <link name="link9" source="//@interimmodels.3/@designmodel/@host.0/@node.0/@port.4" target="//@interimmodels.3/@designmodel/@host.0/@node.1/@port.0"/>
      <link name="link11" source="//@interimmodels.3/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link12" source="//@interimmodels.3/@designmodel/@host.3/@node.0/@port.2"/>
      <link name="link13" target="//@interimmodels.3/@designmodel/@host.3/@node.1/@port.0"/>
      <link name="link14" target="//@interimmodels.3/@designmodel/@host.3/@node.1/@port.0"/>
      <link name="link16" source="//@interimmodels.3/@designmodel/@host.2/@node.0/@port.5" target="//@interimmodels.3/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.0/@node.0/@port.2" target="//@interimmodels.3/@designmodel/@host.2/@node.0/@port.6"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="4" description="payment - establish-link" nextModel="//@interimmodels.5">
    <designmodel name="interimpayment4">
      <component name="ShopFrontend" type="client,broadcaster" deploymentnode="//@interimmodels.4/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,LeastPriviledge">
        <port name="login" role="//@interimmodels.4/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="submit"/>
        </port>
        <port name="browse" role="//@interimmodels.4/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="read"/>
        </port>
        <port name="order" role="//@interimmodels.4/@designmodel/@connector.9/@role.0" type="broadcast,OutboundPort">
          <events name="purchased"/>
        </port>
        <port name="shop" role="//@interimmodels.4/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="itemadded"/>
        </port>
      </component>
      <component name="CateloqueService" type="server" deploymentnode="//@interimmodels.4/@designmodel/@host.0/@node.1" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="list" role="//@interimmodels.4/@designmodel/@connector.1/@role.1" type="response,InboundPort">
          <events name="query"/>
        </port>
      </component>
      <component name="UserService" type="server" deploymentnode="//@interimmodels.4/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DefenseInDepth,DenialOfService">
        <port name="auth" role="//@interimmodels.4/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="checked"/>
        </port>
      </component>
      <component name="OrdersService" type="client,server,listener,eventconsumer,readendpoint,datawriter,datareader" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization,DenialOfService,DataTampering">
        <port name="postorder" role="//@interimmodels.4/@designmodel/@connector.4/@role.0 //@interimmodels.4/@designmodel/@connector.7/@role.0 //@interimmodels.4/@designmodel/@connector.9/@role.1 //@interimmodels.4/@designmodel/@connector.11/@role.0" type="request,listen,write,OutboundPort,InboundPort,EventProcessorPort">
          <events name="check" next="//@interimmodels.4/@designmodel/@component.3/@port.0/@events.1"/>
          <events name="save"/>
        </port>
        <port name="get" role="//@interimmodels.4/@designmodel/@connector.2/@role.1 //@interimmodels.4/@designmodel/@connector.8/@role.0" type="response,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="ack"/>
        </port>
      </component>
      <component name="OrdersDB" type="repository,datastore" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.1">
        <port name="writeorder" role="//@interimmodels.4/@designmodel/@connector.7/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="orderwritten"/>
        </port>
        <port name="queryorder" role="//@interimmodels.4/@designmodel/@connector.8/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="orderreaded"/>
        </port>
      </component>
      <component name="CartsService" type="server" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="manage" role="//@interimmodels.4/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="saveitem"/>
        </port>
      </component>
      <component name="Payment" type="repository,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.4/@designmodel/@host.1/@node.1" criticalLevel="High" securityCharacters="DefenseInDepth,Compartmentalization">
        <port name="pay" type="store,InboundPort,TamperingProofPort">
          <events name="paid"/>
        </port>
      </component>
      <component name="ShippingService" type="server,datawriter" deploymentnode="//@interimmodels.4/@designmodel/@host.3/@node.0" securityCharacters="Compartmentalization">
        <port name="postshipping" role="//@interimmodels.4/@designmodel/@connector.4/@role.1 //@interimmodels.4/@designmodel/@connector.6/@role.0" type="response,write,OutboundPort,InboundPort,EventProcessorPort">
          <events name="posted"/>
        </port>
      </component>
      <component name="ShippingWorker" type="readendpoint,datareader" deploymentnode="//@interimmodels.4/@designmodel/@host.3/@node.0">
        <port name="listqueue" role="//@interimmodels.4/@designmodel/@connector.5/@role.0" type="read,OutboundPort,EventProcessorPort">
          <events name="renderqueue"/>
        </port>
      </component>
      <component name="QueueDB" type="repository,datastore" deploymentnode="//@interimmodels.4/@designmodel/@host.3/@node.1">
        <port name="writequeue" role="//@interimmodels.4/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="queuewritten"/>
        </port>
        <port name="readqueue" role="//@interimmodels.4/@designmodel/@connector.5/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="queuereaded"/>
        </port>
      </component>
      <component name="ShopBackend" type="client" deploymentnode="//@interimmodels.4/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface">
        <port name="listorder" role="//@interimmodels.4/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref" role="//@interimmodels.4/@designmodel/@connector.11/@role.1">
          <events name="checked"/>
        </port>
      </component>
      <connector name="userwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.0"/>
      </connector>
      <connector name="cateloquewire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.1"/>
      </connector>
      <connector name="orderquerywire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.8/@role.0" connector="//@interimmodels.4/@designmodel/@connector.2"/>
      </connector>
      <connector name="cartwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.3"/>
      </connector>
      <connector name="shippingwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.6/@role.0" connector="//@interimmodels.4/@designmodel/@connector.4"/>
      </connector>
      <connector name="queuereadwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.5"/>
        <role name="readstorage" roletype="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.5"/>
      </connector>
      <connector name="shippinglogwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.6"/>
      </connector>
      <connector name="orderlogwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.11/@role.0" connector="//@interimmodels.4/@designmodel/@connector.7"/>
        <role name="writestorage" roletype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.7"/>
      </connector>
      <connector name="orderreadwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.8"/>
        <role name="readstorage" roletype="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.8"/>
      </connector>
      <connector name="orderwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.9"/>
        <role name="subscriber" roletype="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.7/@role.0" connector="//@interimmodels.4/@designmodel/@connector.9"/>
      </connector>
      <connector name="paywiretoremove" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writertoremove" roletype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.10"/>
        <role name="writestoragetoremove" roletype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.10"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.4/@role.0" connector="//@interimmodels.4/@designmodel/@connector.11">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.4/@designmodel/@connector.11">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.4/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.4/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.4/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.4/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.4" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.4/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.4/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.4/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.4/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.4/@designmodel/@archstyle.4/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.4/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.4/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.4/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.4/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.4/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.4/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.4/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.4/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="15" verifyTime="0.0056955" testport="//@interimmodels.4/@designmodel/@component.0/@port.3" traceExample="init -> ShopFrontend_shop_itemadded -> ShopFrontend_cartwire_requester_process -> cartwire_req!48 -> cartwire_req?48 -> CartsService_cartwire_responder_invoke -> CartsService_manage_saveitem -> CartsService_cartwire_responder_process -> cartwire_res!48 -> cartwire_res?48" exprText="[]  (ShopFrontend.shop.itemadded -> &lt;> CartsService.manage.saveitem)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.0/@port.3/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="63" verifyTime="0.0112015" testport="//@interimmodels.4/@designmodel/@component.0/@port.2" traceExample="init -> ShopFrontend_order_purchased -> ShopFrontend_orderwire_publisher_process -> orderwire_pub!79 -> orderwire_pub?79 -> OrdersService_orderlogwire_writer_request -> orderlogwire_req!79 -> orderlogwire_req?79 -> OrdersDB_orderlogwire_writestorage_invoke -> OrdersDB_writeorder_orderwritten -> OrdersDB_orderlogwire_writestorage_process -> orderlogwire_res!79 -> orderlogwire_res?79 -> OrdersService_postorder_check -> OrdersService_postorder_save -> OrdersService_orderlogwire_writer_process -> OrdersService_orderlogwire_writer_Skip -> OrdersService_paywire_requester_process -> paywire_req!79 -> paywire_req?79 -> Payment_paywire_responder_invoke -> Payment_pay_paid -> Payment_paywire_responder_process -> paywire_res!79 -> paywire_res?79 -> OrdersService_paywire_requester_Skip -> OrdersService_shippingwire_requester_process -> shippingwire_req!79 -> shippingwire_req?79 -> ShippingService_shippingwire_responder_invoke -> ShippingService_shippinglogwire_writer_request -> shippinglogwire_req!79 -> shippinglogwire_req?79 -> QueueDB_shippinglogwire_writestorage_invoke -> QueueDB_writequeue_queuewritten -> QueueDB_shippinglogwire_writestorage_process -> shippinglogwire_res!79 -> shippinglogwire_res?79 -> ShippingService_postshipping_posted -> ShippingService_shippinglogwire_writer_process -> ShippingService_shippinglogwire_writer_Skip -> ShippingService_shippingwire_responder_process -> shippingwire_res!79 -> shippingwire_res?79 -> OrdersService_shippingwire_requester_Skip -> OrdersService_orderwire_subscriber_process" exprText="[]  (Payment.pay.paid -> &lt;> ShippingService.postshipping.posted)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.4/@designmodel" visitedStates="10" verifyTime="0.005912" testport="//@interimmodels.4/@designmodel/@component.0/@port.3" traceExample="init -> ShopFrontend_shop_itemadded -> ShopFrontend_cartwire_requester_process -> cartwire_req!51 -> cartwire_req?51 -> CartsService_cartwire_responder_invoke -> CartsService_manage_saveitem -> CartsService_cartwire_responder_process -> cartwire_res!51 -> cartwire_res?51" exprText="[]  (OrdersService.postorder.save -> &lt;> Payment.pay.paid)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.3/@port.0/@events.1" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="15" verifyTime="0.0511383" testport="//@interimmodels.4/@designmodel/@component.0/@port.0" traceExample="init -> ShopFrontend_login_submit -> ShopFrontend_userwire_requester_process -> userwire_req!38 -> userwire_req?38 -> UserService_userwire_responder_invoke -> UserService_auth_checked -> UserService_userwire_responder_process -> userwire_res!38 -> userwire_res?38" exprText="[]  (ShopFrontend.login.submit -> &lt;> UserService.auth.checked)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.4/@designmodel" counterExample="init -> ShopFrontend_browse_read -> ShopFrontend_cateloquewire_requester_process -> cateloquewire_req!62 -> cateloquewire_req?62 -> CateloqueService_cateloquewire_responder_invoke -> CateloqueService_list_query -> CateloqueService_cateloquewire_responder_process -> cateloquewire_res!62 -> cateloquewire_res?62" visitedStates="24" verifyTime="0.005226199999999999" testport="//@interimmodels.4/@designmodel/@component.0/@port.1" traceExample="init -> ShopFrontend_browse_read -> ShopFrontend_cateloquewire_requester_process -> cateloquewire_req!91 -> cateloquewire_req?91 -> CateloqueService_cateloquewire_responder_invoke -> CateloqueService_list_query -> CateloqueService_cateloquewire_responder_process -> cateloquewire_res!91 -> cateloquewire_res?91" exprText="[]  (&lt;> ShopFrontend.browse.read -> &lt;> CateloqueService.list.query)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop6" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0045632" testport="//@interimmodels.4/@designmodel/@component.10/@port.0" traceExample="init -> ShopBackend_listorder_renderlist -> ShopBackend_orderquerywire_requester_process -> orderquerywire_req!39 -> orderquerywire_req?39 -> OrdersService_orderquerywire_responder_invoke -> OrdersService_get_ack -> OrdersService_orderreadwire_reader_process -> orderreadwire_req!39 -> orderreadwire_req?39 -> OrdersDB_orderreadwire_readstorage_invoke -> OrdersDB_queryorder_orderreaded -> OrdersDB_orderreadwire_readstorage_process -> orderreadwire_res!39 -> orderreadwire_res?39 -> OrdersService_orderreadwire_reader_Skip -> OrdersService_orderquerywire_responder_process -> orderquerywire_res!39 -> orderquerywire_res?39" exprText="[]  (ShopBackend.listorder.renderlist -> &lt;> OrdersService.get.ack)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.5">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.10/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.5/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.3/@port.1/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop7" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="59" verifyTime="0.0096414" testport="//@interimmodels.4/@designmodel/@component.0/@port.2" traceExample="init -> ShopFrontend_order_purchased -> ShopFrontend_orderwire_publisher_process -> orderwire_pub!93 -> orderwire_pub?93 -> OrdersService_orderlogwire_writer_request -> orderlogwire_req!93 -> orderlogwire_req?93 -> OrdersDB_orderlogwire_writestorage_invoke -> OrdersDB_writeorder_orderwritten -> OrdersDB_orderlogwire_writestorage_process -> orderlogwire_res!93 -> orderlogwire_res?93 -> OrdersService_postorder_check -> OrdersService_postorder_save -> OrdersService_orderlogwire_writer_process -> OrdersService_orderlogwire_writer_Skip -> OrdersService_paywire_requester_process -> paywire_req!93 -> paywire_req?93 -> Payment_paywire_responder_invoke -> Payment_pay_paid -> Payment_paywire_responder_process -> paywire_res!93 -> paywire_res?93 -> OrdersService_paywire_requester_Skip -> OrdersService_shippingwire_requester_process -> shippingwire_req!93 -> shippingwire_req?93 -> ShippingService_shippingwire_responder_invoke -> ShippingService_shippinglogwire_writer_request -> shippinglogwire_req!93 -> shippinglogwire_req?93 -> QueueDB_shippinglogwire_writestorage_invoke -> QueueDB_writequeue_queuewritten -> QueueDB_shippinglogwire_writestorage_process -> shippinglogwire_res!93 -> shippinglogwire_res?93 -> ShippingService_postshipping_posted -> ShippingService_shippinglogwire_writer_process -> ShippingService_shippinglogwire_writer_Skip -> ShippingService_shippingwire_responder_process -> shippingwire_res!93 -> shippingwire_res?93 -> OrdersService_shippingwire_requester_Skip -> OrdersService_orderwire_subscriber_process" exprText="[]  (ShopFrontend.order.purchased -> &lt;> OrdersService.postorder.save)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.6">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.3/@port.0/@events.1" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.0/@port.2/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.6/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.4/@designmodel/@component.3/@port.0" exprText="[]  (OrdersService.postorder.save-> &lt;> paymentgatewayref.commitref.checked)"/>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="NodeJSContainer1" component="//@interimmodels.4/@designmodel/@component.0 //@interimmodels.4/@designmodel/@component.10">
          <port name="port" portNumber="15551" node="//@interimmodels.4/@designmodel/@host.0/@node.0" namedport="//@interimmodels.4/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="15552" node="//@interimmodels.4/@designmodel/@host.0/@node.0" namedport="//@interimmodels.4/@designmodel/@component.0/@port.2"/>
          <port name="port" portNumber="15553" node="//@interimmodels.4/@designmodel/@host.0/@node.0" namedport="//@interimmodels.4/@designmodel/@component.10/@port.0"/>
          <port name="port" portNumber="15554" node="//@interimmodels.4/@designmodel/@host.0/@node.0" namedport="//@interimmodels.4/@designmodel/@component.0/@port.3"/>
          <port name="port" portNumber="15555" node="//@interimmodels.4/@designmodel/@host.0/@node.0" namedport="//@interimmodels.4/@designmodel/@component.0/@port.1"/>
        </node>
        <node name="GoContainer3" component="//@interimmodels.4/@designmodel/@component.1">
          <port name="port" portNumber="80" node="//@interimmodels.4/@designmodel/@host.0/@node.1" namedport="//@interimmodels.4/@designmodel/@component.1/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="SecureServer">
        <node name="GoContainer1" component="//@interimmodels.4/@designmodel/@component.2">
          <port name="port" portNumber="80" node="//@interimmodels.4/@designmodel/@host.1/@node.0" namedport="//@interimmodels.4/@designmodel/@component.2/@port.0" hasFirewall="true"/>
        </node>
        <node name="GoContainer2" component="//@interimmodels.4/@designmodel/@component.6">
          <port name="port" portNumber="80" node="//@interimmodels.4/@designmodel/@host.1/@node.1" namedport="//@interimmodels.4/@designmodel/@component.6/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="LocalServer">
        <node name="JEEContainer1" component="//@interimmodels.4/@designmodel/@component.3 //@interimmodels.4/@designmodel/@component.5">
          <port name="port" portNumber="80" namedport="//@interimmodels.4/@designmodel/@component.3/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true"/>
          <port name="port" portNumber="15561" node="//@interimmodels.4/@designmodel/@host.2/@node.0" namedport="//@interimmodels.4/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15562" node="//@interimmodels.4/@designmodel/@host.2/@node.0" namedport="//@interimmodels.4/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15563" node="//@interimmodels.4/@designmodel/@host.2/@node.0" namedport="//@interimmodels.4/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15564" node="//@interimmodels.4/@designmodel/@host.2/@node.0" namedport="//@interimmodels.4/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15566" node="//@interimmodels.4/@designmodel/@host.2/@node.0" namedport="//@interimmodels.4/@designmodel/@component.3/@port.1"/>
          <port name="port" portNumber="81" node="//@interimmodels.4/@designmodel/@host.2/@node.0" namedport="//@interimmodels.4/@designmodel/@component.3/@port.1"/>
        </node>
        <node name="MySQL1" component="//@interimmodels.4/@designmodel/@component.4">
          <port name="port" portNumber="3306" node="//@interimmodels.4/@designmodel/@host.2/@node.1" namedport="//@interimmodels.4/@designmodel/@component.4/@port.0 //@interimmodels.4/@designmodel/@component.4/@port.1"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node name="JEEContainer4" component="//@interimmodels.4/@designmodel/@component.7 //@interimmodels.4/@designmodel/@component.8">
          <port name="port" portNumber="80" node="//@interimmodels.4/@designmodel/@host.3/@node.0" namedport="//@interimmodels.4/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
          <port name="port" portNumber="15571" node="//@interimmodels.4/@designmodel/@host.3/@node.0" namedport="//@interimmodels.4/@designmodel/@component.7/@port.0"/>
          <port name="port" portNumber="15572" node="//@interimmodels.4/@designmodel/@host.3/@node.0" namedport="//@interimmodels.4/@designmodel/@component.7/@port.0"/>
        </node>
        <node name="MySQL2" component="//@interimmodels.4/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.4/@designmodel/@host.3/@node.1" namedport="//@interimmodels.4/@designmodel/@component.9/@port.0 //@interimmodels.4/@designmodel/@component.9/@port.1"/>
        </node>
      </host>
      <link name="link2" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.0/@node.0/@port.1" target="//@interimmodels.4/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link3" source="//@interimmodels.4/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link4" source="//@interimmodels.4/@designmodel/@host.2/@node.0/@port.2"/>
      <link name="link5" target="//@interimmodels.4/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.0/@node.0/@port.3"/>
      <link name="link9" source="//@interimmodels.4/@designmodel/@host.0/@node.0/@port.4" target="//@interimmodels.4/@designmodel/@host.0/@node.1/@port.0"/>
      <link name="link11" source="//@interimmodels.4/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link12" source="//@interimmodels.4/@designmodel/@host.3/@node.0/@port.2"/>
      <link name="link13" target="//@interimmodels.4/@designmodel/@host.3/@node.1/@port.0"/>
      <link name="link14" target="//@interimmodels.4/@designmodel/@host.3/@node.1/@port.0"/>
      <link name="link16" source="//@interimmodels.4/@designmodel/@host.2/@node.0/@port.5" target="//@interimmodels.4/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.0/@node.0/@port.2" target="//@interimmodels.4/@designmodel/@host.2/@node.0/@port.6"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels description="sso - setup-connector" nextModel="//@interimmodels.6">
    <designmodel name="interimsso0">
      <component name="ShopFrontend" type="client,broadcaster" deploymentnode="//@interimmodels.5/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,LeastPriviledge">
        <port name="login" role="//@interimmodels.5/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="submit"/>
        </port>
        <port name="browse" role="//@interimmodels.5/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="read"/>
        </port>
        <port name="order" role="//@interimmodels.5/@designmodel/@connector.9/@role.0" type="broadcast,OutboundPort">
          <events name="purchased"/>
        </port>
        <port name="shop" role="//@interimmodels.5/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="itemadded"/>
        </port>
      </component>
      <component name="CateloqueService" type="server" deploymentnode="//@interimmodels.5/@designmodel/@host.0/@node.1" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="list" role="//@interimmodels.5/@designmodel/@connector.1/@role.1" type="response,InboundPort">
          <events name="query"/>
        </port>
      </component>
      <component name="UserService" type="server" deploymentnode="//@interimmodels.5/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DefenseInDepth,DenialOfService">
        <port name="auth" role="//@interimmodels.5/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="checked"/>
        </port>
      </component>
      <component name="OrdersService" type="client,server,listener,eventconsumer,readendpoint,datawriter,datareader" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization,DenialOfService,DataTampering">
        <port name="postorder" role="//@interimmodels.5/@designmodel/@connector.4/@role.0 //@interimmodels.5/@designmodel/@connector.7/@role.0 //@interimmodels.5/@designmodel/@connector.9/@role.1 //@interimmodels.5/@designmodel/@connector.11/@role.0" type="request,listen,write,OutboundPort,InboundPort,EventProcessorPort">
          <events name="check" next="//@interimmodels.5/@designmodel/@component.3/@port.0/@events.1"/>
          <events name="save"/>
        </port>
        <port name="get" role="//@interimmodels.5/@designmodel/@connector.2/@role.1 //@interimmodels.5/@designmodel/@connector.8/@role.0" type="response,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="ack"/>
        </port>
      </component>
      <component name="OrdersDB" type="repository,datastore" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.1">
        <port name="writeorder" role="//@interimmodels.5/@designmodel/@connector.7/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="orderwritten"/>
        </port>
        <port name="queryorder" role="//@interimmodels.5/@designmodel/@connector.8/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="orderreaded"/>
        </port>
      </component>
      <component name="CartsService" type="server" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="manage" role="//@interimmodels.5/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="saveitem"/>
        </port>
      </component>
      <component name="Payment" type="repository,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.5/@designmodel/@host.1/@node.1" criticalLevel="High" securityCharacters="DefenseInDepth,Compartmentalization">
        <port name="pay" type="store,InboundPort,TamperingProofPort">
          <events name="paid"/>
        </port>
      </component>
      <component name="ShippingService" type="server,datawriter" deploymentnode="//@interimmodels.5/@designmodel/@host.3/@node.0" securityCharacters="Compartmentalization">
        <port name="postshipping" role="//@interimmodels.5/@designmodel/@connector.4/@role.1 //@interimmodels.5/@designmodel/@connector.6/@role.0" type="response,write,OutboundPort,InboundPort,EventProcessorPort">
          <events name="posted"/>
        </port>
      </component>
      <component name="ShippingWorker" type="readendpoint,datareader" deploymentnode="//@interimmodels.5/@designmodel/@host.3/@node.0">
        <port name="listqueue" role="//@interimmodels.5/@designmodel/@connector.5/@role.0" type="read,OutboundPort,EventProcessorPort">
          <events name="renderqueue"/>
        </port>
      </component>
      <component name="QueueDB" type="repository,datastore" deploymentnode="//@interimmodels.5/@designmodel/@host.3/@node.1">
        <port name="writequeue" role="//@interimmodels.5/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="queuewritten"/>
        </port>
        <port name="readqueue" role="//@interimmodels.5/@designmodel/@connector.5/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="queuereaded"/>
        </port>
      </component>
      <component name="ShopBackend" type="client" deploymentnode="//@interimmodels.5/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface">
        <port name="listorder" role="//@interimmodels.5/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref" role="//@interimmodels.5/@designmodel/@connector.11/@role.1">
          <events name="checked"/>
        </port>
      </component>
      <connector name="userwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.0"/>
      </connector>
      <connector name="cateloquewire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.1"/>
      </connector>
      <connector name="orderquerywire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.8/@role.0" connector="//@interimmodels.5/@designmodel/@connector.2"/>
      </connector>
      <connector name="cartwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.3"/>
      </connector>
      <connector name="shippingwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.6/@role.0" connector="//@interimmodels.5/@designmodel/@connector.4"/>
      </connector>
      <connector name="queuereadwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.5"/>
        <role name="readstorage" roletype="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.5"/>
      </connector>
      <connector name="shippinglogwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.6"/>
      </connector>
      <connector name="orderlogwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.11/@role.0" connector="//@interimmodels.5/@designmodel/@connector.7"/>
        <role name="writestorage" roletype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.7"/>
      </connector>
      <connector name="orderreadwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.8"/>
        <role name="readstorage" roletype="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.8"/>
      </connector>
      <connector name="orderwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.9"/>
        <role name="subscriber" roletype="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.7/@role.0" connector="//@interimmodels.5/@designmodel/@connector.9"/>
      </connector>
      <connector name="paywiretoremove" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writertoremove" roletype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.10"/>
        <role name="writestoragetoremove" roletype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.10"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.4/@role.0" connector="//@interimmodels.5/@designmodel/@connector.11">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.5/@designmodel/@connector.11">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <connector name="signwireref">
        <role name="requester" type="out" connector="//@interimmodels.5/@designmodel/@connector.12">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/sso.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="in" connector="//@interimmodels.5/@designmodel/@connector.12">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/sso.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.5/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.5/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.5/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.5/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.4" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.5/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.5/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.5/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.5/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.5/@designmodel/@archstyle.4/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.5/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.5/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.5/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.5/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.5/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.5/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.5/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.5/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="15" verifyTime="0.0056955" testport="//@interimmodels.5/@designmodel/@component.0/@port.3" traceExample="init -> ShopFrontend_shop_itemadded -> ShopFrontend_cartwire_requester_process -> cartwire_req!48 -> cartwire_req?48 -> CartsService_cartwire_responder_invoke -> CartsService_manage_saveitem -> CartsService_cartwire_responder_process -> cartwire_res!48 -> cartwire_res?48" exprText="[]  (ShopFrontend.shop.itemadded -> &lt;> CartsService.manage.saveitem)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.0/@port.3/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="63" verifyTime="0.0112015" testport="//@interimmodels.5/@designmodel/@component.0/@port.2" traceExample="init -> ShopFrontend_order_purchased -> ShopFrontend_orderwire_publisher_process -> orderwire_pub!79 -> orderwire_pub?79 -> OrdersService_orderlogwire_writer_request -> orderlogwire_req!79 -> orderlogwire_req?79 -> OrdersDB_orderlogwire_writestorage_invoke -> OrdersDB_writeorder_orderwritten -> OrdersDB_orderlogwire_writestorage_process -> orderlogwire_res!79 -> orderlogwire_res?79 -> OrdersService_postorder_check -> OrdersService_postorder_save -> OrdersService_orderlogwire_writer_process -> OrdersService_orderlogwire_writer_Skip -> OrdersService_paywire_requester_process -> paywire_req!79 -> paywire_req?79 -> Payment_paywire_responder_invoke -> Payment_pay_paid -> Payment_paywire_responder_process -> paywire_res!79 -> paywire_res?79 -> OrdersService_paywire_requester_Skip -> OrdersService_shippingwire_requester_process -> shippingwire_req!79 -> shippingwire_req?79 -> ShippingService_shippingwire_responder_invoke -> ShippingService_shippinglogwire_writer_request -> shippinglogwire_req!79 -> shippinglogwire_req?79 -> QueueDB_shippinglogwire_writestorage_invoke -> QueueDB_writequeue_queuewritten -> QueueDB_shippinglogwire_writestorage_process -> shippinglogwire_res!79 -> shippinglogwire_res?79 -> ShippingService_postshipping_posted -> ShippingService_shippinglogwire_writer_process -> ShippingService_shippinglogwire_writer_Skip -> ShippingService_shippingwire_responder_process -> shippingwire_res!79 -> shippingwire_res?79 -> OrdersService_shippingwire_requester_Skip -> OrdersService_orderwire_subscriber_process" exprText="[]  (Payment.pay.paid -> &lt;> ShippingService.postshipping.posted)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.5/@designmodel" visitedStates="10" verifyTime="0.005912" testport="//@interimmodels.5/@designmodel/@component.0/@port.3" traceExample="init -> ShopFrontend_shop_itemadded -> ShopFrontend_cartwire_requester_process -> cartwire_req!51 -> cartwire_req?51 -> CartsService_cartwire_responder_invoke -> CartsService_manage_saveitem -> CartsService_cartwire_responder_process -> cartwire_res!51 -> cartwire_res?51" exprText="[]  (OrdersService.postorder.save -> &lt;> Payment.pay.paid)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.3/@port.0/@events.1" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="15" verifyTime="0.0511383" testport="//@interimmodels.5/@designmodel/@component.0/@port.0" traceExample="init -> ShopFrontend_login_submit -> ShopFrontend_userwire_requester_process -> userwire_req!38 -> userwire_req?38 -> UserService_userwire_responder_invoke -> UserService_auth_checked -> UserService_userwire_responder_process -> userwire_res!38 -> userwire_res?38" exprText="[]  (ShopFrontend.login.submit -> &lt;> UserService.auth.checked)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.5/@designmodel" counterExample="init -> ShopFrontend_browse_read -> ShopFrontend_cateloquewire_requester_process -> cateloquewire_req!62 -> cateloquewire_req?62 -> CateloqueService_cateloquewire_responder_invoke -> CateloqueService_list_query -> CateloqueService_cateloquewire_responder_process -> cateloquewire_res!62 -> cateloquewire_res?62" visitedStates="24" verifyTime="0.005226199999999999" testport="//@interimmodels.5/@designmodel/@component.0/@port.1" traceExample="init -> ShopFrontend_browse_read -> ShopFrontend_cateloquewire_requester_process -> cateloquewire_req!91 -> cateloquewire_req?91 -> CateloqueService_cateloquewire_responder_invoke -> CateloqueService_list_query -> CateloqueService_cateloquewire_responder_process -> cateloquewire_res!91 -> cateloquewire_res?91" exprText="[]  (&lt;> ShopFrontend.browse.read -> &lt;> CateloqueService.list.query)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop6" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0045632" testport="//@interimmodels.5/@designmodel/@component.10/@port.0" traceExample="init -> ShopBackend_listorder_renderlist -> ShopBackend_orderquerywire_requester_process -> orderquerywire_req!39 -> orderquerywire_req?39 -> OrdersService_orderquerywire_responder_invoke -> OrdersService_get_ack -> OrdersService_orderreadwire_reader_process -> orderreadwire_req!39 -> orderreadwire_req?39 -> OrdersDB_orderreadwire_readstorage_invoke -> OrdersDB_queryorder_orderreaded -> OrdersDB_orderreadwire_readstorage_process -> orderreadwire_res!39 -> orderreadwire_res?39 -> OrdersService_orderreadwire_reader_Skip -> OrdersService_orderquerywire_responder_process -> orderquerywire_res!39 -> orderquerywire_res?39" exprText="[]  (ShopBackend.listorder.renderlist -> &lt;> OrdersService.get.ack)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.5">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.10/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.5/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.3/@port.1/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop7" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="59" verifyTime="0.0096414" testport="//@interimmodels.5/@designmodel/@component.0/@port.2" traceExample="init -> ShopFrontend_order_purchased -> ShopFrontend_orderwire_publisher_process -> orderwire_pub!93 -> orderwire_pub?93 -> OrdersService_orderlogwire_writer_request -> orderlogwire_req!93 -> orderlogwire_req?93 -> OrdersDB_orderlogwire_writestorage_invoke -> OrdersDB_writeorder_orderwritten -> OrdersDB_orderlogwire_writestorage_process -> orderlogwire_res!93 -> orderlogwire_res?93 -> OrdersService_postorder_check -> OrdersService_postorder_save -> OrdersService_orderlogwire_writer_process -> OrdersService_orderlogwire_writer_Skip -> OrdersService_paywire_requester_process -> paywire_req!93 -> paywire_req?93 -> Payment_paywire_responder_invoke -> Payment_pay_paid -> Payment_paywire_responder_process -> paywire_res!93 -> paywire_res?93 -> OrdersService_paywire_requester_Skip -> OrdersService_shippingwire_requester_process -> shippingwire_req!93 -> shippingwire_req?93 -> ShippingService_shippingwire_responder_invoke -> ShippingService_shippinglogwire_writer_request -> shippinglogwire_req!93 -> shippinglogwire_req?93 -> QueueDB_shippinglogwire_writestorage_invoke -> QueueDB_writequeue_queuewritten -> QueueDB_shippinglogwire_writestorage_process -> shippinglogwire_res!93 -> shippinglogwire_res?93 -> ShippingService_postshipping_posted -> ShippingService_shippinglogwire_writer_process -> ShippingService_shippinglogwire_writer_Skip -> ShippingService_shippingwire_responder_process -> shippingwire_res!93 -> shippingwire_res?93 -> OrdersService_shippingwire_requester_Skip -> OrdersService_orderwire_subscriber_process" exprText="[]  (ShopFrontend.order.purchased -> &lt;> OrdersService.postorder.save)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.6">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.3/@port.0/@events.1" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.0/@port.2/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.6/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.5/@designmodel/@component.3/@port.0" exprText="[]  (OrdersService.postorder.save-> &lt;> paymentgatewayref.commitref.checked)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="sso1" exprText="[]  (ShopFrontend.sloginref.submit -> &lt;> ssoserverref.authref.tokenissued)"/>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="NodeJSContainer1" component="//@interimmodels.5/@designmodel/@component.0 //@interimmodels.5/@designmodel/@component.10">
          <port name="port" portNumber="15551" node="//@interimmodels.5/@designmodel/@host.0/@node.0" namedport="//@interimmodels.5/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="15552" node="//@interimmodels.5/@designmodel/@host.0/@node.0" namedport="//@interimmodels.5/@designmodel/@component.0/@port.2"/>
          <port name="port" portNumber="15553" node="//@interimmodels.5/@designmodel/@host.0/@node.0" namedport="//@interimmodels.5/@designmodel/@component.10/@port.0"/>
          <port name="port" portNumber="15554" node="//@interimmodels.5/@designmodel/@host.0/@node.0" namedport="//@interimmodels.5/@designmodel/@component.0/@port.3"/>
          <port name="port" portNumber="15555" node="//@interimmodels.5/@designmodel/@host.0/@node.0" namedport="//@interimmodels.5/@designmodel/@component.0/@port.1"/>
        </node>
        <node name="GoContainer3" component="//@interimmodels.5/@designmodel/@component.1">
          <port name="port" portNumber="80" node="//@interimmodels.5/@designmodel/@host.0/@node.1" namedport="//@interimmodels.5/@designmodel/@component.1/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="SecureServer">
        <node name="GoContainer1" component="//@interimmodels.5/@designmodel/@component.2">
          <port name="port" portNumber="80" node="//@interimmodels.5/@designmodel/@host.1/@node.0" namedport="//@interimmodels.5/@designmodel/@component.2/@port.0" hasFirewall="true"/>
        </node>
        <node name="GoContainer2" component="//@interimmodels.5/@designmodel/@component.6">
          <port name="port" portNumber="80" node="//@interimmodels.5/@designmodel/@host.1/@node.1" namedport="//@interimmodels.5/@designmodel/@component.6/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="LocalServer">
        <node name="JEEContainer1" component="//@interimmodels.5/@designmodel/@component.3 //@interimmodels.5/@designmodel/@component.5">
          <port name="port" portNumber="80" namedport="//@interimmodels.5/@designmodel/@component.3/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true"/>
          <port name="port" portNumber="15561" node="//@interimmodels.5/@designmodel/@host.2/@node.0" namedport="//@interimmodels.5/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15562" node="//@interimmodels.5/@designmodel/@host.2/@node.0" namedport="//@interimmodels.5/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15563" node="//@interimmodels.5/@designmodel/@host.2/@node.0" namedport="//@interimmodels.5/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15564" node="//@interimmodels.5/@designmodel/@host.2/@node.0" namedport="//@interimmodels.5/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15566" node="//@interimmodels.5/@designmodel/@host.2/@node.0" namedport="//@interimmodels.5/@designmodel/@component.3/@port.1"/>
          <port name="port" portNumber="81" node="//@interimmodels.5/@designmodel/@host.2/@node.0" namedport="//@interimmodels.5/@designmodel/@component.3/@port.1"/>
        </node>
        <node name="MySQL1" component="//@interimmodels.5/@designmodel/@component.4">
          <port name="port" portNumber="3306" node="//@interimmodels.5/@designmodel/@host.2/@node.1" namedport="//@interimmodels.5/@designmodel/@component.4/@port.0 //@interimmodels.5/@designmodel/@component.4/@port.1"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node name="JEEContainer4" component="//@interimmodels.5/@designmodel/@component.7 //@interimmodels.5/@designmodel/@component.8">
          <port name="port" portNumber="80" node="//@interimmodels.5/@designmodel/@host.3/@node.0" namedport="//@interimmodels.5/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
          <port name="port" portNumber="15571" node="//@interimmodels.5/@designmodel/@host.3/@node.0" namedport="//@interimmodels.5/@designmodel/@component.7/@port.0"/>
          <port name="port" portNumber="15572" node="//@interimmodels.5/@designmodel/@host.3/@node.0" namedport="//@interimmodels.5/@designmodel/@component.7/@port.0"/>
        </node>
        <node name="MySQL2" component="//@interimmodels.5/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.5/@designmodel/@host.3/@node.1" namedport="//@interimmodels.5/@designmodel/@component.9/@port.0 //@interimmodels.5/@designmodel/@component.9/@port.1"/>
        </node>
      </host>
      <link name="link2" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.0/@node.0/@port.1" target="//@interimmodels.5/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link3" source="//@interimmodels.5/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link4" source="//@interimmodels.5/@designmodel/@host.2/@node.0/@port.2"/>
      <link name="link5" target="//@interimmodels.5/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.0/@node.0/@port.3"/>
      <link name="link9" source="//@interimmodels.5/@designmodel/@host.0/@node.0/@port.4" target="//@interimmodels.5/@designmodel/@host.0/@node.1/@port.0"/>
      <link name="link11" source="//@interimmodels.5/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link12" source="//@interimmodels.5/@designmodel/@host.3/@node.0/@port.2"/>
      <link name="link13" target="//@interimmodels.5/@designmodel/@host.3/@node.1/@port.0"/>
      <link name="link14" target="//@interimmodels.5/@designmodel/@host.3/@node.1/@port.0"/>
      <link name="link16" source="//@interimmodels.5/@designmodel/@host.2/@node.0/@port.5" target="//@interimmodels.5/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.0/@node.0/@port.2" target="//@interimmodels.5/@designmodel/@host.2/@node.0/@port.6"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="1" description="sso - establish-link" nextModel="//@interimmodels.7">
    <designmodel name="interimsso1">
      <component name="ShopFrontend" type="client,broadcaster" deploymentnode="//@interimmodels.6/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,LeastPriviledge">
        <port name="login" role="//@interimmodels.6/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="submit"/>
        </port>
        <port name="browse" role="//@interimmodels.6/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="read"/>
        </port>
        <port name="order" role="//@interimmodels.6/@designmodel/@connector.9/@role.0" type="broadcast,OutboundPort">
          <events name="purchased"/>
        </port>
        <port name="shop" role="//@interimmodels.6/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="itemadded"/>
        </port>
        <port name="sloginref" role="//@interimmodels.6/@designmodel/@connector.12/@role.0">
          <events name="submit"/>
        </port>
      </component>
      <component name="CateloqueService" type="server" deploymentnode="//@interimmodels.6/@designmodel/@host.0/@node.1" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="list" role="//@interimmodels.6/@designmodel/@connector.1/@role.1" type="response,InboundPort">
          <events name="query"/>
        </port>
      </component>
      <component name="UserService" type="server" deploymentnode="//@interimmodels.6/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DefenseInDepth,DenialOfService">
        <port name="auth" role="//@interimmodels.6/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="checked"/>
        </port>
      </component>
      <component name="OrdersService" type="client,server,listener,eventconsumer,readendpoint,datawriter,datareader" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization,DenialOfService,DataTampering">
        <port name="postorder" role="//@interimmodels.6/@designmodel/@connector.4/@role.0 //@interimmodels.6/@designmodel/@connector.7/@role.0 //@interimmodels.6/@designmodel/@connector.9/@role.1 //@interimmodels.6/@designmodel/@connector.11/@role.0" type="request,listen,write,OutboundPort,InboundPort,EventProcessorPort">
          <events name="check" next="//@interimmodels.6/@designmodel/@component.3/@port.0/@events.1"/>
          <events name="save"/>
        </port>
        <port name="get" role="//@interimmodels.6/@designmodel/@connector.2/@role.1 //@interimmodels.6/@designmodel/@connector.8/@role.0" type="response,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="ack"/>
        </port>
      </component>
      <component name="OrdersDB" type="repository,datastore" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.1">
        <port name="writeorder" role="//@interimmodels.6/@designmodel/@connector.7/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="orderwritten"/>
        </port>
        <port name="queryorder" role="//@interimmodels.6/@designmodel/@connector.8/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="orderreaded"/>
        </port>
      </component>
      <component name="CartsService" type="server" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="manage" role="//@interimmodels.6/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="saveitem"/>
        </port>
      </component>
      <component name="Payment" type="repository,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.6/@designmodel/@host.1/@node.1" criticalLevel="High" securityCharacters="DefenseInDepth,Compartmentalization">
        <port name="pay" type="store,InboundPort,TamperingProofPort">
          <events name="paid"/>
        </port>
      </component>
      <component name="ShippingService" type="server,datawriter" deploymentnode="//@interimmodels.6/@designmodel/@host.3/@node.0" securityCharacters="Compartmentalization">
        <port name="postshipping" role="//@interimmodels.6/@designmodel/@connector.4/@role.1 //@interimmodels.6/@designmodel/@connector.6/@role.0" type="response,write,OutboundPort,InboundPort,EventProcessorPort">
          <events name="posted"/>
        </port>
      </component>
      <component name="ShippingWorker" type="readendpoint,datareader" deploymentnode="//@interimmodels.6/@designmodel/@host.3/@node.0">
        <port name="listqueue" role="//@interimmodels.6/@designmodel/@connector.5/@role.0" type="read,OutboundPort,EventProcessorPort">
          <events name="renderqueue"/>
        </port>
      </component>
      <component name="QueueDB" type="repository,datastore" deploymentnode="//@interimmodels.6/@designmodel/@host.3/@node.1">
        <port name="writequeue" role="//@interimmodels.6/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="queuewritten"/>
        </port>
        <port name="readqueue" role="//@interimmodels.6/@designmodel/@connector.5/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="queuereaded"/>
        </port>
      </component>
      <component name="ShopBackend" type="client" deploymentnode="//@interimmodels.6/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface">
        <port name="listorder" role="//@interimmodels.6/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref" role="//@interimmodels.6/@designmodel/@connector.11/@role.1">
          <events name="checked"/>
        </port>
      </component>
      <connector name="userwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.0"/>
      </connector>
      <connector name="cateloquewire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.1"/>
      </connector>
      <connector name="orderquerywire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.8/@role.0" connector="//@interimmodels.6/@designmodel/@connector.2"/>
      </connector>
      <connector name="cartwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.3"/>
      </connector>
      <connector name="shippingwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.6/@role.0" connector="//@interimmodels.6/@designmodel/@connector.4"/>
      </connector>
      <connector name="queuereadwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.5"/>
        <role name="readstorage" roletype="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.5"/>
      </connector>
      <connector name="shippinglogwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.6"/>
      </connector>
      <connector name="orderlogwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.11/@role.0" connector="//@interimmodels.6/@designmodel/@connector.7"/>
        <role name="writestorage" roletype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.7"/>
      </connector>
      <connector name="orderreadwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.8"/>
        <role name="readstorage" roletype="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.8"/>
      </connector>
      <connector name="orderwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.9"/>
        <role name="subscriber" roletype="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.7/@role.0" connector="//@interimmodels.6/@designmodel/@connector.9"/>
      </connector>
      <connector name="paywiretoremove" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writertoremove" roletype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.10"/>
        <role name="writestoragetoremove" roletype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.10"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.4/@role.0" connector="//@interimmodels.6/@designmodel/@connector.11">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.6/@designmodel/@connector.11">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <connector name="signwireref">
        <role name="requester" type="tolink" connector="//@interimmodels.6/@designmodel/@connector.12">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/sso.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="in" connector="//@interimmodels.6/@designmodel/@connector.12">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/sso.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.6/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.6/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.6/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.6/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.4" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.6/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.6/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.6/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.6/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.6/@designmodel/@archstyle.4/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.6/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.6/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.6/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.6/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.6/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.6/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.6/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.6/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="15" verifyTime="0.0056955" testport="//@interimmodels.6/@designmodel/@component.0/@port.3" traceExample="init -> ShopFrontend_shop_itemadded -> ShopFrontend_cartwire_requester_process -> cartwire_req!48 -> cartwire_req?48 -> CartsService_cartwire_responder_invoke -> CartsService_manage_saveitem -> CartsService_cartwire_responder_process -> cartwire_res!48 -> cartwire_res?48" exprText="[]  (ShopFrontend.shop.itemadded -> &lt;> CartsService.manage.saveitem)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.0/@port.3/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="63" verifyTime="0.0112015" testport="//@interimmodels.6/@designmodel/@component.0/@port.2" traceExample="init -> ShopFrontend_order_purchased -> ShopFrontend_orderwire_publisher_process -> orderwire_pub!79 -> orderwire_pub?79 -> OrdersService_orderlogwire_writer_request -> orderlogwire_req!79 -> orderlogwire_req?79 -> OrdersDB_orderlogwire_writestorage_invoke -> OrdersDB_writeorder_orderwritten -> OrdersDB_orderlogwire_writestorage_process -> orderlogwire_res!79 -> orderlogwire_res?79 -> OrdersService_postorder_check -> OrdersService_postorder_save -> OrdersService_orderlogwire_writer_process -> OrdersService_orderlogwire_writer_Skip -> OrdersService_paywire_requester_process -> paywire_req!79 -> paywire_req?79 -> Payment_paywire_responder_invoke -> Payment_pay_paid -> Payment_paywire_responder_process -> paywire_res!79 -> paywire_res?79 -> OrdersService_paywire_requester_Skip -> OrdersService_shippingwire_requester_process -> shippingwire_req!79 -> shippingwire_req?79 -> ShippingService_shippingwire_responder_invoke -> ShippingService_shippinglogwire_writer_request -> shippinglogwire_req!79 -> shippinglogwire_req?79 -> QueueDB_shippinglogwire_writestorage_invoke -> QueueDB_writequeue_queuewritten -> QueueDB_shippinglogwire_writestorage_process -> shippinglogwire_res!79 -> shippinglogwire_res?79 -> ShippingService_postshipping_posted -> ShippingService_shippinglogwire_writer_process -> ShippingService_shippinglogwire_writer_Skip -> ShippingService_shippingwire_responder_process -> shippingwire_res!79 -> shippingwire_res?79 -> OrdersService_shippingwire_requester_Skip -> OrdersService_orderwire_subscriber_process" exprText="[]  (Payment.pay.paid -> &lt;> ShippingService.postshipping.posted)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.6/@designmodel" visitedStates="10" verifyTime="0.005912" testport="//@interimmodels.6/@designmodel/@component.0/@port.3" traceExample="init -> ShopFrontend_shop_itemadded -> ShopFrontend_cartwire_requester_process -> cartwire_req!51 -> cartwire_req?51 -> CartsService_cartwire_responder_invoke -> CartsService_manage_saveitem -> CartsService_cartwire_responder_process -> cartwire_res!51 -> cartwire_res?51" exprText="[]  (OrdersService.postorder.save -> &lt;> Payment.pay.paid)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.3/@port.0/@events.1" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="15" verifyTime="0.0511383" testport="//@interimmodels.6/@designmodel/@component.0/@port.0" traceExample="init -> ShopFrontend_login_submit -> ShopFrontend_userwire_requester_process -> userwire_req!38 -> userwire_req?38 -> UserService_userwire_responder_invoke -> UserService_auth_checked -> UserService_userwire_responder_process -> userwire_res!38 -> userwire_res?38" exprText="[]  (ShopFrontend.login.submit -> &lt;> UserService.auth.checked)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.6/@designmodel" counterExample="init -> ShopFrontend_browse_read -> ShopFrontend_cateloquewire_requester_process -> cateloquewire_req!62 -> cateloquewire_req?62 -> CateloqueService_cateloquewire_responder_invoke -> CateloqueService_list_query -> CateloqueService_cateloquewire_responder_process -> cateloquewire_res!62 -> cateloquewire_res?62" visitedStates="24" verifyTime="0.005226199999999999" testport="//@interimmodels.6/@designmodel/@component.0/@port.1" traceExample="init -> ShopFrontend_browse_read -> ShopFrontend_cateloquewire_requester_process -> cateloquewire_req!91 -> cateloquewire_req?91 -> CateloqueService_cateloquewire_responder_invoke -> CateloqueService_list_query -> CateloqueService_cateloquewire_responder_process -> cateloquewire_res!91 -> cateloquewire_res?91" exprText="[]  (&lt;> ShopFrontend.browse.read -> &lt;> CateloqueService.list.query)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop6" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0045632" testport="//@interimmodels.6/@designmodel/@component.10/@port.0" traceExample="init -> ShopBackend_listorder_renderlist -> ShopBackend_orderquerywire_requester_process -> orderquerywire_req!39 -> orderquerywire_req?39 -> OrdersService_orderquerywire_responder_invoke -> OrdersService_get_ack -> OrdersService_orderreadwire_reader_process -> orderreadwire_req!39 -> orderreadwire_req?39 -> OrdersDB_orderreadwire_readstorage_invoke -> OrdersDB_queryorder_orderreaded -> OrdersDB_orderreadwire_readstorage_process -> orderreadwire_res!39 -> orderreadwire_res?39 -> OrdersService_orderreadwire_reader_Skip -> OrdersService_orderquerywire_responder_process -> orderquerywire_res!39 -> orderquerywire_res?39" exprText="[]  (ShopBackend.listorder.renderlist -> &lt;> OrdersService.get.ack)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.5">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.10/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.5/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.3/@port.1/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop7" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="59" verifyTime="0.0096414" testport="//@interimmodels.6/@designmodel/@component.0/@port.2" traceExample="init -> ShopFrontend_order_purchased -> ShopFrontend_orderwire_publisher_process -> orderwire_pub!93 -> orderwire_pub?93 -> OrdersService_orderlogwire_writer_request -> orderlogwire_req!93 -> orderlogwire_req?93 -> OrdersDB_orderlogwire_writestorage_invoke -> OrdersDB_writeorder_orderwritten -> OrdersDB_orderlogwire_writestorage_process -> orderlogwire_res!93 -> orderlogwire_res?93 -> OrdersService_postorder_check -> OrdersService_postorder_save -> OrdersService_orderlogwire_writer_process -> OrdersService_orderlogwire_writer_Skip -> OrdersService_paywire_requester_process -> paywire_req!93 -> paywire_req?93 -> Payment_paywire_responder_invoke -> Payment_pay_paid -> Payment_paywire_responder_process -> paywire_res!93 -> paywire_res?93 -> OrdersService_paywire_requester_Skip -> OrdersService_shippingwire_requester_process -> shippingwire_req!93 -> shippingwire_req?93 -> ShippingService_shippingwire_responder_invoke -> ShippingService_shippinglogwire_writer_request -> shippinglogwire_req!93 -> shippinglogwire_req?93 -> QueueDB_shippinglogwire_writestorage_invoke -> QueueDB_writequeue_queuewritten -> QueueDB_shippinglogwire_writestorage_process -> shippinglogwire_res!93 -> shippinglogwire_res?93 -> ShippingService_postshipping_posted -> ShippingService_shippinglogwire_writer_process -> ShippingService_shippinglogwire_writer_Skip -> ShippingService_shippingwire_responder_process -> shippingwire_res!93 -> shippingwire_res?93 -> OrdersService_shippingwire_requester_Skip -> OrdersService_orderwire_subscriber_process" exprText="[]  (ShopFrontend.order.purchased -> &lt;> OrdersService.postorder.save)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.6">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.3/@port.0/@events.1" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.0/@port.2/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.6/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.6/@designmodel/@component.3/@port.0" exprText="[]  (OrdersService.postorder.save-> &lt;> paymentgatewayref.commitref.checked)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="sso1" testport="//@interimmodels.6/@designmodel/@component.0/@port.4" exprText="[]  (ShopFrontend.sloginref.submit -> &lt;> ssoserverref.authref.tokenissued)"/>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="NodeJSContainer1" component="//@interimmodels.6/@designmodel/@component.0 //@interimmodels.6/@designmodel/@component.10">
          <port name="port" portNumber="15551" node="//@interimmodels.6/@designmodel/@host.0/@node.0" namedport="//@interimmodels.6/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="15552" node="//@interimmodels.6/@designmodel/@host.0/@node.0" namedport="//@interimmodels.6/@designmodel/@component.0/@port.2"/>
          <port name="port" portNumber="15553" node="//@interimmodels.6/@designmodel/@host.0/@node.0" namedport="//@interimmodels.6/@designmodel/@component.10/@port.0"/>
          <port name="port" portNumber="15554" node="//@interimmodels.6/@designmodel/@host.0/@node.0" namedport="//@interimmodels.6/@designmodel/@component.0/@port.3"/>
          <port name="port" portNumber="15555" node="//@interimmodels.6/@designmodel/@host.0/@node.0" namedport="//@interimmodels.6/@designmodel/@component.0/@port.1"/>
        </node>
        <node name="GoContainer3" component="//@interimmodels.6/@designmodel/@component.1">
          <port name="port" portNumber="80" node="//@interimmodels.6/@designmodel/@host.0/@node.1" namedport="//@interimmodels.6/@designmodel/@component.1/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="SecureServer">
        <node name="GoContainer1" component="//@interimmodels.6/@designmodel/@component.2">
          <port name="port" portNumber="80" node="//@interimmodels.6/@designmodel/@host.1/@node.0" namedport="//@interimmodels.6/@designmodel/@component.2/@port.0" hasFirewall="true"/>
        </node>
        <node name="GoContainer2" component="//@interimmodels.6/@designmodel/@component.6">
          <port name="port" portNumber="80" node="//@interimmodels.6/@designmodel/@host.1/@node.1" namedport="//@interimmodels.6/@designmodel/@component.6/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="LocalServer">
        <node name="JEEContainer1" component="//@interimmodels.6/@designmodel/@component.3 //@interimmodels.6/@designmodel/@component.5">
          <port name="port" portNumber="80" namedport="//@interimmodels.6/@designmodel/@component.3/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true"/>
          <port name="port" portNumber="15561" node="//@interimmodels.6/@designmodel/@host.2/@node.0" namedport="//@interimmodels.6/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15562" node="//@interimmodels.6/@designmodel/@host.2/@node.0" namedport="//@interimmodels.6/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15563" node="//@interimmodels.6/@designmodel/@host.2/@node.0" namedport="//@interimmodels.6/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15564" node="//@interimmodels.6/@designmodel/@host.2/@node.0" namedport="//@interimmodels.6/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15566" node="//@interimmodels.6/@designmodel/@host.2/@node.0" namedport="//@interimmodels.6/@designmodel/@component.3/@port.1"/>
          <port name="port" portNumber="81" node="//@interimmodels.6/@designmodel/@host.2/@node.0" namedport="//@interimmodels.6/@designmodel/@component.3/@port.1"/>
        </node>
        <node name="MySQL1" component="//@interimmodels.6/@designmodel/@component.4">
          <port name="port" portNumber="3306" node="//@interimmodels.6/@designmodel/@host.2/@node.1" namedport="//@interimmodels.6/@designmodel/@component.4/@port.0 //@interimmodels.6/@designmodel/@component.4/@port.1"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node name="JEEContainer4" component="//@interimmodels.6/@designmodel/@component.7 //@interimmodels.6/@designmodel/@component.8">
          <port name="port" portNumber="80" node="//@interimmodels.6/@designmodel/@host.3/@node.0" namedport="//@interimmodels.6/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
          <port name="port" portNumber="15571" node="//@interimmodels.6/@designmodel/@host.3/@node.0" namedport="//@interimmodels.6/@designmodel/@component.7/@port.0"/>
          <port name="port" portNumber="15572" node="//@interimmodels.6/@designmodel/@host.3/@node.0" namedport="//@interimmodels.6/@designmodel/@component.7/@port.0"/>
        </node>
        <node name="MySQL2" component="//@interimmodels.6/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.6/@designmodel/@host.3/@node.1" namedport="//@interimmodels.6/@designmodel/@component.9/@port.0 //@interimmodels.6/@designmodel/@component.9/@port.1"/>
        </node>
      </host>
      <link name="link2" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.0/@node.0/@port.1" target="//@interimmodels.6/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link3" source="//@interimmodels.6/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link4" source="//@interimmodels.6/@designmodel/@host.2/@node.0/@port.2"/>
      <link name="link5" target="//@interimmodels.6/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.0/@node.0/@port.3"/>
      <link name="link9" source="//@interimmodels.6/@designmodel/@host.0/@node.0/@port.4" target="//@interimmodels.6/@designmodel/@host.0/@node.1/@port.0"/>
      <link name="link11" source="//@interimmodels.6/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link12" source="//@interimmodels.6/@designmodel/@host.3/@node.0/@port.2"/>
      <link name="link13" target="//@interimmodels.6/@designmodel/@host.3/@node.1/@port.0"/>
      <link name="link14" target="//@interimmodels.6/@designmodel/@host.3/@node.1/@port.0"/>
      <link name="link16" source="//@interimmodels.6/@designmodel/@host.2/@node.0/@port.5" target="//@interimmodels.6/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.0/@node.0/@port.2" target="//@interimmodels.6/@designmodel/@host.2/@node.0/@port.6"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="2" description="sso - setup-component" nextModel="//@interimmodels.8">
    <designmodel name="interimsso2">
      <component name="ShopFrontend" type="client,broadcaster" deploymentnode="//@interimmodels.7/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,LeastPriviledge">
        <port name="login" role="//@interimmodels.7/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="submit"/>
        </port>
        <port name="browse" role="//@interimmodels.7/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="read"/>
        </port>
        <port name="order" role="//@interimmodels.7/@designmodel/@connector.9/@role.0" type="broadcast,OutboundPort">
          <events name="purchased"/>
        </port>
        <port name="shop" role="//@interimmodels.7/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="itemadded"/>
        </port>
        <port name="sloginref" role="//@interimmodels.7/@designmodel/@connector.12/@role.0">
          <events name="submit"/>
        </port>
      </component>
      <component name="CateloqueService" type="server" deploymentnode="//@interimmodels.7/@designmodel/@host.0/@node.1" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="list" role="//@interimmodels.7/@designmodel/@connector.1/@role.1" type="response,InboundPort">
          <events name="query"/>
        </port>
      </component>
      <component name="UserService" type="server" deploymentnode="//@interimmodels.7/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DefenseInDepth,DenialOfService">
        <port name="auth" role="//@interimmodels.7/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="checked"/>
        </port>
      </component>
      <component name="OrdersService" type="client,server,listener,eventconsumer,readendpoint,datawriter,datareader" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization,DenialOfService,DataTampering">
        <port name="postorder" role="//@interimmodels.7/@designmodel/@connector.4/@role.0 //@interimmodels.7/@designmodel/@connector.7/@role.0 //@interimmodels.7/@designmodel/@connector.9/@role.1 //@interimmodels.7/@designmodel/@connector.11/@role.0" type="request,listen,write,OutboundPort,InboundPort,EventProcessorPort">
          <events name="check" next="//@interimmodels.7/@designmodel/@component.3/@port.0/@events.1"/>
          <events name="save"/>
        </port>
        <port name="get" role="//@interimmodels.7/@designmodel/@connector.2/@role.1 //@interimmodels.7/@designmodel/@connector.8/@role.0" type="response,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="ack"/>
        </port>
      </component>
      <component name="OrdersDB" type="repository,datastore" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.1">
        <port name="writeorder" role="//@interimmodels.7/@designmodel/@connector.7/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="orderwritten"/>
        </port>
        <port name="queryorder" role="//@interimmodels.7/@designmodel/@connector.8/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="orderreaded"/>
        </port>
      </component>
      <component name="CartsService" type="server" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="manage" role="//@interimmodels.7/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="saveitem"/>
        </port>
      </component>
      <component name="Payment" type="repository,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.7/@designmodel/@host.1/@node.1" criticalLevel="High" securityCharacters="DefenseInDepth,Compartmentalization">
        <port name="pay" type="store,InboundPort,TamperingProofPort">
          <events name="paid"/>
        </port>
      </component>
      <component name="ShippingService" type="server,datawriter" deploymentnode="//@interimmodels.7/@designmodel/@host.3/@node.0" securityCharacters="Compartmentalization">
        <port name="postshipping" role="//@interimmodels.7/@designmodel/@connector.4/@role.1 //@interimmodels.7/@designmodel/@connector.6/@role.0" type="response,write,OutboundPort,InboundPort,EventProcessorPort">
          <events name="posted"/>
        </port>
      </component>
      <component name="ShippingWorker" type="readendpoint,datareader" deploymentnode="//@interimmodels.7/@designmodel/@host.3/@node.0">
        <port name="listqueue" role="//@interimmodels.7/@designmodel/@connector.5/@role.0" type="read,OutboundPort,EventProcessorPort">
          <events name="renderqueue"/>
        </port>
      </component>
      <component name="QueueDB" type="repository,datastore" deploymentnode="//@interimmodels.7/@designmodel/@host.3/@node.1">
        <port name="writequeue" role="//@interimmodels.7/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="queuewritten"/>
        </port>
        <port name="readqueue" role="//@interimmodels.7/@designmodel/@connector.5/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="queuereaded"/>
        </port>
      </component>
      <component name="ShopBackend" type="client" deploymentnode="//@interimmodels.7/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface">
        <port name="listorder" role="//@interimmodels.7/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref" role="//@interimmodels.7/@designmodel/@connector.11/@role.1">
          <events name="checked"/>
        </port>
      </component>
      <component name="ssoserverref">
        <port name="authref">
          <events name="tokenissued"/>
        </port>
      </component>
      <connector name="userwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.0"/>
      </connector>
      <connector name="cateloquewire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.1"/>
      </connector>
      <connector name="orderquerywire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.8/@role.0" connector="//@interimmodels.7/@designmodel/@connector.2"/>
      </connector>
      <connector name="cartwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.3"/>
      </connector>
      <connector name="shippingwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.6/@role.0" connector="//@interimmodels.7/@designmodel/@connector.4"/>
      </connector>
      <connector name="queuereadwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.5"/>
        <role name="readstorage" roletype="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.5"/>
      </connector>
      <connector name="shippinglogwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.6"/>
      </connector>
      <connector name="orderlogwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.11/@role.0" connector="//@interimmodels.7/@designmodel/@connector.7"/>
        <role name="writestorage" roletype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.7"/>
      </connector>
      <connector name="orderreadwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.8"/>
        <role name="readstorage" roletype="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.8"/>
      </connector>
      <connector name="orderwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.9"/>
        <role name="subscriber" roletype="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.7/@role.0" connector="//@interimmodels.7/@designmodel/@connector.9"/>
      </connector>
      <connector name="paywiretoremove" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writertoremove" roletype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.10"/>
        <role name="writestoragetoremove" roletype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.10"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.4/@role.0" connector="//@interimmodels.7/@designmodel/@connector.11">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.7/@designmodel/@connector.11">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <connector name="signwireref">
        <role name="requester" type="tolink" connector="//@interimmodels.7/@designmodel/@connector.12">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/sso.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="in" connector="//@interimmodels.7/@designmodel/@connector.12">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/sso.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.7/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.7/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.7/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.7/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.4" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.7/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.7/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.7/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.7/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.7/@designmodel/@archstyle.4/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.7/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.7/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.7/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.7/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.7/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.7/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.7/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.7/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="15" verifyTime="0.0056955" testport="//@interimmodels.7/@designmodel/@component.0/@port.3" traceExample="init -> ShopFrontend_shop_itemadded -> ShopFrontend_cartwire_requester_process -> cartwire_req!48 -> cartwire_req?48 -> CartsService_cartwire_responder_invoke -> CartsService_manage_saveitem -> CartsService_cartwire_responder_process -> cartwire_res!48 -> cartwire_res?48" exprText="[]  (ShopFrontend.shop.itemadded -> &lt;> CartsService.manage.saveitem)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.0/@port.3/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="63" verifyTime="0.0112015" testport="//@interimmodels.7/@designmodel/@component.0/@port.2" traceExample="init -> ShopFrontend_order_purchased -> ShopFrontend_orderwire_publisher_process -> orderwire_pub!79 -> orderwire_pub?79 -> OrdersService_orderlogwire_writer_request -> orderlogwire_req!79 -> orderlogwire_req?79 -> OrdersDB_orderlogwire_writestorage_invoke -> OrdersDB_writeorder_orderwritten -> OrdersDB_orderlogwire_writestorage_process -> orderlogwire_res!79 -> orderlogwire_res?79 -> OrdersService_postorder_check -> OrdersService_postorder_save -> OrdersService_orderlogwire_writer_process -> OrdersService_orderlogwire_writer_Skip -> OrdersService_paywire_requester_process -> paywire_req!79 -> paywire_req?79 -> Payment_paywire_responder_invoke -> Payment_pay_paid -> Payment_paywire_responder_process -> paywire_res!79 -> paywire_res?79 -> OrdersService_paywire_requester_Skip -> OrdersService_shippingwire_requester_process -> shippingwire_req!79 -> shippingwire_req?79 -> ShippingService_shippingwire_responder_invoke -> ShippingService_shippinglogwire_writer_request -> shippinglogwire_req!79 -> shippinglogwire_req?79 -> QueueDB_shippinglogwire_writestorage_invoke -> QueueDB_writequeue_queuewritten -> QueueDB_shippinglogwire_writestorage_process -> shippinglogwire_res!79 -> shippinglogwire_res?79 -> ShippingService_postshipping_posted -> ShippingService_shippinglogwire_writer_process -> ShippingService_shippinglogwire_writer_Skip -> ShippingService_shippingwire_responder_process -> shippingwire_res!79 -> shippingwire_res?79 -> OrdersService_shippingwire_requester_Skip -> OrdersService_orderwire_subscriber_process" exprText="[]  (Payment.pay.paid -> &lt;> ShippingService.postshipping.posted)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.7/@designmodel" visitedStates="10" verifyTime="0.005912" testport="//@interimmodels.7/@designmodel/@component.0/@port.3" traceExample="init -> ShopFrontend_shop_itemadded -> ShopFrontend_cartwire_requester_process -> cartwire_req!51 -> cartwire_req?51 -> CartsService_cartwire_responder_invoke -> CartsService_manage_saveitem -> CartsService_cartwire_responder_process -> cartwire_res!51 -> cartwire_res?51" exprText="[]  (OrdersService.postorder.save -> &lt;> Payment.pay.paid)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.3/@port.0/@events.1" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="15" verifyTime="0.0511383" testport="//@interimmodels.7/@designmodel/@component.0/@port.0" traceExample="init -> ShopFrontend_login_submit -> ShopFrontend_userwire_requester_process -> userwire_req!38 -> userwire_req?38 -> UserService_userwire_responder_invoke -> UserService_auth_checked -> UserService_userwire_responder_process -> userwire_res!38 -> userwire_res?38" exprText="[]  (ShopFrontend.login.submit -> &lt;> UserService.auth.checked)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.7/@designmodel" counterExample="init -> ShopFrontend_browse_read -> ShopFrontend_cateloquewire_requester_process -> cateloquewire_req!62 -> cateloquewire_req?62 -> CateloqueService_cateloquewire_responder_invoke -> CateloqueService_list_query -> CateloqueService_cateloquewire_responder_process -> cateloquewire_res!62 -> cateloquewire_res?62" visitedStates="24" verifyTime="0.005226199999999999" testport="//@interimmodels.7/@designmodel/@component.0/@port.1" traceExample="init -> ShopFrontend_browse_read -> ShopFrontend_cateloquewire_requester_process -> cateloquewire_req!91 -> cateloquewire_req?91 -> CateloqueService_cateloquewire_responder_invoke -> CateloqueService_list_query -> CateloqueService_cateloquewire_responder_process -> cateloquewire_res!91 -> cateloquewire_res?91" exprText="[]  (&lt;> ShopFrontend.browse.read -> &lt;> CateloqueService.list.query)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop6" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0045632" testport="//@interimmodels.7/@designmodel/@component.10/@port.0" traceExample="init -> ShopBackend_listorder_renderlist -> ShopBackend_orderquerywire_requester_process -> orderquerywire_req!39 -> orderquerywire_req?39 -> OrdersService_orderquerywire_responder_invoke -> OrdersService_get_ack -> OrdersService_orderreadwire_reader_process -> orderreadwire_req!39 -> orderreadwire_req?39 -> OrdersDB_orderreadwire_readstorage_invoke -> OrdersDB_queryorder_orderreaded -> OrdersDB_orderreadwire_readstorage_process -> orderreadwire_res!39 -> orderreadwire_res?39 -> OrdersService_orderreadwire_reader_Skip -> OrdersService_orderquerywire_responder_process -> orderquerywire_res!39 -> orderquerywire_res?39" exprText="[]  (ShopBackend.listorder.renderlist -> &lt;> OrdersService.get.ack)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.5">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.10/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.5/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.3/@port.1/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop7" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="59" verifyTime="0.0096414" testport="//@interimmodels.7/@designmodel/@component.0/@port.2" traceExample="init -> ShopFrontend_order_purchased -> ShopFrontend_orderwire_publisher_process -> orderwire_pub!93 -> orderwire_pub?93 -> OrdersService_orderlogwire_writer_request -> orderlogwire_req!93 -> orderlogwire_req?93 -> OrdersDB_orderlogwire_writestorage_invoke -> OrdersDB_writeorder_orderwritten -> OrdersDB_orderlogwire_writestorage_process -> orderlogwire_res!93 -> orderlogwire_res?93 -> OrdersService_postorder_check -> OrdersService_postorder_save -> OrdersService_orderlogwire_writer_process -> OrdersService_orderlogwire_writer_Skip -> OrdersService_paywire_requester_process -> paywire_req!93 -> paywire_req?93 -> Payment_paywire_responder_invoke -> Payment_pay_paid -> Payment_paywire_responder_process -> paywire_res!93 -> paywire_res?93 -> OrdersService_paywire_requester_Skip -> OrdersService_shippingwire_requester_process -> shippingwire_req!93 -> shippingwire_req?93 -> ShippingService_shippingwire_responder_invoke -> ShippingService_shippinglogwire_writer_request -> shippinglogwire_req!93 -> shippinglogwire_req?93 -> QueueDB_shippinglogwire_writestorage_invoke -> QueueDB_writequeue_queuewritten -> QueueDB_shippinglogwire_writestorage_process -> shippinglogwire_res!93 -> shippinglogwire_res?93 -> ShippingService_postshipping_posted -> ShippingService_shippinglogwire_writer_process -> ShippingService_shippinglogwire_writer_Skip -> ShippingService_shippingwire_responder_process -> shippingwire_res!93 -> shippingwire_res?93 -> OrdersService_shippingwire_requester_Skip -> OrdersService_orderwire_subscriber_process" exprText="[]  (ShopFrontend.order.purchased -> &lt;> OrdersService.postorder.save)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.6">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.3/@port.0/@events.1" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.0/@port.2/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.6/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.7/@designmodel/@component.3/@port.0" exprText="[]  (OrdersService.postorder.save-> &lt;> paymentgatewayref.commitref.checked)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="sso1" testport="//@interimmodels.7/@designmodel/@component.0/@port.4" exprText="[]  (ShopFrontend.sloginref.submit -> &lt;> ssoserverref.authref.tokenissued)"/>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="NodeJSContainer1" component="//@interimmodels.7/@designmodel/@component.0 //@interimmodels.7/@designmodel/@component.10">
          <port name="port" portNumber="15551" node="//@interimmodels.7/@designmodel/@host.0/@node.0" namedport="//@interimmodels.7/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="15552" node="//@interimmodels.7/@designmodel/@host.0/@node.0" namedport="//@interimmodels.7/@designmodel/@component.0/@port.2"/>
          <port name="port" portNumber="15553" node="//@interimmodels.7/@designmodel/@host.0/@node.0" namedport="//@interimmodels.7/@designmodel/@component.10/@port.0"/>
          <port name="port" portNumber="15554" node="//@interimmodels.7/@designmodel/@host.0/@node.0" namedport="//@interimmodels.7/@designmodel/@component.0/@port.3"/>
          <port name="port" portNumber="15555" node="//@interimmodels.7/@designmodel/@host.0/@node.0" namedport="//@interimmodels.7/@designmodel/@component.0/@port.1"/>
        </node>
        <node name="GoContainer3" component="//@interimmodels.7/@designmodel/@component.1">
          <port name="port" portNumber="80" node="//@interimmodels.7/@designmodel/@host.0/@node.1" namedport="//@interimmodels.7/@designmodel/@component.1/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="SecureServer">
        <node name="GoContainer1" component="//@interimmodels.7/@designmodel/@component.2">
          <port name="port" portNumber="80" node="//@interimmodels.7/@designmodel/@host.1/@node.0" namedport="//@interimmodels.7/@designmodel/@component.2/@port.0" hasFirewall="true"/>
        </node>
        <node name="GoContainer2" component="//@interimmodels.7/@designmodel/@component.6">
          <port name="port" portNumber="80" node="//@interimmodels.7/@designmodel/@host.1/@node.1" namedport="//@interimmodels.7/@designmodel/@component.6/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="LocalServer">
        <node name="JEEContainer1" component="//@interimmodels.7/@designmodel/@component.3 //@interimmodels.7/@designmodel/@component.5">
          <port name="port" portNumber="80" namedport="//@interimmodels.7/@designmodel/@component.3/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true"/>
          <port name="port" portNumber="15561" node="//@interimmodels.7/@designmodel/@host.2/@node.0" namedport="//@interimmodels.7/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15562" node="//@interimmodels.7/@designmodel/@host.2/@node.0" namedport="//@interimmodels.7/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15563" node="//@interimmodels.7/@designmodel/@host.2/@node.0" namedport="//@interimmodels.7/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15564" node="//@interimmodels.7/@designmodel/@host.2/@node.0" namedport="//@interimmodels.7/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15566" node="//@interimmodels.7/@designmodel/@host.2/@node.0" namedport="//@interimmodels.7/@designmodel/@component.3/@port.1"/>
          <port name="port" portNumber="81" node="//@interimmodels.7/@designmodel/@host.2/@node.0" namedport="//@interimmodels.7/@designmodel/@component.3/@port.1"/>
        </node>
        <node name="MySQL1" component="//@interimmodels.7/@designmodel/@component.4">
          <port name="port" portNumber="3306" node="//@interimmodels.7/@designmodel/@host.2/@node.1" namedport="//@interimmodels.7/@designmodel/@component.4/@port.0 //@interimmodels.7/@designmodel/@component.4/@port.1"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node name="JEEContainer4" component="//@interimmodels.7/@designmodel/@component.7 //@interimmodels.7/@designmodel/@component.8">
          <port name="port" portNumber="80" node="//@interimmodels.7/@designmodel/@host.3/@node.0" namedport="//@interimmodels.7/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
          <port name="port" portNumber="15571" node="//@interimmodels.7/@designmodel/@host.3/@node.0" namedport="//@interimmodels.7/@designmodel/@component.7/@port.0"/>
          <port name="port" portNumber="15572" node="//@interimmodels.7/@designmodel/@host.3/@node.0" namedport="//@interimmodels.7/@designmodel/@component.7/@port.0"/>
        </node>
        <node name="MySQL2" component="//@interimmodels.7/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.7/@designmodel/@host.3/@node.1" namedport="//@interimmodels.7/@designmodel/@component.9/@port.0 //@interimmodels.7/@designmodel/@component.9/@port.1"/>
        </node>
      </host>
      <link name="link2" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.0/@node.0/@port.1" target="//@interimmodels.7/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link3" source="//@interimmodels.7/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link4" source="//@interimmodels.7/@designmodel/@host.2/@node.0/@port.2"/>
      <link name="link5" target="//@interimmodels.7/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.0/@node.0/@port.3"/>
      <link name="link9" source="//@interimmodels.7/@designmodel/@host.0/@node.0/@port.4" target="//@interimmodels.7/@designmodel/@host.0/@node.1/@port.0"/>
      <link name="link11" source="//@interimmodels.7/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link12" source="//@interimmodels.7/@designmodel/@host.3/@node.0/@port.2"/>
      <link name="link13" target="//@interimmodels.7/@designmodel/@host.3/@node.1/@port.0"/>
      <link name="link14" target="//@interimmodels.7/@designmodel/@host.3/@node.1/@port.0"/>
      <link name="link16" source="//@interimmodels.7/@designmodel/@host.2/@node.0/@port.5" target="//@interimmodels.7/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.0/@node.0/@port.2" target="//@interimmodels.7/@designmodel/@host.2/@node.0/@port.6"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="3" description="sso - establish-link" nextModel="//@interimmodels.9">
    <designmodel name="interimsso3">
      <component name="ShopFrontend" type="client,broadcaster" deploymentnode="//@interimmodels.8/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,LeastPriviledge">
        <port name="login" role="//@interimmodels.8/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="submit"/>
        </port>
        <port name="browse" role="//@interimmodels.8/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="read"/>
        </port>
        <port name="order" role="//@interimmodels.8/@designmodel/@connector.9/@role.0" type="broadcast,OutboundPort">
          <events name="purchased"/>
        </port>
        <port name="shop" role="//@interimmodels.8/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="itemadded"/>
        </port>
        <port name="sloginref" role="//@interimmodels.8/@designmodel/@connector.12/@role.0">
          <events name="submit"/>
        </port>
      </component>
      <component name="CateloqueService" type="server" deploymentnode="//@interimmodels.8/@designmodel/@host.0/@node.1" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="list" role="//@interimmodels.8/@designmodel/@connector.1/@role.1" type="response,InboundPort">
          <events name="query"/>
        </port>
      </component>
      <component name="UserService" type="server" deploymentnode="//@interimmodels.8/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DefenseInDepth,DenialOfService">
        <port name="auth" role="//@interimmodels.8/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="checked"/>
        </port>
      </component>
      <component name="OrdersService" type="client,server,listener,eventconsumer,readendpoint,datawriter,datareader" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization,DenialOfService,DataTampering">
        <port name="postorder" role="//@interimmodels.8/@designmodel/@connector.4/@role.0 //@interimmodels.8/@designmodel/@connector.7/@role.0 //@interimmodels.8/@designmodel/@connector.9/@role.1 //@interimmodels.8/@designmodel/@connector.11/@role.0" type="request,listen,write,OutboundPort,InboundPort,EventProcessorPort">
          <events name="check" next="//@interimmodels.8/@designmodel/@component.3/@port.0/@events.1"/>
          <events name="save"/>
        </port>
        <port name="get" role="//@interimmodels.8/@designmodel/@connector.2/@role.1 //@interimmodels.8/@designmodel/@connector.8/@role.0" type="response,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="ack"/>
        </port>
      </component>
      <component name="OrdersDB" type="repository,datastore" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.1">
        <port name="writeorder" role="//@interimmodels.8/@designmodel/@connector.7/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="orderwritten"/>
        </port>
        <port name="queryorder" role="//@interimmodels.8/@designmodel/@connector.8/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="orderreaded"/>
        </port>
      </component>
      <component name="CartsService" type="server" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="manage" role="//@interimmodels.8/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="saveitem"/>
        </port>
      </component>
      <component name="Payment" type="repository,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.8/@designmodel/@host.1/@node.1" criticalLevel="High" securityCharacters="DefenseInDepth,Compartmentalization">
        <port name="pay" type="store,InboundPort,TamperingProofPort">
          <events name="paid"/>
        </port>
      </component>
      <component name="ShippingService" type="server,datawriter" deploymentnode="//@interimmodels.8/@designmodel/@host.3/@node.0" securityCharacters="Compartmentalization">
        <port name="postshipping" role="//@interimmodels.8/@designmodel/@connector.4/@role.1 //@interimmodels.8/@designmodel/@connector.6/@role.0" type="response,write,OutboundPort,InboundPort,EventProcessorPort">
          <events name="posted"/>
        </port>
      </component>
      <component name="ShippingWorker" type="readendpoint,datareader" deploymentnode="//@interimmodels.8/@designmodel/@host.3/@node.0">
        <port name="listqueue" role="//@interimmodels.8/@designmodel/@connector.5/@role.0" type="read,OutboundPort,EventProcessorPort">
          <events name="renderqueue"/>
        </port>
      </component>
      <component name="QueueDB" type="repository,datastore" deploymentnode="//@interimmodels.8/@designmodel/@host.3/@node.1">
        <port name="writequeue" role="//@interimmodels.8/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="queuewritten"/>
        </port>
        <port name="readqueue" role="//@interimmodels.8/@designmodel/@connector.5/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="queuereaded"/>
        </port>
      </component>
      <component name="ShopBackend" type="client" deploymentnode="//@interimmodels.8/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface">
        <port name="listorder" role="//@interimmodels.8/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref" role="//@interimmodels.8/@designmodel/@connector.11/@role.1">
          <events name="checked"/>
        </port>
      </component>
      <component name="ssoserverref">
        <port name="authref" role="//@interimmodels.8/@designmodel/@connector.12/@role.1">
          <events name="tokenissued"/>
        </port>
      </component>
      <connector name="userwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.0"/>
      </connector>
      <connector name="cateloquewire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.1"/>
      </connector>
      <connector name="orderquerywire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.8/@role.0" connector="//@interimmodels.8/@designmodel/@connector.2"/>
      </connector>
      <connector name="cartwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.3"/>
      </connector>
      <connector name="shippingwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.6/@role.0" connector="//@interimmodels.8/@designmodel/@connector.4"/>
      </connector>
      <connector name="queuereadwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.5"/>
        <role name="readstorage" roletype="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.5"/>
      </connector>
      <connector name="shippinglogwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.6"/>
      </connector>
      <connector name="orderlogwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.11/@role.0" connector="//@interimmodels.8/@designmodel/@connector.7"/>
        <role name="writestorage" roletype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.7"/>
      </connector>
      <connector name="orderreadwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.8"/>
        <role name="readstorage" roletype="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.8"/>
      </connector>
      <connector name="orderwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.9"/>
        <role name="subscriber" roletype="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.7/@role.0" connector="//@interimmodels.8/@designmodel/@connector.9"/>
      </connector>
      <connector name="paywiretoremove" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writertoremove" roletype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.10"/>
        <role name="writestoragetoremove" roletype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.10"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.4/@role.0" connector="//@interimmodels.8/@designmodel/@connector.11">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.8/@designmodel/@connector.11">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <connector name="signwireref">
        <role name="requester" type="tolink" connector="//@interimmodels.8/@designmodel/@connector.12">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/sso.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.8/@designmodel/@connector.12">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/sso.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.8/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.8/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.8/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.8/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.4" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.8/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.8/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.8/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.8/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.8/@designmodel/@archstyle.4/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.8/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.8/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.8/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.8/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.8/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.8/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.8/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.8/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="15" verifyTime="0.0056955" testport="//@interimmodels.8/@designmodel/@component.0/@port.3" traceExample="init -> ShopFrontend_shop_itemadded -> ShopFrontend_cartwire_requester_process -> cartwire_req!48 -> cartwire_req?48 -> CartsService_cartwire_responder_invoke -> CartsService_manage_saveitem -> CartsService_cartwire_responder_process -> cartwire_res!48 -> cartwire_res?48" exprText="[]  (ShopFrontend.shop.itemadded -> &lt;> CartsService.manage.saveitem)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.0/@port.3/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="63" verifyTime="0.0112015" testport="//@interimmodels.8/@designmodel/@component.0/@port.2" traceExample="init -> ShopFrontend_order_purchased -> ShopFrontend_orderwire_publisher_process -> orderwire_pub!79 -> orderwire_pub?79 -> OrdersService_orderlogwire_writer_request -> orderlogwire_req!79 -> orderlogwire_req?79 -> OrdersDB_orderlogwire_writestorage_invoke -> OrdersDB_writeorder_orderwritten -> OrdersDB_orderlogwire_writestorage_process -> orderlogwire_res!79 -> orderlogwire_res?79 -> OrdersService_postorder_check -> OrdersService_postorder_save -> OrdersService_orderlogwire_writer_process -> OrdersService_orderlogwire_writer_Skip -> OrdersService_paywire_requester_process -> paywire_req!79 -> paywire_req?79 -> Payment_paywire_responder_invoke -> Payment_pay_paid -> Payment_paywire_responder_process -> paywire_res!79 -> paywire_res?79 -> OrdersService_paywire_requester_Skip -> OrdersService_shippingwire_requester_process -> shippingwire_req!79 -> shippingwire_req?79 -> ShippingService_shippingwire_responder_invoke -> ShippingService_shippinglogwire_writer_request -> shippinglogwire_req!79 -> shippinglogwire_req?79 -> QueueDB_shippinglogwire_writestorage_invoke -> QueueDB_writequeue_queuewritten -> QueueDB_shippinglogwire_writestorage_process -> shippinglogwire_res!79 -> shippinglogwire_res?79 -> ShippingService_postshipping_posted -> ShippingService_shippinglogwire_writer_process -> ShippingService_shippinglogwire_writer_Skip -> ShippingService_shippingwire_responder_process -> shippingwire_res!79 -> shippingwire_res?79 -> OrdersService_shippingwire_requester_Skip -> OrdersService_orderwire_subscriber_process" exprText="[]  (Payment.pay.paid -> &lt;> ShippingService.postshipping.posted)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.8/@designmodel" visitedStates="10" verifyTime="0.005912" testport="//@interimmodels.8/@designmodel/@component.0/@port.3" traceExample="init -> ShopFrontend_shop_itemadded -> ShopFrontend_cartwire_requester_process -> cartwire_req!51 -> cartwire_req?51 -> CartsService_cartwire_responder_invoke -> CartsService_manage_saveitem -> CartsService_cartwire_responder_process -> cartwire_res!51 -> cartwire_res?51" exprText="[]  (OrdersService.postorder.save -> &lt;> Payment.pay.paid)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.3/@port.0/@events.1" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="15" verifyTime="0.0511383" testport="//@interimmodels.8/@designmodel/@component.0/@port.0" traceExample="init -> ShopFrontend_login_submit -> ShopFrontend_userwire_requester_process -> userwire_req!38 -> userwire_req?38 -> UserService_userwire_responder_invoke -> UserService_auth_checked -> UserService_userwire_responder_process -> userwire_res!38 -> userwire_res?38" exprText="[]  (ShopFrontend.login.submit -> &lt;> UserService.auth.checked)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.8/@designmodel" counterExample="init -> ShopFrontend_browse_read -> ShopFrontend_cateloquewire_requester_process -> cateloquewire_req!62 -> cateloquewire_req?62 -> CateloqueService_cateloquewire_responder_invoke -> CateloqueService_list_query -> CateloqueService_cateloquewire_responder_process -> cateloquewire_res!62 -> cateloquewire_res?62" visitedStates="24" verifyTime="0.005226199999999999" testport="//@interimmodels.8/@designmodel/@component.0/@port.1" traceExample="init -> ShopFrontend_browse_read -> ShopFrontend_cateloquewire_requester_process -> cateloquewire_req!91 -> cateloquewire_req?91 -> CateloqueService_cateloquewire_responder_invoke -> CateloqueService_list_query -> CateloqueService_cateloquewire_responder_process -> cateloquewire_res!91 -> cateloquewire_res?91" exprText="[]  (&lt;> ShopFrontend.browse.read -> &lt;> CateloqueService.list.query)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop6" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0045632" testport="//@interimmodels.8/@designmodel/@component.10/@port.0" traceExample="init -> ShopBackend_listorder_renderlist -> ShopBackend_orderquerywire_requester_process -> orderquerywire_req!39 -> orderquerywire_req?39 -> OrdersService_orderquerywire_responder_invoke -> OrdersService_get_ack -> OrdersService_orderreadwire_reader_process -> orderreadwire_req!39 -> orderreadwire_req?39 -> OrdersDB_orderreadwire_readstorage_invoke -> OrdersDB_queryorder_orderreaded -> OrdersDB_orderreadwire_readstorage_process -> orderreadwire_res!39 -> orderreadwire_res?39 -> OrdersService_orderreadwire_reader_Skip -> OrdersService_orderquerywire_responder_process -> orderquerywire_res!39 -> orderquerywire_res?39" exprText="[]  (ShopBackend.listorder.renderlist -> &lt;> OrdersService.get.ack)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.5">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.10/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.5/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.3/@port.1/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop7" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="59" verifyTime="0.0096414" testport="//@interimmodels.8/@designmodel/@component.0/@port.2" traceExample="init -> ShopFrontend_order_purchased -> ShopFrontend_orderwire_publisher_process -> orderwire_pub!93 -> orderwire_pub?93 -> OrdersService_orderlogwire_writer_request -> orderlogwire_req!93 -> orderlogwire_req?93 -> OrdersDB_orderlogwire_writestorage_invoke -> OrdersDB_writeorder_orderwritten -> OrdersDB_orderlogwire_writestorage_process -> orderlogwire_res!93 -> orderlogwire_res?93 -> OrdersService_postorder_check -> OrdersService_postorder_save -> OrdersService_orderlogwire_writer_process -> OrdersService_orderlogwire_writer_Skip -> OrdersService_paywire_requester_process -> paywire_req!93 -> paywire_req?93 -> Payment_paywire_responder_invoke -> Payment_pay_paid -> Payment_paywire_responder_process -> paywire_res!93 -> paywire_res?93 -> OrdersService_paywire_requester_Skip -> OrdersService_shippingwire_requester_process -> shippingwire_req!93 -> shippingwire_req?93 -> ShippingService_shippingwire_responder_invoke -> ShippingService_shippinglogwire_writer_request -> shippinglogwire_req!93 -> shippinglogwire_req?93 -> QueueDB_shippinglogwire_writestorage_invoke -> QueueDB_writequeue_queuewritten -> QueueDB_shippinglogwire_writestorage_process -> shippinglogwire_res!93 -> shippinglogwire_res?93 -> ShippingService_postshipping_posted -> ShippingService_shippinglogwire_writer_process -> ShippingService_shippinglogwire_writer_Skip -> ShippingService_shippingwire_responder_process -> shippingwire_res!93 -> shippingwire_res?93 -> OrdersService_shippingwire_requester_Skip -> OrdersService_orderwire_subscriber_process" exprText="[]  (ShopFrontend.order.purchased -> &lt;> OrdersService.postorder.save)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.6">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.3/@port.0/@events.1" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.0/@port.2/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.6/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.8/@designmodel/@component.3/@port.0" exprText="[]  (OrdersService.postorder.save-> &lt;> paymentgatewayref.commitref.checked)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="sso1" testport="//@interimmodels.8/@designmodel/@component.0/@port.4" exprText="[]  (ShopFrontend.sloginref.submit -> &lt;> ssoserverref.authref.tokenissued)"/>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="NodeJSContainer1" component="//@interimmodels.8/@designmodel/@component.0 //@interimmodels.8/@designmodel/@component.10">
          <port name="port" portNumber="15551" node="//@interimmodels.8/@designmodel/@host.0/@node.0" namedport="//@interimmodels.8/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="15552" node="//@interimmodels.8/@designmodel/@host.0/@node.0" namedport="//@interimmodels.8/@designmodel/@component.0/@port.2"/>
          <port name="port" portNumber="15553" node="//@interimmodels.8/@designmodel/@host.0/@node.0" namedport="//@interimmodels.8/@designmodel/@component.10/@port.0"/>
          <port name="port" portNumber="15554" node="//@interimmodels.8/@designmodel/@host.0/@node.0" namedport="//@interimmodels.8/@designmodel/@component.0/@port.3"/>
          <port name="port" portNumber="15555" node="//@interimmodels.8/@designmodel/@host.0/@node.0" namedport="//@interimmodels.8/@designmodel/@component.0/@port.1"/>
        </node>
        <node name="GoContainer3" component="//@interimmodels.8/@designmodel/@component.1">
          <port name="port" portNumber="80" node="//@interimmodels.8/@designmodel/@host.0/@node.1" namedport="//@interimmodels.8/@designmodel/@component.1/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="SecureServer">
        <node name="GoContainer1" component="//@interimmodels.8/@designmodel/@component.2">
          <port name="port" portNumber="80" node="//@interimmodels.8/@designmodel/@host.1/@node.0" namedport="//@interimmodels.8/@designmodel/@component.2/@port.0" hasFirewall="true"/>
        </node>
        <node name="GoContainer2" component="//@interimmodels.8/@designmodel/@component.6">
          <port name="port" portNumber="80" node="//@interimmodels.8/@designmodel/@host.1/@node.1" namedport="//@interimmodels.8/@designmodel/@component.6/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="LocalServer">
        <node name="JEEContainer1" component="//@interimmodels.8/@designmodel/@component.3 //@interimmodels.8/@designmodel/@component.5">
          <port name="port" portNumber="80" namedport="//@interimmodels.8/@designmodel/@component.3/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true"/>
          <port name="port" portNumber="15561" node="//@interimmodels.8/@designmodel/@host.2/@node.0" namedport="//@interimmodels.8/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15562" node="//@interimmodels.8/@designmodel/@host.2/@node.0" namedport="//@interimmodels.8/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15563" node="//@interimmodels.8/@designmodel/@host.2/@node.0" namedport="//@interimmodels.8/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15564" node="//@interimmodels.8/@designmodel/@host.2/@node.0" namedport="//@interimmodels.8/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15566" node="//@interimmodels.8/@designmodel/@host.2/@node.0" namedport="//@interimmodels.8/@designmodel/@component.3/@port.1"/>
          <port name="port" portNumber="81" node="//@interimmodels.8/@designmodel/@host.2/@node.0" namedport="//@interimmodels.8/@designmodel/@component.3/@port.1"/>
        </node>
        <node name="MySQL1" component="//@interimmodels.8/@designmodel/@component.4">
          <port name="port" portNumber="3306" node="//@interimmodels.8/@designmodel/@host.2/@node.1" namedport="//@interimmodels.8/@designmodel/@component.4/@port.0 //@interimmodels.8/@designmodel/@component.4/@port.1"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node name="JEEContainer4" component="//@interimmodels.8/@designmodel/@component.7 //@interimmodels.8/@designmodel/@component.8">
          <port name="port" portNumber="80" node="//@interimmodels.8/@designmodel/@host.3/@node.0" namedport="//@interimmodels.8/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
          <port name="port" portNumber="15571" node="//@interimmodels.8/@designmodel/@host.3/@node.0" namedport="//@interimmodels.8/@designmodel/@component.7/@port.0"/>
          <port name="port" portNumber="15572" node="//@interimmodels.8/@designmodel/@host.3/@node.0" namedport="//@interimmodels.8/@designmodel/@component.7/@port.0"/>
        </node>
        <node name="MySQL2" component="//@interimmodels.8/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.8/@designmodel/@host.3/@node.1" namedport="//@interimmodels.8/@designmodel/@component.9/@port.0 //@interimmodels.8/@designmodel/@component.9/@port.1"/>
        </node>
      </host>
      <link name="link2" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.0/@node.0/@port.1" target="//@interimmodels.8/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link3" source="//@interimmodels.8/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link4" source="//@interimmodels.8/@designmodel/@host.2/@node.0/@port.2"/>
      <link name="link5" target="//@interimmodels.8/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.0/@node.0/@port.3"/>
      <link name="link9" source="//@interimmodels.8/@designmodel/@host.0/@node.0/@port.4" target="//@interimmodels.8/@designmodel/@host.0/@node.1/@port.0"/>
      <link name="link11" source="//@interimmodels.8/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link12" source="//@interimmodels.8/@designmodel/@host.3/@node.0/@port.2"/>
      <link name="link13" target="//@interimmodels.8/@designmodel/@host.3/@node.1/@port.0"/>
      <link name="link14" target="//@interimmodels.8/@designmodel/@host.3/@node.1/@port.0"/>
      <link name="link16" source="//@interimmodels.8/@designmodel/@host.2/@node.0/@port.5" target="//@interimmodels.8/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.0/@node.0/@port.2" target="//@interimmodels.8/@designmodel/@host.2/@node.0/@port.6"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels description="report - setup-component" nextModel="//@interimmodels.10">
    <designmodel name="interimreport0">
      <component name="ShopFrontend" type="client,broadcaster" deploymentnode="//@interimmodels.9/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,LeastPriviledge">
        <port name="login" role="//@interimmodels.9/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="submit"/>
        </port>
        <port name="browse" role="//@interimmodels.9/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="read"/>
        </port>
        <port name="order" role="//@interimmodels.9/@designmodel/@connector.9/@role.0" type="broadcast,OutboundPort">
          <events name="purchased"/>
        </port>
        <port name="shop" role="//@interimmodels.9/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="itemadded"/>
        </port>
        <port name="sloginref" role="//@interimmodels.9/@designmodel/@connector.12/@role.0">
          <events name="submit"/>
        </port>
      </component>
      <component name="CateloqueService" type="server" deploymentnode="//@interimmodels.9/@designmodel/@host.0/@node.1" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="list" role="//@interimmodels.9/@designmodel/@connector.1/@role.1" type="response,InboundPort">
          <events name="query"/>
        </port>
      </component>
      <component name="UserService" type="server" deploymentnode="//@interimmodels.9/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DefenseInDepth,DenialOfService">
        <port name="auth" role="//@interimmodels.9/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="checked"/>
        </port>
      </component>
      <component name="OrdersService" type="client,server,listener,eventconsumer,readendpoint,datawriter,datareader" deploymentnode="//@interimmodels.9/@designmodel/@host.2/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization,DenialOfService,DataTampering">
        <port name="postorder" role="//@interimmodels.9/@designmodel/@connector.4/@role.0 //@interimmodels.9/@designmodel/@connector.7/@role.0 //@interimmodels.9/@designmodel/@connector.9/@role.1 //@interimmodels.9/@designmodel/@connector.11/@role.0" type="request,listen,write,OutboundPort,InboundPort,EventProcessorPort">
          <events name="check" next="//@interimmodels.9/@designmodel/@component.3/@port.0/@events.1"/>
          <events name="save"/>
        </port>
        <port name="get" role="//@interimmodels.9/@designmodel/@connector.2/@role.1 //@interimmodels.9/@designmodel/@connector.8/@role.0" type="response,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="ack"/>
        </port>
      </component>
      <component name="OrdersDB" type="repository,datastore" deploymentnode="//@interimmodels.9/@designmodel/@host.2/@node.1">
        <port name="writeorder" role="//@interimmodels.9/@designmodel/@connector.7/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="orderwritten"/>
        </port>
        <port name="queryorder" role="//@interimmodels.9/@designmodel/@connector.8/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="orderreaded"/>
        </port>
      </component>
      <component name="CartsService" type="server" deploymentnode="//@interimmodels.9/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="manage" role="//@interimmodels.9/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="saveitem"/>
        </port>
      </component>
      <component name="Payment" type="repository,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.9/@designmodel/@host.1/@node.1" criticalLevel="High" securityCharacters="DefenseInDepth,Compartmentalization">
        <port name="pay" type="store,InboundPort,TamperingProofPort">
          <events name="paid"/>
        </port>
      </component>
      <component name="ShippingService" type="server,datawriter" deploymentnode="//@interimmodels.9/@designmodel/@host.3/@node.0" securityCharacters="Compartmentalization">
        <port name="postshipping" role="//@interimmodels.9/@designmodel/@connector.4/@role.1 //@interimmodels.9/@designmodel/@connector.6/@role.0" type="response,write,OutboundPort,InboundPort,EventProcessorPort">
          <events name="posted"/>
        </port>
      </component>
      <component name="ShippingWorker" type="readendpoint,datareader" deploymentnode="//@interimmodels.9/@designmodel/@host.3/@node.0">
        <port name="listqueue" role="//@interimmodels.9/@designmodel/@connector.5/@role.0" type="read,OutboundPort,EventProcessorPort">
          <events name="renderqueue"/>
        </port>
      </component>
      <component name="QueueDB" type="repository,datastore" deploymentnode="//@interimmodels.9/@designmodel/@host.3/@node.1">
        <port name="writequeue" role="//@interimmodels.9/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="queuewritten"/>
        </port>
        <port name="readqueue" role="//@interimmodels.9/@designmodel/@connector.5/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="queuereaded"/>
        </port>
      </component>
      <component name="ShopBackend" type="client" deploymentnode="//@interimmodels.9/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface">
        <port name="listorder" role="//@interimmodels.9/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref" role="//@interimmodels.9/@designmodel/@connector.11/@role.1">
          <events name="checked"/>
        </port>
      </component>
      <component name="ssoserverref">
        <port name="authref" role="//@interimmodels.9/@designmodel/@connector.12/@role.1">
          <events name="tokenissued"/>
        </port>
      </component>
      <component name="bireportref">
        <port name="summariseref"/>
      </component>
      <connector name="userwire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.0"/>
      </connector>
      <connector name="cateloquewire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.1"/>
      </connector>
      <connector name="orderquerywire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.8/@role.0" connector="//@interimmodels.9/@designmodel/@connector.2"/>
      </connector>
      <connector name="cartwire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.3"/>
      </connector>
      <connector name="shippingwire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.6/@role.0" connector="//@interimmodels.9/@designmodel/@connector.4"/>
      </connector>
      <connector name="queuereadwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.5"/>
        <role name="readstorage" roletype="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.5"/>
      </connector>
      <connector name="shippinglogwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.6"/>
      </connector>
      <connector name="orderlogwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.11/@role.0" connector="//@interimmodels.9/@designmodel/@connector.7"/>
        <role name="writestorage" roletype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.7"/>
      </connector>
      <connector name="orderreadwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.8"/>
        <role name="readstorage" roletype="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.8"/>
      </connector>
      <connector name="orderwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.9"/>
        <role name="subscriber" roletype="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.7/@role.0" connector="//@interimmodels.9/@designmodel/@connector.9"/>
      </connector>
      <connector name="paywiretoremove" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writertoremove" roletype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.10"/>
        <role name="writestoragetoremove" roletype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.10"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.4/@role.0" connector="//@interimmodels.9/@designmodel/@connector.11">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.9/@designmodel/@connector.11">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <connector name="signwireref">
        <role name="requester" type="tolink" connector="//@interimmodels.9/@designmodel/@connector.12">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/sso.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.9/@designmodel/@connector.12">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/sso.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.9/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.9/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.9/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.9/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.9/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.9/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.9/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.4" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.9/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.9/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.9/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.9/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.9/@designmodel/@archstyle.4/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.9/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.9/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.9/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.9/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.9/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.9/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.9/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.9/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.9/@designmodel" counterExample="" visitedStates="15" verifyTime="0.0056955" testport="//@interimmodels.9/@designmodel/@component.0/@port.3" traceExample="init -> ShopFrontend_shop_itemadded -> ShopFrontend_cartwire_requester_process -> cartwire_req!48 -> cartwire_req?48 -> CartsService_cartwire_responder_invoke -> CartsService_manage_saveitem -> CartsService_cartwire_responder_process -> cartwire_res!48 -> cartwire_res?48" exprText="[]  (ShopFrontend.shop.itemadded -> &lt;> CartsService.manage.saveitem)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.0/@port.3/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.9/@designmodel" counterExample="" visitedStates="63" verifyTime="0.0112015" testport="//@interimmodels.9/@designmodel/@component.0/@port.2" traceExample="init -> ShopFrontend_order_purchased -> ShopFrontend_orderwire_publisher_process -> orderwire_pub!79 -> orderwire_pub?79 -> OrdersService_orderlogwire_writer_request -> orderlogwire_req!79 -> orderlogwire_req?79 -> OrdersDB_orderlogwire_writestorage_invoke -> OrdersDB_writeorder_orderwritten -> OrdersDB_orderlogwire_writestorage_process -> orderlogwire_res!79 -> orderlogwire_res?79 -> OrdersService_postorder_check -> OrdersService_postorder_save -> OrdersService_orderlogwire_writer_process -> OrdersService_orderlogwire_writer_Skip -> OrdersService_paywire_requester_process -> paywire_req!79 -> paywire_req?79 -> Payment_paywire_responder_invoke -> Payment_pay_paid -> Payment_paywire_responder_process -> paywire_res!79 -> paywire_res?79 -> OrdersService_paywire_requester_Skip -> OrdersService_shippingwire_requester_process -> shippingwire_req!79 -> shippingwire_req?79 -> ShippingService_shippingwire_responder_invoke -> ShippingService_shippinglogwire_writer_request -> shippinglogwire_req!79 -> shippinglogwire_req?79 -> QueueDB_shippinglogwire_writestorage_invoke -> QueueDB_writequeue_queuewritten -> QueueDB_shippinglogwire_writestorage_process -> shippinglogwire_res!79 -> shippinglogwire_res?79 -> ShippingService_postshipping_posted -> ShippingService_shippinglogwire_writer_process -> ShippingService_shippinglogwire_writer_Skip -> ShippingService_shippingwire_responder_process -> shippingwire_res!79 -> shippingwire_res?79 -> OrdersService_shippingwire_requester_Skip -> OrdersService_orderwire_subscriber_process" exprText="[]  (Payment.pay.paid -> &lt;> ShippingService.postshipping.posted)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.9/@designmodel" visitedStates="10" verifyTime="0.005912" testport="//@interimmodels.9/@designmodel/@component.0/@port.3" traceExample="init -> ShopFrontend_shop_itemadded -> ShopFrontend_cartwire_requester_process -> cartwire_req!51 -> cartwire_req?51 -> CartsService_cartwire_responder_invoke -> CartsService_manage_saveitem -> CartsService_cartwire_responder_process -> cartwire_res!51 -> cartwire_res?51" exprText="[]  (OrdersService.postorder.save -> &lt;> Payment.pay.paid)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.3/@port.0/@events.1" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.9/@designmodel" counterExample="" visitedStates="15" verifyTime="0.0511383" testport="//@interimmodels.9/@designmodel/@component.0/@port.0" traceExample="init -> ShopFrontend_login_submit -> ShopFrontend_userwire_requester_process -> userwire_req!38 -> userwire_req?38 -> UserService_userwire_responder_invoke -> UserService_auth_checked -> UserService_userwire_responder_process -> userwire_res!38 -> userwire_res?38" exprText="[]  (ShopFrontend.login.submit -> &lt;> UserService.auth.checked)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.9/@designmodel" counterExample="init -> ShopFrontend_browse_read -> ShopFrontend_cateloquewire_requester_process -> cateloquewire_req!62 -> cateloquewire_req?62 -> CateloqueService_cateloquewire_responder_invoke -> CateloqueService_list_query -> CateloqueService_cateloquewire_responder_process -> cateloquewire_res!62 -> cateloquewire_res?62" visitedStates="24" verifyTime="0.005226199999999999" testport="//@interimmodels.9/@designmodel/@component.0/@port.1" traceExample="init -> ShopFrontend_browse_read -> ShopFrontend_cateloquewire_requester_process -> cateloquewire_req!91 -> cateloquewire_req?91 -> CateloqueService_cateloquewire_responder_invoke -> CateloqueService_list_query -> CateloqueService_cateloquewire_responder_process -> cateloquewire_res!91 -> cateloquewire_res?91" exprText="[]  (&lt;> ShopFrontend.browse.read -> &lt;> CateloqueService.list.query)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop6" model="//@interimmodels.9/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0045632" testport="//@interimmodels.9/@designmodel/@component.10/@port.0" traceExample="init -> ShopBackend_listorder_renderlist -> ShopBackend_orderquerywire_requester_process -> orderquerywire_req!39 -> orderquerywire_req?39 -> OrdersService_orderquerywire_responder_invoke -> OrdersService_get_ack -> OrdersService_orderreadwire_reader_process -> orderreadwire_req!39 -> orderreadwire_req?39 -> OrdersDB_orderreadwire_readstorage_invoke -> OrdersDB_queryorder_orderreaded -> OrdersDB_orderreadwire_readstorage_process -> orderreadwire_res!39 -> orderreadwire_res?39 -> OrdersService_orderreadwire_reader_Skip -> OrdersService_orderquerywire_responder_process -> orderquerywire_res!39 -> orderquerywire_res?39" exprText="[]  (ShopBackend.listorder.renderlist -> &lt;> OrdersService.get.ack)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.5">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.10/@port.0/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.5/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.3/@port.1/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop7" model="//@interimmodels.9/@designmodel" counterExample="" visitedStates="59" verifyTime="0.0096414" testport="//@interimmodels.9/@designmodel/@component.0/@port.2" traceExample="init -> ShopFrontend_order_purchased -> ShopFrontend_orderwire_publisher_process -> orderwire_pub!93 -> orderwire_pub?93 -> OrdersService_orderlogwire_writer_request -> orderlogwire_req!93 -> orderlogwire_req?93 -> OrdersDB_orderlogwire_writestorage_invoke -> OrdersDB_writeorder_orderwritten -> OrdersDB_orderlogwire_writestorage_process -> orderlogwire_res!93 -> orderlogwire_res?93 -> OrdersService_postorder_check -> OrdersService_postorder_save -> OrdersService_orderlogwire_writer_process -> OrdersService_orderlogwire_writer_Skip -> OrdersService_paywire_requester_process -> paywire_req!93 -> paywire_req?93 -> Payment_paywire_responder_invoke -> Payment_pay_paid -> Payment_paywire_responder_process -> paywire_res!93 -> paywire_res?93 -> OrdersService_paywire_requester_Skip -> OrdersService_shippingwire_requester_process -> shippingwire_req!93 -> shippingwire_req?93 -> ShippingService_shippingwire_responder_invoke -> ShippingService_shippinglogwire_writer_request -> shippinglogwire_req!93 -> shippinglogwire_req?93 -> QueueDB_shippinglogwire_writestorage_invoke -> QueueDB_writequeue_queuewritten -> QueueDB_shippinglogwire_writestorage_process -> shippinglogwire_res!93 -> shippinglogwire_res?93 -> ShippingService_postshipping_posted -> ShippingService_shippinglogwire_writer_process -> ShippingService_shippinglogwire_writer_Skip -> ShippingService_shippingwire_responder_process -> shippingwire_res!93 -> shippingwire_res?93 -> OrdersService_shippingwire_requester_Skip -> OrdersService_orderwire_subscriber_process" exprText="[]  (ShopFrontend.order.purchased -> &lt;> OrdersService.postorder.save)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.6">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.3/@port.0/@events.1" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.0/@port.2/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.6/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.9/@designmodel/@component.3/@port.0" exprText="[]  (OrdersService.postorder.save-> &lt;> paymentgatewayref.commitref.checked)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="sso1" testport="//@interimmodels.9/@designmodel/@component.0/@port.4" exprText="[]  (ShopFrontend.sloginref.submit -> &lt;> ssoserverref.authref.tokenissued)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="report1" testport="//@interimmodels.9/@designmodel/@component.13/@port.0" exprText="[]  (bireportref.summariseref.generated -> &lt;> OrdersService.get.ack)"/>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="NodeJSContainer1" component="//@interimmodels.9/@designmodel/@component.0 //@interimmodels.9/@designmodel/@component.10">
          <port name="port" portNumber="15551" node="//@interimmodels.9/@designmodel/@host.0/@node.0" namedport="//@interimmodels.9/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="15552" node="//@interimmodels.9/@designmodel/@host.0/@node.0" namedport="//@interimmodels.9/@designmodel/@component.0/@port.2"/>
          <port name="port" portNumber="15553" node="//@interimmodels.9/@designmodel/@host.0/@node.0" namedport="//@interimmodels.9/@designmodel/@component.10/@port.0"/>
          <port name="port" portNumber="15554" node="//@interimmodels.9/@designmodel/@host.0/@node.0" namedport="//@interimmodels.9/@designmodel/@component.0/@port.3"/>
          <port name="port" portNumber="15555" node="//@interimmodels.9/@designmodel/@host.0/@node.0" namedport="//@interimmodels.9/@designmodel/@component.0/@port.1"/>
        </node>
        <node name="GoContainer3" component="//@interimmodels.9/@designmodel/@component.1">
          <port name="port" portNumber="80" node="//@interimmodels.9/@designmodel/@host.0/@node.1" namedport="//@interimmodels.9/@designmodel/@component.1/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="SecureServer">
        <node name="GoContainer1" component="//@interimmodels.9/@designmodel/@component.2">
          <port name="port" portNumber="80" node="//@interimmodels.9/@designmodel/@host.1/@node.0" namedport="//@interimmodels.9/@designmodel/@component.2/@port.0" hasFirewall="true"/>
        </node>
        <node name="GoContainer2" component="//@interimmodels.9/@designmodel/@component.6">
          <port name="port" portNumber="80" node="//@interimmodels.9/@designmodel/@host.1/@node.1" namedport="//@interimmodels.9/@designmodel/@component.6/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="LocalServer">
        <node name="JEEContainer1" component="//@interimmodels.9/@designmodel/@component.3 //@interimmodels.9/@designmodel/@component.5">
          <port name="port" portNumber="80" namedport="//@interimmodels.9/@designmodel/@component.3/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true"/>
          <port name="port" portNumber="15561" node="//@interimmodels.9/@designmodel/@host.2/@node.0" namedport="//@interimmodels.9/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15562" node="//@interimmodels.9/@designmodel/@host.2/@node.0" namedport="//@interimmodels.9/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15563" node="//@interimmodels.9/@designmodel/@host.2/@node.0" namedport="//@interimmodels.9/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15564" node="//@interimmodels.9/@designmodel/@host.2/@node.0" namedport="//@interimmodels.9/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15566" node="//@interimmodels.9/@designmodel/@host.2/@node.0" namedport="//@interimmodels.9/@designmodel/@component.3/@port.1"/>
          <port name="port" portNumber="81" node="//@interimmodels.9/@designmodel/@host.2/@node.0" namedport="//@interimmodels.9/@designmodel/@component.3/@port.1"/>
        </node>
        <node name="MySQL1" component="//@interimmodels.9/@designmodel/@component.4">
          <port name="port" portNumber="3306" node="//@interimmodels.9/@designmodel/@host.2/@node.1" namedport="//@interimmodels.9/@designmodel/@component.4/@port.0 //@interimmodels.9/@designmodel/@component.4/@port.1"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node name="JEEContainer4" component="//@interimmodels.9/@designmodel/@component.7 //@interimmodels.9/@designmodel/@component.8">
          <port name="port" portNumber="80" node="//@interimmodels.9/@designmodel/@host.3/@node.0" namedport="//@interimmodels.9/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
          <port name="port" portNumber="15571" node="//@interimmodels.9/@designmodel/@host.3/@node.0" namedport="//@interimmodels.9/@designmodel/@component.7/@port.0"/>
          <port name="port" portNumber="15572" node="//@interimmodels.9/@designmodel/@host.3/@node.0" namedport="//@interimmodels.9/@designmodel/@component.7/@port.0"/>
        </node>
        <node name="MySQL2" component="//@interimmodels.9/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.9/@designmodel/@host.3/@node.1" namedport="//@interimmodels.9/@designmodel/@component.9/@port.0 //@interimmodels.9/@designmodel/@component.9/@port.1"/>
        </node>
      </host>
      <link name="link2" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.0/@node.0/@port.1" target="//@interimmodels.9/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link3" source="//@interimmodels.9/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link4" source="//@interimmodels.9/@designmodel/@host.2/@node.0/@port.2"/>
      <link name="link5" target="//@interimmodels.9/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.0/@node.0/@port.3"/>
      <link name="link9" source="//@interimmodels.9/@designmodel/@host.0/@node.0/@port.4" target="//@interimmodels.9/@designmodel/@host.0/@node.1/@port.0"/>
      <link name="link11" source="//@interimmodels.9/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link12" source="//@interimmodels.9/@designmodel/@host.3/@node.0/@port.2"/>
      <link name="link13" target="//@interimmodels.9/@designmodel/@host.3/@node.1/@port.0"/>
      <link name="link14" target="//@interimmodels.9/@designmodel/@host.3/@node.1/@port.0"/>
      <link name="link16" source="//@interimmodels.9/@designmodel/@host.2/@node.0/@port.5" target="//@interimmodels.9/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.0/@node.0/@port.2" target="//@interimmodels.9/@designmodel/@host.2/@node.0/@port.6"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="1" description="report - establish-link">
    <designmodel name="interimreport1">
      <component name="ShopFrontend" type="client,broadcaster" deploymentnode="//@interimmodels.10/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,LeastPriviledge">
        <port name="login" role="//@interimmodels.10/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="submit"/>
        </port>
        <port name="browse" role="//@interimmodels.10/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="read"/>
        </port>
        <port name="order" role="//@interimmodels.10/@designmodel/@connector.9/@role.0" type="broadcast,OutboundPort">
          <events name="purchased"/>
        </port>
        <port name="shop" role="//@interimmodels.10/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="itemadded"/>
        </port>
        <port name="sloginref" role="//@interimmodels.10/@designmodel/@connector.12/@role.0">
          <events name="submit"/>
        </port>
      </component>
      <component name="CateloqueService" type="server" deploymentnode="//@interimmodels.10/@designmodel/@host.0/@node.1" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="list" role="//@interimmodels.10/@designmodel/@connector.1/@role.1" type="response,InboundPort">
          <events name="query"/>
        </port>
      </component>
      <component name="UserService" type="server" deploymentnode="//@interimmodels.10/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DefenseInDepth,DenialOfService">
        <port name="auth" role="//@interimmodels.10/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="checked"/>
        </port>
      </component>
      <component name="OrdersService" type="client,server,listener,eventconsumer,readendpoint,datawriter,datareader" deploymentnode="//@interimmodels.10/@designmodel/@host.2/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization,DenialOfService,DataTampering">
        <port name="postorder" role="//@interimmodels.10/@designmodel/@connector.4/@role.0 //@interimmodels.10/@designmodel/@connector.7/@role.0 //@interimmodels.10/@designmodel/@connector.9/@role.1 //@interimmodels.10/@designmodel/@connector.11/@role.0" type="request,listen,write,OutboundPort,InboundPort,EventProcessorPort">
          <events name="check" next="//@interimmodels.10/@designmodel/@component.3/@port.0/@events.1"/>
          <events name="save"/>
        </port>
        <port name="get" role="//@interimmodels.10/@designmodel/@connector.2/@role.1 //@interimmodels.10/@designmodel/@connector.8/@role.0" type="response,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="ack"/>
        </port>
      </component>
      <component name="OrdersDB" type="repository,datastore" deploymentnode="//@interimmodels.10/@designmodel/@host.2/@node.1">
        <port name="writeorder" role="//@interimmodels.10/@designmodel/@connector.7/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="orderwritten"/>
        </port>
        <port name="queryorder" role="//@interimmodels.10/@designmodel/@connector.8/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="orderreaded"/>
        </port>
      </component>
      <component name="CartsService" type="server" deploymentnode="//@interimmodels.10/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="manage" role="//@interimmodels.10/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="saveitem"/>
        </port>
      </component>
      <component name="Payment" type="repository,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.10/@designmodel/@host.1/@node.1" criticalLevel="High" securityCharacters="DefenseInDepth,Compartmentalization">
        <port name="pay" type="store,InboundPort,TamperingProofPort">
          <events name="paid"/>
        </port>
      </component>
      <component name="ShippingService" type="server,datawriter" deploymentnode="//@interimmodels.10/@designmodel/@host.3/@node.0" securityCharacters="Compartmentalization">
        <port name="postshipping" role="//@interimmodels.10/@designmodel/@connector.4/@role.1 //@interimmodels.10/@designmodel/@connector.6/@role.0" type="response,write,OutboundPort,InboundPort,EventProcessorPort">
          <events name="posted"/>
        </port>
      </component>
      <component name="ShippingWorker" type="readendpoint,datareader" deploymentnode="//@interimmodels.10/@designmodel/@host.3/@node.0">
        <port name="listqueue" role="//@interimmodels.10/@designmodel/@connector.5/@role.0" type="read,OutboundPort,EventProcessorPort">
          <events name="renderqueue"/>
        </port>
      </component>
      <component name="QueueDB" type="repository,datastore" deploymentnode="//@interimmodels.10/@designmodel/@host.3/@node.1">
        <port name="writequeue" role="//@interimmodels.10/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="queuewritten"/>
        </port>
        <port name="readqueue" role="//@interimmodels.10/@designmodel/@connector.5/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="queuereaded"/>
        </port>
      </component>
      <component name="ShopBackend" type="client" deploymentnode="//@interimmodels.10/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface">
        <port name="listorder" role="//@interimmodels.10/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="paymentgatewayref">
        <port name="commitref" role="//@interimmodels.10/@designmodel/@connector.11/@role.1">
          <events name="checked"/>
        </port>
      </component>
      <component name="ssoserverref">
        <port name="authref" role="//@interimmodels.10/@designmodel/@connector.12/@role.1">
          <events name="tokenissued"/>
        </port>
      </component>
      <component name="bireportref">
        <port name="summariseref" role="//@interimmodels.10/@designmodel/@connector.2/@role.0"/>
      </component>
      <connector name="userwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.0"/>
      </connector>
      <connector name="cateloquewire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.1"/>
      </connector>
      <connector name="orderquerywire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="tolink" connector="//@interimmodels.10/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.8/@role.0" connector="//@interimmodels.10/@designmodel/@connector.2"/>
      </connector>
      <connector name="cartwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.3"/>
      </connector>
      <connector name="shippingwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.6/@role.0" connector="//@interimmodels.10/@designmodel/@connector.4"/>
      </connector>
      <connector name="queuereadwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.5"/>
        <role name="readstorage" roletype="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.5"/>
      </connector>
      <connector name="shippinglogwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.6"/>
      </connector>
      <connector name="orderlogwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.11/@role.0" connector="//@interimmodels.10/@designmodel/@connector.7"/>
        <role name="writestorage" roletype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.7"/>
      </connector>
      <connector name="orderreadwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.8"/>
        <role name="readstorage" roletype="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.8"/>
      </connector>
      <connector name="orderwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.9"/>
        <role name="subscriber" roletype="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.7/@role.0" connector="//@interimmodels.10/@designmodel/@connector.9"/>
      </connector>
      <connector name="paywiretoremove" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0">
        <role name="writertoremove" roletype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.10"/>
        <role name="writestoragetoremove" roletype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.10"/>
      </connector>
      <connector name="paywireref">
        <role name="requester" type="tolink" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.4/@role.0" connector="//@interimmodels.10/@designmodel/@connector.11">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/payment.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.10/@designmodel/@connector.11">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/payment.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <connector name="signwireref">
        <role name="requester" type="tolink" connector="//@interimmodels.10/@designmodel/@connector.12">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/sso.arch#//@archstyle.0/@connectortype.0/@roletype.0"/>
        </role>
        <role name="responder" type="tolink" connector="//@interimmodels.10/@designmodel/@connector.12">
          <roletype href="platform:/resource/nz.auckland.arch.testrefactor.eshop/sso.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
        </role>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.10/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.10/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.10/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.10/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.10/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.10/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.10/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.4" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.10/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.10/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.10/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.10/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.10/@designmodel/@archstyle.4/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.10/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.10/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.10/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.10/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.10/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.10/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.10/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.10/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.10/@designmodel" counterExample="" visitedStates="15" verifyTime="0.0056955" testport="//@interimmodels.10/@designmodel/@component.0/@port.3" traceExample="init -> ShopFrontend_shop_itemadded -> ShopFrontend_cartwire_requester_process -> cartwire_req!48 -> cartwire_req?48 -> CartsService_cartwire_responder_invoke -> CartsService_manage_saveitem -> CartsService_cartwire_responder_process -> cartwire_res!48 -> cartwire_res?48" exprText="[]  (ShopFrontend.shop.itemadded -> &lt;> CartsService.manage.saveitem)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.0/@port.3/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.10/@designmodel" counterExample="" visitedStates="63" verifyTime="0.0112015" testport="//@interimmodels.10/@designmodel/@component.0/@port.2" traceExample="init -> ShopFrontend_order_purchased -> ShopFrontend_orderwire_publisher_process -> orderwire_pub!79 -> orderwire_pub?79 -> OrdersService_orderlogwire_writer_request -> orderlogwire_req!79 -> orderlogwire_req?79 -> OrdersDB_orderlogwire_writestorage_invoke -> OrdersDB_writeorder_orderwritten -> OrdersDB_orderlogwire_writestorage_process -> orderlogwire_res!79 -> orderlogwire_res?79 -> OrdersService_postorder_check -> OrdersService_postorder_save -> OrdersService_orderlogwire_writer_process -> OrdersService_orderlogwire_writer_Skip -> OrdersService_paywire_requester_process -> paywire_req!79 -> paywire_req?79 -> Payment_paywire_responder_invoke -> Payment_pay_paid -> Payment_paywire_responder_process -> paywire_res!79 -> paywire_res?79 -> OrdersService_paywire_requester_Skip -> OrdersService_shippingwire_requester_process -> shippingwire_req!79 -> shippingwire_req?79 -> ShippingService_shippingwire_responder_invoke -> ShippingService_shippinglogwire_writer_request -> shippinglogwire_req!79 -> shippinglogwire_req?79 -> QueueDB_shippinglogwire_writestorage_invoke -> QueueDB_writequeue_queuewritten -> QueueDB_shippinglogwire_writestorage_process -> shippinglogwire_res!79 -> shippinglogwire_res?79 -> ShippingService_postshipping_posted -> ShippingService_shippinglogwire_writer_process -> ShippingService_shippinglogwire_writer_Skip -> ShippingService_shippingwire_responder_process -> shippingwire_res!79 -> shippingwire_res?79 -> OrdersService_shippingwire_requester_Skip -> OrdersService_orderwire_subscriber_process" exprText="[]  (Payment.pay.paid -> &lt;> ShippingService.postshipping.posted)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.10/@designmodel" visitedStates="10" verifyTime="0.005912" testport="//@interimmodels.10/@designmodel/@component.0/@port.3" traceExample="init -> ShopFrontend_shop_itemadded -> ShopFrontend_cartwire_requester_process -> cartwire_req!51 -> cartwire_req?51 -> CartsService_cartwire_responder_invoke -> CartsService_manage_saveitem -> CartsService_cartwire_responder_process -> cartwire_res!51 -> cartwire_res?51" exprText="[]  (OrdersService.postorder.save -> &lt;> Payment.pay.paid)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.3/@port.0/@events.1" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.10/@designmodel" counterExample="" visitedStates="15" verifyTime="0.0511383" testport="//@interimmodels.10/@designmodel/@component.0/@port.0" traceExample="init -> ShopFrontend_login_submit -> ShopFrontend_userwire_requester_process -> userwire_req!38 -> userwire_req?38 -> UserService_userwire_responder_invoke -> UserService_auth_checked -> UserService_userwire_responder_process -> userwire_res!38 -> userwire_res?38" exprText="[]  (ShopFrontend.login.submit -> &lt;> UserService.auth.checked)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.10/@designmodel" counterExample="init -> ShopFrontend_browse_read -> ShopFrontend_cateloquewire_requester_process -> cateloquewire_req!62 -> cateloquewire_req?62 -> CateloqueService_cateloquewire_responder_invoke -> CateloqueService_list_query -> CateloqueService_cateloquewire_responder_process -> cateloquewire_res!62 -> cateloquewire_res?62" visitedStates="24" verifyTime="0.005226199999999999" testport="//@interimmodels.10/@designmodel/@component.0/@port.1" traceExample="init -> ShopFrontend_browse_read -> ShopFrontend_cateloquewire_requester_process -> cateloquewire_req!91 -> cateloquewire_req?91 -> CateloqueService_cateloquewire_responder_invoke -> CateloqueService_list_query -> CateloqueService_cateloquewire_responder_process -> cateloquewire_res!91 -> cateloquewire_res?91" exprText="[]  (&lt;> ShopFrontend.browse.read -> &lt;> CateloqueService.list.query)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop6" model="//@interimmodels.10/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0045632" testport="//@interimmodels.10/@designmodel/@component.10/@port.0" traceExample="init -> ShopBackend_listorder_renderlist -> ShopBackend_orderquerywire_requester_process -> orderquerywire_req!39 -> orderquerywire_req?39 -> OrdersService_orderquerywire_responder_invoke -> OrdersService_get_ack -> OrdersService_orderreadwire_reader_process -> orderreadwire_req!39 -> orderreadwire_req?39 -> OrdersDB_orderreadwire_readstorage_invoke -> OrdersDB_queryorder_orderreaded -> OrdersDB_orderreadwire_readstorage_process -> orderreadwire_res!39 -> orderreadwire_res?39 -> OrdersService_orderreadwire_reader_Skip -> OrdersService_orderquerywire_responder_process -> orderquerywire_res!39 -> orderquerywire_res?39" exprText="[]  (ShopBackend.listorder.renderlist -> &lt;> OrdersService.get.ack)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.5">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.10/@port.0/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.5/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.3/@port.1/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop7" model="//@interimmodels.10/@designmodel" counterExample="" visitedStates="59" verifyTime="0.0096414" testport="//@interimmodels.10/@designmodel/@component.0/@port.2" traceExample="init -> ShopFrontend_order_purchased -> ShopFrontend_orderwire_publisher_process -> orderwire_pub!93 -> orderwire_pub?93 -> OrdersService_orderlogwire_writer_request -> orderlogwire_req!93 -> orderlogwire_req?93 -> OrdersDB_orderlogwire_writestorage_invoke -> OrdersDB_writeorder_orderwritten -> OrdersDB_orderlogwire_writestorage_process -> orderlogwire_res!93 -> orderlogwire_res?93 -> OrdersService_postorder_check -> OrdersService_postorder_save -> OrdersService_orderlogwire_writer_process -> OrdersService_orderlogwire_writer_Skip -> OrdersService_paywire_requester_process -> paywire_req!93 -> paywire_req?93 -> Payment_paywire_responder_invoke -> Payment_pay_paid -> Payment_paywire_responder_process -> paywire_res!93 -> paywire_res?93 -> OrdersService_paywire_requester_Skip -> OrdersService_shippingwire_requester_process -> shippingwire_req!93 -> shippingwire_req?93 -> ShippingService_shippingwire_responder_invoke -> ShippingService_shippinglogwire_writer_request -> shippinglogwire_req!93 -> shippinglogwire_req?93 -> QueueDB_shippinglogwire_writestorage_invoke -> QueueDB_writequeue_queuewritten -> QueueDB_shippinglogwire_writestorage_process -> shippinglogwire_res!93 -> shippinglogwire_res?93 -> ShippingService_postshipping_posted -> ShippingService_shippinglogwire_writer_process -> ShippingService_shippinglogwire_writer_Skip -> ShippingService_shippingwire_responder_process -> shippingwire_res!93 -> shippingwire_res?93 -> OrdersService_shippingwire_requester_Skip -> OrdersService_orderwire_subscriber_process" exprText="[]  (ShopFrontend.order.purchased -> &lt;> OrdersService.postorder.save)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.6">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.3/@port.0/@events.1" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.0/@port.2/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.6/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="payment1" testport="//@interimmodels.10/@designmodel/@component.3/@port.0" exprText="[]  (OrdersService.postorder.save-> &lt;> paymentgatewayref.commitref.checked)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="sso1" testport="//@interimmodels.10/@designmodel/@component.0/@port.4" exprText="[]  (ShopFrontend.sloginref.submit -> &lt;> ssoserverref.authref.tokenissued)"/>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="report1" testport="//@interimmodels.10/@designmodel/@component.13/@port.0" exprText="[]  (bireportref.summariseref.generated -> &lt;> OrdersService.get.ack)"/>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="NodeJSContainer1" component="//@interimmodels.10/@designmodel/@component.0 //@interimmodels.10/@designmodel/@component.10">
          <port name="port" portNumber="15551" node="//@interimmodels.10/@designmodel/@host.0/@node.0" namedport="//@interimmodels.10/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="15552" node="//@interimmodels.10/@designmodel/@host.0/@node.0" namedport="//@interimmodels.10/@designmodel/@component.0/@port.2"/>
          <port name="port" portNumber="15553" node="//@interimmodels.10/@designmodel/@host.0/@node.0" namedport="//@interimmodels.10/@designmodel/@component.10/@port.0"/>
          <port name="port" portNumber="15554" node="//@interimmodels.10/@designmodel/@host.0/@node.0" namedport="//@interimmodels.10/@designmodel/@component.0/@port.3"/>
          <port name="port" portNumber="15555" node="//@interimmodels.10/@designmodel/@host.0/@node.0" namedport="//@interimmodels.10/@designmodel/@component.0/@port.1"/>
        </node>
        <node name="GoContainer3" component="//@interimmodels.10/@designmodel/@component.1">
          <port name="port" portNumber="80" node="//@interimmodels.10/@designmodel/@host.0/@node.1" namedport="//@interimmodels.10/@designmodel/@component.1/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="SecureServer">
        <node name="GoContainer1" component="//@interimmodels.10/@designmodel/@component.2">
          <port name="port" portNumber="80" node="//@interimmodels.10/@designmodel/@host.1/@node.0" namedport="//@interimmodels.10/@designmodel/@component.2/@port.0" hasFirewall="true"/>
        </node>
        <node name="GoContainer2" component="//@interimmodels.10/@designmodel/@component.6">
          <port name="port" portNumber="80" node="//@interimmodels.10/@designmodel/@host.1/@node.1" namedport="//@interimmodels.10/@designmodel/@component.6/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="LocalServer">
        <node name="JEEContainer1" component="//@interimmodels.10/@designmodel/@component.3 //@interimmodels.10/@designmodel/@component.5">
          <port name="port" portNumber="80" namedport="//@interimmodels.10/@designmodel/@component.3/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true"/>
          <port name="port" portNumber="15561" node="//@interimmodels.10/@designmodel/@host.2/@node.0" namedport="//@interimmodels.10/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15562" node="//@interimmodels.10/@designmodel/@host.2/@node.0" namedport="//@interimmodels.10/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15563" node="//@interimmodels.10/@designmodel/@host.2/@node.0" namedport="//@interimmodels.10/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15564" node="//@interimmodels.10/@designmodel/@host.2/@node.0" namedport="//@interimmodels.10/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="15566" node="//@interimmodels.10/@designmodel/@host.2/@node.0" namedport="//@interimmodels.10/@designmodel/@component.3/@port.1"/>
          <port name="port" portNumber="81" node="//@interimmodels.10/@designmodel/@host.2/@node.0" namedport="//@interimmodels.10/@designmodel/@component.3/@port.1"/>
        </node>
        <node name="MySQL1" component="//@interimmodels.10/@designmodel/@component.4">
          <port name="port" portNumber="3306" node="//@interimmodels.10/@designmodel/@host.2/@node.1" namedport="//@interimmodels.10/@designmodel/@component.4/@port.0 //@interimmodels.10/@designmodel/@component.4/@port.1"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node name="JEEContainer4" component="//@interimmodels.10/@designmodel/@component.7 //@interimmodels.10/@designmodel/@component.8">
          <port name="port" portNumber="80" node="//@interimmodels.10/@designmodel/@host.3/@node.0" namedport="//@interimmodels.10/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
          <port name="port" portNumber="15571" node="//@interimmodels.10/@designmodel/@host.3/@node.0" namedport="//@interimmodels.10/@designmodel/@component.7/@port.0"/>
          <port name="port" portNumber="15572" node="//@interimmodels.10/@designmodel/@host.3/@node.0" namedport="//@interimmodels.10/@designmodel/@component.7/@port.0"/>
        </node>
        <node name="MySQL2" component="//@interimmodels.10/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.10/@designmodel/@host.3/@node.1" namedport="//@interimmodels.10/@designmodel/@component.9/@port.0 //@interimmodels.10/@designmodel/@component.9/@port.1"/>
        </node>
      </host>
      <link name="link2" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.0/@node.0/@port.1" target="//@interimmodels.10/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link3" source="//@interimmodels.10/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link4" source="//@interimmodels.10/@designmodel/@host.2/@node.0/@port.2"/>
      <link name="link5" target="//@interimmodels.10/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.0/@node.0/@port.3"/>
      <link name="link9" source="//@interimmodels.10/@designmodel/@host.0/@node.0/@port.4" target="//@interimmodels.10/@designmodel/@host.0/@node.1/@port.0"/>
      <link name="link11" source="//@interimmodels.10/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link12" source="//@interimmodels.10/@designmodel/@host.3/@node.0/@port.2"/>
      <link name="link13" target="//@interimmodels.10/@designmodel/@host.3/@node.1/@port.0"/>
      <link name="link14" target="//@interimmodels.10/@designmodel/@host.3/@node.1/@port.0"/>
      <link name="link16" source="//@interimmodels.10/@designmodel/@host.2/@node.0/@port.5" target="//@interimmodels.10/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.0/@node.0/@port.2" target="//@interimmodels.10/@designmodel/@host.2/@node.0/@port.6"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
</arch:MigrationModel>
